{"version":3,"file":"c5ff13e0-de89958e8da82cda287f.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/templates/staking.tsx"],"sourcesContent":["import React from \"react\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport styled from \"@emotion/styled\"\nimport { Badge } from \"@chakra-ui/react\"\n\nimport ButtonLink from \"../components/ButtonLink\"\nimport ButtonDropdown, {\n  List as ButtonDropdownList,\n} from \"../components/ButtonDropdown\"\nimport Card from \"../components/Card\"\nimport ExpandableCard from \"../components/ExpandableCard\"\nimport DocLink from \"../components/DocLink\"\nimport Contributors from \"../components/Contributors\"\nimport SharedInfoBanner from \"../components/InfoBanner\"\nimport UpgradeStatus from \"../components/UpgradeStatus\"\nimport Link from \"../components/Link\"\nimport MarkdownTable from \"../components/MarkdownTable\"\nimport Logo from \"../components/Logo\"\nimport MeetupList from \"../components/MeetupList\"\nimport PageMetadata from \"../components/PageMetadata\"\nimport RandomAppList from \"../components/RandomAppList\"\nimport Roadmap from \"../components/Roadmap\"\nimport UpgradeTableOfContents from \"../components/UpgradeTableOfContents\"\nimport TableOfContents, {\n  Item as ItemTableOfContents,\n} from \"../components/TableOfContents\"\nimport FeedbackCard from \"../components/FeedbackCard\"\nimport SectionNav from \"../components/SectionNav\"\nimport {\n  Divider,\n  Paragraph,\n  Header1,\n  Header4,\n  InfoGrid,\n} from \"../components/SharedStyledComponents\"\nimport Emoji from \"../components/OldEmoji\"\nimport YouTube from \"../components/YouTube\"\nimport Breadcrumbs from \"../components/Breadcrumbs\"\nimport StakingLaunchpadWidget from \"../components/Staking/StakingLaunchpadWidget\"\nimport StakingProductsCardGrid from \"../components/Staking/StakingProductsCardGrid\"\nimport StakingComparison from \"../components/Staking/StakingComparison\"\nimport StakingHowSoloWorks from \"../components/Staking/StakingHowSoloWorks\"\nimport StakingConsiderations from \"../components/Staking/StakingConsiderations\"\nimport StakingCommunityCallout from \"../components/Staking/StakingCommunityCallout\"\nimport StakingGuides from \"../components/Staking/StakingGuides\"\n\nimport { isLangRightToLeft, TranslationKey } from \"../utils/translations\"\nimport { Context } from \"../types\"\nimport { Lang } from \"../utils/languages\"\nimport { getImage } from \"../utils/image\"\n\nconst Page = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin: 0 auto 4rem;\n\n  @media (min-width: ${(props) => props.theme.breakpoints.l}) {\n    padding-top: 4rem;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column;\n  }\n`\n\nconst InfoColumn = styled.aside`\n  display: flex;\n  flex-direction: column;\n  position: sticky;\n  top: 6.25rem; /* account for navbar */\n  height: calc(100vh - 80px);\n  flex: 0 1 330px;\n  margin: 0 2rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    display: none;\n  }\n`\n\nconst MobileButton = styled.div`\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    background: ${(props) => props.theme.colors.background};\n    box-shadow: 0 -1px 0px ${(props) => props.theme.colors.border};\n    width: 100%;\n    bottom: 0;\n    position: sticky;\n    padding: 2rem;\n    z-index: 99;\n    margin-bottom: 0rem;\n  }\n`\n\n// Apply styles for classes within markdown here\nconst ContentContainer = styled.article`\n  flex: 1 1 ${(props) => props.theme.breakpoints.l};\n  position: relative;\n  padding: 2rem;\n  padding-top: 0rem;\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.l}) {\n    h2:first-of-type {\n      margin-top: 0;\n    }\n  }\n\n  .featured {\n    padding-left: 1rem;\n    margin-left: -1rem;\n    border-left: 1px dotted ${(props) => props.theme.colors.primary};\n  }\n\n  .citation {\n    p {\n      color: ${(props) => props.theme.colors.text200};\n    }\n  }\n`\n\nconst Pre = styled.pre`\n  max-width: 100%;\n  overflow-x: scroll;\n  background-color: ${(props) => props.theme.colors.preBackground};\n  border-radius: 0.25rem;\n  padding: 1rem;\n  border: 1px solid ${(props) => props.theme.colors.preBorder};\n  white-space: pre-wrap;\n`\n\nconst InfoTitle = styled.h2`\n  font-size: 3rem;\n  font-weight: 700;\n  text-align: right;\n  margin-top: 0rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    text-align: left;\n    font-size: 2.5rem\n    display: none;\n  }\n`\n\nconst H2 = styled.h2`\n  font-size: 2rem;\n  font-weight: 700;\n  margin-top: 4rem;\n\n  a {\n    display: none;\n  }\n\n  /* Anchor tag styles */\n\n  a {\n    position: relative;\n    display: initial;\n    opacity: 0;\n    margin-left: -1.5em;\n    padding-right: 0.5rem;\n    font-size: 1rem;\n    vertical-align: middle;\n    &:hover {\n      display: initial;\n      fill: ${(props) => props.theme.colors.primary};\n      opacity: 1;\n    }\n  }\n\n  &:hover {\n    a {\n      display: initial;\n      fill: ${(props) => props.theme.colors.primary};\n      opacity: 1;\n    }\n  }\n`\n\nconst H3 = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 700;\n\n  a {\n    display: none;\n  }\n\n  /* Anchor tag styles */\n\n  a {\n    position: relative;\n    display: initial;\n    opacity: 0;\n    margin-left: -1.5em;\n    padding-right: 0.5rem;\n    font-size: 1rem;\n    vertical-align: middle;\n    &:hover {\n      display: initial;\n      fill: ${(props) => props.theme.colors.primary};\n      opacity: 1;\n    }\n  }\n\n  &:hover {\n    a {\n      display: initial;\n      fill: ${(props) => props.theme.colors.primary};\n      opacity: 1;\n    }\n  }\n`\n\nconst CardGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n\n  gap: 2rem;\n  h3 {\n    margin-top: 0;\n  }\n\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    grid-template-columns: repeat(1, 1fr);\n    margin: auto;\n  }\n`\n\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-top: 1rem;\n`\n\nconst SummaryPoint = styled.li`\n  color: ${(props) => props.theme.colors.text300};\n`\n\nconst StyledButtonDropdown = styled(ButtonDropdown)`\n  margin-bottom: 2rem;\n  display: flex;\n  justify-content: flex-end;\n  text-align: center;\n  @media (min-width: ${(props) => props.theme.breakpoints.s}) {\n    align-self: flex-end;\n  }\n`\n\nconst MobileButtonDropdown = styled(StyledButtonDropdown)`\n  margin-bottom: 0rem;\n  display: none;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    display: block;\n  }\n`\n\nconst Container = styled.div`\n  position: relative;\n`\n\nconst HeroContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2rem;\n  --height: 500px;\n  max-height: var(--height);\n  min-height: var(--height);\n  background: ${({ theme }) => theme.colors.layer2Gradient};\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column;\n    max-height: 100%;\n    padding-left: 0;\n    padding-right: 0;\n  }\n`\n\nconst Image = styled(GatsbyImage)`\n  flex: 1 1 100%;\n  background-repeat: no-repeat;\n  right: 0;\n  bottom: 0;\n  max-width: 400px;\n  @media (max-width: ${({ theme }) => theme.breakpoints.l}) {\n    width: 100%;\n    height: 100%;\n    max-height: 340px;\n    max-width: min(400px, 98%);\n    overflow: initial;\n    align-self: center;\n    margin: 0;\n  }\n`\n\nconst MobileTableOfContents = styled(TableOfContents)`\n  position: relative;\n  z-index: 2;\n`\n\nconst TitleCard = styled.div`\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 100%;\n`\n\nconst InfoBanner = styled(SharedInfoBanner)`\n  margin: 2rem 0;\n`\n\n// Note: you must pass components to MDXProvider in order to render them in markdown files\n// https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx/#mdxprovider\nconst components = {\n  a: Link,\n  h1: Header1,\n  h2: H2,\n  h3: H3,\n  h4: Header4,\n  p: Paragraph,\n  pre: Pre,\n  table: MarkdownTable,\n  MeetupList,\n  RandomAppList,\n  Roadmap,\n  Logo,\n  ButtonLink,\n  Contributors,\n  InfoBanner,\n  Card,\n  CardGrid,\n  InfoGrid,\n  Divider,\n  SectionNav,\n  Badge,\n  Emoji,\n  UpgradeStatus,\n  DocLink,\n  ExpandableCard,\n  YouTube,\n  StakingLaunchpadWidget,\n  StakingProductsCardGrid,\n  StakingComparison,\n  StakingHowSoloWorks,\n  StakingConsiderations,\n  StakingGuides,\n}\n\nconst StakingPage = ({\n  data: { pageData: mdx },\n  location,\n}: PageProps<Queries.StakingPageQuery, Context>) => {\n  if (!mdx?.frontmatter)\n    throw new Error(\n      \"Staking page template query does not return expected values\"\n    )\n  if (!mdx?.frontmatter?.title)\n    throw new Error(\"Required `title` property missing for staking template\")\n\n  const isRightToLeft = isLangRightToLeft(mdx.frontmatter.lang as Lang)\n  const tocItems = mdx.tableOfContents?.items as Array<ItemTableOfContents>\n  const { summaryPoints } = mdx.frontmatter\n\n  const dropdownLinks: ButtonDropdownList = {\n    text: \"Staking Options\" as TranslationKey,\n    ariaLabel: \"Staking options dropdown menu\",\n    items: [\n      {\n        text: \"Staking home\" as TranslationKey,\n        to: \"/staking/\",\n        matomo: {\n          eventCategory: `Staking dropdown`,\n          eventAction: `Clicked`,\n          eventName: \"clicked staking home\",\n        },\n      },\n      {\n        text: \"Solo staking\" as TranslationKey,\n        to: \"/staking/solo/\",\n        matomo: {\n          eventCategory: `Staking dropdown`,\n          eventAction: `Clicked`,\n          eventName: \"clicked solo staking\",\n        },\n      },\n      {\n        text: \"Staking as a service\" as TranslationKey,\n        to: \"/staking/saas/\",\n        matomo: {\n          eventCategory: `Staking dropdown`,\n          eventAction: `Clicked`,\n          eventName: \"clicked staking as a service\",\n        },\n      },\n      {\n        text: \"Pooled staking\" as TranslationKey,\n        to: \"/staking/pools/\",\n        matomo: {\n          eventCategory: `Staking dropdown`,\n          eventAction: `Clicked`,\n          eventName: \"clicked pooled staking\",\n        },\n      },\n    ],\n  }\n\n  return (\n    <Container>\n      <HeroContainer>\n        <TitleCard>\n          <Breadcrumbs slug={location.pathname} />\n          <Title>{mdx.frontmatter.title}</Title>\n          <ul>\n            {(summaryPoints || []).map((point, idx) => (\n              <SummaryPoint key={idx}>{point}</SummaryPoint>\n            ))}\n          </ul>\n          <MobileTableOfContents\n            items={tocItems}\n            maxDepth={mdx.frontmatter.sidebarDepth!}\n            isMobile={true}\n          />\n        </TitleCard>\n        <Image\n          image={getImage(mdx.frontmatter.image)!}\n          alt={mdx.frontmatter.alt || \"\"}\n          objectFit=\"contain\"\n        />\n      </HeroContainer>\n      <Page dir={isRightToLeft ? \"rtl\" : \"ltr\"}>\n        <PageMetadata\n          title={mdx.frontmatter.title}\n          description={mdx.frontmatter.description}\n        />\n        <InfoColumn>\n          <StyledButtonDropdown list={dropdownLinks} />\n          <InfoTitle>{mdx.frontmatter.title}</InfoTitle>\n\n          {tocItems && (\n            <UpgradeTableOfContents\n              items={tocItems}\n              maxDepth={mdx.frontmatter.sidebarDepth!}\n            />\n          )}\n        </InfoColumn>\n        <ContentContainer id=\"content\">\n          <MDXProvider components={components}>\n            <MDXRenderer>{mdx.body}</MDXRenderer>\n          </MDXProvider>\n          <StakingCommunityCallout />\n          <FeedbackCard />\n        </ContentContainer>\n        <MobileButton>\n          <MobileButtonDropdown list={dropdownLinks} />\n        </MobileButton>\n      </Page>\n    </Container>\n  )\n}\n\nexport const stakingPageQuery = graphql`\n  query StakingPage($relativePath: String) {\n    pageData: mdx(fields: { relativePath: { eq: $relativePath } }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        description\n        lang\n        emoji\n        sidebarDepth\n        summaryPoints\n        alt\n        image {\n          childImageSharp {\n            gatsbyImageData(\n              width: 500\n              layout: CONSTRAINED\n              placeholder: BLURRED\n              quality: 100\n            )\n          }\n        }\n      }\n      body\n      tableOfContents\n    }\n  }\n`\n\nexport default StakingPage\n"],"names":["Page","target","props","theme","breakpoints","l","InfoColumn","MobileButton","colors","background","border","ContentContainer","_ref","primary","text200","Pre","preBackground","preBorder","InfoTitle","H2","H3","CardGrid","m","Title","name","styles","SummaryPoint","text300","StyledButtonDropdown","ButtonDropdown","s","MobileButtonDropdown","Container","HeroContainer","_ref2","layer2Gradient","Image","GatsbyImage","_ref3","MobileTableOfContents","TableOfContents","TitleCard","InfoBanner","SharedInfoBanner","components","a","Link","h1","Header1","h2","h3","h4","Header4","p","Paragraph","pre","table","MarkdownTable","MeetupList","RandomAppList","Roadmap","Logo","ButtonLink","Contributors","Card","InfoGrid","Divider","SectionNav","Badge","Emoji","UpgradeStatus","DocLink","ExpandableCard","YouTube","StakingLaunchpadWidget","StakingProductsCardGrid","StakingComparison","StakingHowSoloWorks","StakingConsiderations","StakingGuides","_ref4","data","pageData","mdx","location","frontmatter","Error","_mdx$frontmatter","title","isRightToLeft","isLangRightToLeft","lang","tocItems","tableOfContents","_mdx$tableOfContents","items","summaryPoints","dropdownLinks","text","ariaLabel","to","matomo","eventCategory","eventAction","eventName","___EmotionJSX","Breadcrumbs","slug","pathname","map","point","idx","key","maxDepth","sidebarDepth","isMobile","image","getImage","alt","objectFit","dir","PageMetadata","description","list","UpgradeTableOfContents","id","MDXProvider","MDXRenderer","body","StakingCommunityCallout","FeedbackCard"],"sourceRoot":""}