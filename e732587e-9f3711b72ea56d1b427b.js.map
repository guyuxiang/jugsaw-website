{"version":3,"file":"e732587e-9f3711b72ea56d1b427b.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/FileContributors.tsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport { useIntl } from \"react-intl\"\nimport { css, Theme } from \"@emotion/react\"\nimport styled from \"@emotion/styled\"\nimport { useQuery, gql } from \"@apollo/client\"\n\nimport ButtonLink from \"./ButtonLink\"\nimport Icon from \"./Icon\"\nimport Link from \"./Link\"\nimport Modal from \"./Modal\"\nimport Translation from \"./Translation\"\nimport { ButtonSecondary } from \"./SharedStyledComponents\"\nimport { getLocaleTimestamp } from \"../utils/time\"\nimport { Lang } from \"../utils/languages\"\n\nconst loadingStyles = (theme: Theme) => css`\n  font-size: 0;\n  background: linear-gradient(\n    -90deg,\n    ${theme.colors.lightBorder} 0%,\n    ${theme.colors.searchBackgroundEmpty} 50%,\n    ${theme.colors.lightBorder} 100%\n  );\n  background-size: 400% 400%;\n  animation: pulse 1.2s ease-in-out infinite;\n\n  @keyframes pulse {\n    0% {\n      background-position: 0% 0%;\n    }\n    100% {\n      background-position: -135% 0%;\n    }\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n\n  border-radius: 2px;\n  padding: 0.5rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    flex-direction: column;\n    padding-top: 0rem;\n    padding-left: 0rem;\n    padding-right: 0rem;\n    border-bottom: 0px solid ${(props) => props.theme.colors.border};\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    border-bottom: 0px solid ${(props) => props.theme.colors.border};\n  }\n`\n\nconst SkeletonContainer = styled(Container)<{\n  loading: boolean\n}>`\n  justify-content: flex-start;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n  opacity: 1;\n  transition: opacity 0.15s ease-in-out;\n\n  ${({ loading }) =>\n    !loading &&\n    `\n    opacity: 0;\n    pointer-events: none;\n  `}\n`\n\nconst LeftContent = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 1rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    font-size: ${(props) => props.theme.fontSizes.s};\n  }\n`\n\nconst SkeletonLeftContent = styled(LeftContent)`\n  flex: 1;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-right: 2rem;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    margin-right: 1rem;\n    flex: none;\n  }\n`\n\nconst Avatar = styled.img`\n  height: 40px;\n  width: 40px;\n  margin-right: 0.5rem;\n  border-radius: 50%;\n`\n\nconst SkeletonAvatar = styled.div`\n  height: 40px;\n  width: 40px;\n  margin-right: 0.5rem;\n  border-radius: 50%;\n  ${({ theme }) => loadingStyles(theme)}\n`\n\nconst Info = styled.div`\n  line-height: 130%;\n  color: ${(props) => props.theme.colors.text200};\n`\n\nconst SkeletonInfo = styled(Info)`\n  ${({ theme }) => loadingStyles(theme)}\n  height: 40px;\n  flex: 1;\n  border-radius: 3px;\n`\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n`\n\nconst SkeletonButtonContainer = styled(ButtonContainer)`\n  ${({ theme }) => loadingStyles(theme)}\n  width: 145px;\n  border-radius: 3px;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-top: 1rem;\n    justify-content: center;\n    height: 40px;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    width: 100%;\n    margin-top: 1rem;\n  }\n`\n\nconst ContributorsButton = styled(ButtonSecondary)<{ loading: boolean }>`\n  background-color: ${(props) => props.theme.colors.background};\n  margin-top: 0;\n  height: 40px;\n  border: 0px;\n  &:hover {\n    border: 0px;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-top: 1rem;\n    margin-bottom: 0.5rem;\n    justify-content: center;\n  }\n\n  ${({ loading }) =>\n    loading &&\n    `\n    visibility: hidden;\n  `}\n`\n\nconst GithubButton = styled(ButtonLink)`\n  margin-top: 0;\n  height: 40px;\n  @media (min-width: ${(props) => props.theme.breakpoints.l}) {\n    display: none;\n  }\n`\n\nconst ButtonContent = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst GithubIcon = styled(Icon)`\n  fill: ${(props) => props.theme.colors.text};\n  margin-right: 0.5rem;\n`\n\nconst ModalTitle = styled.h2`\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n`\n\nconst ContributorList = styled.ul`\n  margin: 0;\n  margin-top: 1.5rem;\n  list-style-type: none;\n  overflow-y: scroll;\n  max-height: 16rem;\n`\n\nconst Contributor = styled.li`\n  padding: 0.5rem;\n  display: flex;\n  align-items: center;\n  margin-bottom: 0;\n`\n\nconst COMMIT_HISTORY = gql`\n  query CommitHistory($relativePath: String) {\n    repository(name: \"ethereum-org-website\", owner: \"ethereum\") {\n      ref(qualifiedName: \"master\") {\n        target {\n          ... on Commit {\n            id\n            history(path: $relativePath) {\n              edges {\n                node {\n                  author {\n                    name\n                    email\n                    avatarUrl(size: 100)\n                    user {\n                      login\n                      url\n                    }\n                  }\n                  committedDate\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\ninterface Author {\n  name: string\n  email: string\n  avatarUrl: string\n  user: {\n    login: string\n    url: string\n  }\n}\n\ninterface Commit {\n  author: Author\n  committedDate: string\n}\n\nexport interface IProps {\n  relativePath: string\n  className?: string\n  editPath?: string\n}\n\nconst FileContributors: React.FC<IProps> = ({\n  relativePath,\n  className,\n  editPath,\n}) => {\n  const [isModalOpen, setModalOpen] = useState(false)\n  const intl = useIntl()\n\n  const { loading, error, data } = useQuery(COMMIT_HISTORY, {\n    variables: { relativePath },\n  })\n\n  if (error) return null\n\n  const commits: Array<Commit> =\n    data?.repository?.ref?.target?.history?.edges?.map((commit) => commit.node)\n\n  const lastCommit = commits?.[0] || {}\n  const lastContributor = lastCommit?.author || {}\n  const uniqueContributors =\n    commits?.reduce(\n      (res: Array<Author>, cur: Commit) => {\n        if (cur.author.user === null) {\n          return res\n        }\n        for (const contributor of res) {\n          const hasAuthorInfo = !!contributor.user && !!cur.author.user\n          if (\n            hasAuthorInfo &&\n            contributor.user.login === cur.author.user.login\n          ) {\n            return res\n          }\n        }\n        res.push(cur.author)\n        return res\n      },\n      [lastContributor]\n    ) || []\n\n  return (\n    <div className={className}>\n      <Modal isOpen={isModalOpen} setIsOpen={setModalOpen}>\n        <ModalTitle>\n          <Translation id=\"contributors\" />\n        </ModalTitle>\n        <div>\n          <Translation id=\"contributors-thanks\" />\n        </div>\n        <ContributorList>\n          {uniqueContributors.map((contributor) => (\n            <Contributor key={contributor.email}>\n              <Avatar src={contributor.avatarUrl} alt={contributor.name} />\n              {contributor.user && (\n                <Link to={contributor.user.url}>@{contributor.user.login}</Link>\n              )}\n              {!contributor.user && <span>{contributor.name}</span>}\n            </Contributor>\n          ))}\n        </ContributorList>\n      </Modal>\n      <Container>\n        <SkeletonContainer loading={!!loading}>\n          <SkeletonLeftContent>\n            <SkeletonAvatar />\n            <SkeletonInfo />\n          </SkeletonLeftContent>\n          <SkeletonButtonContainer />\n        </SkeletonContainer>\n        <LeftContent>\n          <Avatar src={lastContributor.avatarUrl} alt={lastContributor.name} />\n          <Info>\n            <Translation id=\"last-edit\" />:{\" \"}\n            {lastContributor.user && (\n              <Link to={lastContributor.user.url}>\n                @{lastContributor.user.login}\n              </Link>\n            )}\n            {!lastContributor.user && <span>{lastContributor.name}</span>},{\" \"}\n            {getLocaleTimestamp(intl.locale as Lang, lastCommit.committedDate)}\n          </Info>\n        </LeftContent>\n        <ButtonContainer>\n          <ContributorsButton\n            onClick={() => setModalOpen(true)}\n            loading={loading}\n          >\n            <Translation id=\"see-contributors\" />\n          </ContributorsButton>\n          {editPath && (\n            <GithubButton to={editPath} hideArrow variant=\"outline\">\n              <ButtonContent>\n                <GithubIcon name=\"github\" />\n                <span>\n                  <Translation id=\"edit-page\" />\n                </span>\n              </ButtonContent>\n            </GithubButton>\n          )}\n        </ButtonContainer>\n      </Container>\n    </div>\n  )\n}\n\nexport default FileContributors\n"],"names":["loadingStyles","theme","css","colors","lightBorder","searchBackgroundEmpty","Container","props","breakpoints","m","border","l","SkeletonContainer","_ref","loading","LeftContent","fontSizes","s","SkeletonLeftContent","Avatar","SkeletonAvatar","_ref2","Info","text200","SkeletonInfo","_ref3","ButtonContainer","SkeletonButtonContainer","_ref4","ContributorsButton","ButtonSecondary","background","_ref5","GithubButton","ButtonLink","ButtonContent","GithubIcon","Icon","text","ModalTitle","ContributorList","Contributor","COMMIT_HISTORY","gql","_ref6","relativePath","className","editPath","isModalOpen","setModalOpen","useState","intl","useIntl","error","data","useQuery","variables","commits","repository","_data$repository","ref","_data$repository$ref","target","_data$repository$ref$","history","_data$repository$ref$2","edges","_data$repository$ref$3","map","commit","node","lastCommit","lastContributor","author","uniqueContributors","reduce","res","cur","user","contributor","login","push","___EmotionJSX","Modal","isOpen","setIsOpen","Translation","id","key","email","src","avatarUrl","alt","name","Link","to","url","getLocaleTimestamp","locale","committedDate","onClick","hideArrow","variant"],"sourceRoot":""}