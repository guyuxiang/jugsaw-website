{"version":3,"file":"component---src-pages-stablecoins-tsx-1858365fb1d51d889bf7.js","mappings":"yPAUA,SAASA,EAAKC,EAAQC,EAAa,IACjC,MAAMC,EAAQC,OAAOC,OAAO,CAAC,EAAGJ,GAChC,IAAK,MAAMK,KAAOJ,EACZI,KAAOH,UACFA,EAAMG,GAEjB,OAAOH,CACT,CAKA,SAASI,EAASC,GAChB,MAAM,QACJC,EAAO,IACPC,EAAG,OACHC,EAAM,OACNC,EAAM,QACNC,EAAO,YACPC,EAAW,MACXC,EAAK,eACLC,GACER,GACGS,EAAQC,IAAa,IAAAC,UAAS,YACrC,IAAAC,YAAU,KACRF,EAAUR,EAAM,UAAY,UAAU,GACrC,CAACA,IACJ,MAAMW,GAAW,IAAAC,UACXC,GAAO,IAAAC,cAAY,KACvB,IAAKd,EACH,OACFe,IACA,MAAMC,EAAM,IAAIC,MAChBD,EAAIhB,IAAMA,EACNI,IACFY,EAAIZ,YAAcA,GAChBH,IACFe,EAAIE,OAASjB,GACXI,IACFW,EAAIX,MAAQA,GACVN,IACFiB,EAAIjB,QAAUA,GAChBiB,EAAIG,OAAUC,IACZL,IACAP,EAAU,UACA,MAAVN,GAA0BA,EAAOkB,EAAM,EAEzCJ,EAAIK,QAAWC,IACbP,IACAP,EAAU,UACC,MAAXL,GAA2BA,EAAQmB,EAAM,EAE3CX,EAASY,QAAUP,CAAG,GACrB,CAAChB,EAAKI,EAAaH,EAAQI,EAAOH,EAAQC,EAASJ,IAChDgB,EAAQ,KACRJ,EAASY,UACXZ,EAASY,QAAQJ,OAAS,KAC1BR,EAASY,QAAQF,QAAU,KAC3BV,EAASY,QAAU,KACrB,EAYF,OAVA,QAAoB,KAClB,IAAIjB,EAKJ,MAHe,YAAXC,GACFM,IAEK,KACLE,GAAO,CACR,GACA,CAACR,EAAQM,EAAMP,IACXA,EAAiB,SAAWC,CACrC,CACA,IAIIiB,GAAc,SAAW,SAAsB1B,EAAO2B,GACxD,MAAM,UAAEC,EAAS,WAAEC,EAAU,IAAEC,KAAQC,GAAS/B,EAChD,OAAuB,gBAAoB,MAAO,CAChDgC,MAAOJ,EACPK,OAAQJ,EACRF,MACAG,SACGC,GAEP,IACAL,EAAYQ,YAAc,cAG1B,IAAIC,GAAS,SAAY,SAAgBnC,EAAO2B,GAC9C,MAAM,YACJS,EAAW,SACXC,EAAQ,IACRnC,EAAG,OACHC,EAAM,MACNmC,EAAK,IACLC,EAAG,QACHtC,EAAO,eACPO,EAAc,YACdF,EAAW,iBACXkC,EAAmB,oBAAmB,eACtCC,KACGV,GACD/B,EAEE0C,EAAuC,MAAXzC,GAAmBO,UADZ,IAAhB4B,QAAuC,IAAbC,GAM7CM,EAtCsB,EAAClC,EAAQ+B,IAAgC,WAAX/B,GAA4C,sBAArB+B,GAAuD,WAAX/B,GAA4C,YAArB+B,EAsC1HI,CAJX7C,EAAS,IACnBC,EACHQ,eAAgBkC,IAEwCF,GACpDK,EAAS,CACblB,MACAmB,UAAWP,EACXQ,eAAgBT,KACbI,EAA4BX,EAAOvC,EAAKuC,EAAM,CAAC,UAAW,YAE/D,OAAIY,EACEN,GAEmB,gBAAoB,SAAY,CACrDW,GAAItB,EACJuB,UAAW,4BACX/C,IAAKkC,KACFS,IAGgB,gBAAoB,SAAY,CACrDG,GAAItB,EACJxB,MACAC,SACAG,cACAL,UACAwC,iBACAQ,UAAW,kBACRJ,GAEP,IACAV,EAAOD,YAAc,QAIrB,IAAIgB,GAAM,SAAY,CAAClD,EAAO2B,IAAwB,gBAAoB,SAAa,CACrFA,MACAqB,GAAItB,EACJuB,UAAW,kBACRjD,K,iOCjJDmD,EAAK,IAAIC,IAAeA,EAAWC,OAAOC,SAASC,KAAK,MAIvDC,EAAqBC,IAAkB,OAAc,CACxDC,KAAM,qBACNC,aAAc,sGAEZC,GAAQ,SAAW,CAAC5D,EAAO2B,KAC7B,MAAMkC,GAAS,QAAoB,QAAS7D,IACtC,UAAEiD,KAAca,IAAe,QAAiB9D,GACtD,OAAuB,gBAAoBwD,EAAqB,CAC9DO,MAAOF,GACU,gBAAoB,WAAc,CACnDG,KAAM,QACNrC,MACAsC,MAAOJ,EAAOK,MACdjB,UAAWE,EAAG,eAAgBF,MAC3Ba,IACF,IAELF,EAAM1B,YAAc,SAIC,SAAY,CAAClC,EAAO2B,KACvC,MAAM,SAAEwC,EAAQ,UAAEC,EAAS,UAAEnB,KAAclB,GAAS/B,EACpD,OAAuB,gBAAoB,SAAa,CACtD2B,MACAsB,UAAWE,EAAG,0BAA2BF,MACtClB,EACHkC,MAAO,CACLI,QAAS,QACTC,WAAY,SACZC,wBAAyB,QACzBH,UAAWD,GAAYC,GAAa,OACpCI,UAAW,SACXC,SAAU,SAEZ,KAKe,SAAY,CAACzE,EAAO2B,KACrC,MAAM,UAAE+C,EAAY,YAAa3C,GAAS/B,EACpC6D,EAASJ,IACf,OAAuB,gBAAoB,aAAiB,IACvD1B,EACHJ,MACAsC,MAAO,IACFJ,EAAOc,QACVC,YAAaF,IAEf,IAESxC,YAAc,eAI3B,IAAI2C,GAAQ,SAAY,CAAC7E,EAAO2B,KAC9B,MAAMkC,EAASJ,IACf,OAAuB,gBAAoB,WAAe,IACrDzD,EACH2B,MACAsC,MAAOJ,EAAOiB,OACd,IAKAC,GAAQ,SAAY,CAAC/E,EAAO2B,KAC9B,MAAMkC,EAASJ,IACf,OAAuB,gBAAoB,WAAe,IACrDzD,EACH2B,MACAsC,MAAOJ,EAAOmB,OACd,IAgBAC,IAXQ,SAAY,CAACjF,EAAO2B,KAC9B,MAAMkC,EAASJ,IACf,OAAuB,gBAAoB,WAAe,IACrDzD,EACH2B,MACAsC,MAAOJ,EAAOqB,OACd,KAKK,SAAY,EAAGC,eAAcpD,GAAQJ,KAC5C,MAAMkC,EAASJ,IACf,OAAuB,gBAAoB,QAAY,IAClD1B,EACHJ,MACAsC,MAAOJ,EAAOuB,GACd,kBAAmBD,GACnB,KAKAE,GAAK,SAAY,CAACrF,EAAO2B,KAC3B,MAAMkC,EAASJ,IACf,OAAuB,gBAAoB,QAAY,CACrDO,KAAM,SACHhE,EACH2B,MACAsC,MAAOJ,EAAOyB,IACd,IAKAC,GAAK,SAAY,EAAGJ,eAAcpD,GAAQJ,KAC5C,MAAMkC,EAASJ,IACf,OAAuB,gBAAoB,QAAY,CACrDO,KAAM,cACHjC,EACHJ,MACAsC,MAAOJ,EAAO2B,GACd,kBAAmBL,GACnB,G,kLC5GEM,EAAiBzF,IAEnB0F,EAAAA,EAAAA,IAACC,EAAAA,IAAM,QACLC,QAAS,EACTC,EAAG,EACHC,MAAM,OACNC,OAAO,YACPC,YAAY,SACZC,OAAQ,CACNC,aAAc,OACdC,UAAW,oCACXC,WAAY,yBAEVpG,IAKJqG,EAAQrG,IACZ,MAAM,MAAEsG,EAAK,YAAEC,EAAW,QAAE5B,EAAO,KAAE6B,EAAI,MAAEC,EAAK,IAAE3E,GAAiB9B,EAAT+B,GAAI,OAAK/B,EAAK,GAElE0G,IAAWF,EACXG,EAAaC,EAAAA,GAAeJ,GAAQ,IAEpCK,GAAmBC,EAAAA,EAAAA,IAAkB,WAAY,YAEvD,OACEpB,EAAAA,EAAAA,IAACD,EAAkB1D,EAChB0E,IAASf,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAAC/D,GAAIgE,EAAAA,EAAaP,MAAOA,EAAO3E,IAAKA,EAAKmF,KAAK,UAC7DvB,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CAACC,KAAK,UAAUC,UAAU,UAC5BV,GACChB,EAAAA,EAAAA,IAAC2B,EAAAA,GAAW,CACVrE,GAAIsE,EAAAA,EACJC,KAAMf,EACNgB,WAAS,EACT1B,MAAM,OACN2B,eAAe,OACfxB,OAAQ,CAAEwB,eAAgB,SAEzBnB,IAGHZ,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,KAAET,IAGRZ,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAACW,SAAS,KAAKC,GAAI,EAAG7B,MAAOe,GAC9BN,IAGJ5B,IACCe,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CAACC,KAAK,UAAU7E,MAAM,SAASsF,KAAK,OAAOC,GAAI,IAClDnC,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAACW,SAAS,KAAKC,GAAI,EAAGG,QAAS,IAChCnD,IAINgC,IAAcjB,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,KAAC,KACN,EA0BpB,IAtBmCgB,IAAAA,IAAC,QAAEC,EAAO,aAAEC,EAAe,KAAM,OAAM,SACxEvC,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAACmB,GAAG,aAAalG,MAAM,QACxBgG,EAAQG,KAAI,CAACC,EAAUC,KACtB,MAAM,KAAE7B,EAAI,GAAE8B,GAAOF,EAGrB,QAFiB5B,GAGfd,EAAAA,EAAAA,IAAC6C,EAAAA,GAAO,CAACzI,IAAKwI,GAAMD,IAClB3C,EAAAA,EAAAA,IAACW,EAAS+B,KAGZ1C,EAAAA,EAAAA,IAACW,GAAI,QACHvG,IAAKuI,EACLG,QAAS,IAAMP,EAAaI,GAC5BV,GAAI,GACAS,GAEP,IAEC,C,kFCoCR,IAnH0CL,IAQnC,IARoC,IACzCnB,EAAG,WACHR,EAAU,MACVK,EAAK,IACL3E,EAAG,KACH4B,EAAI,YACJ6C,EAAW,KACXkC,GACD,EACC,MAAMtC,GAAYW,EAAAA,EAAAA,IAAkB,iBAAkB,iBAEtD,OACEpB,EAAAA,EAAAA,IAAC6C,EAAAA,GAAO,CACNzC,MAAM,OACNM,WAAW,mBACXL,OAAO,YACPC,YAAY,cACZE,aAAa,OACb/B,SAAS,SACTgC,UAAWA,EACX9B,QAAQ,OACRqE,cAAc,SACdzC,OAAQ,CACNG,WAAY,uBACZD,UAAWA,EACXwC,WAAY,yBACZC,UAAW,iBAGblD,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CACH2B,WAAW,SACXC,eAAe,SACf3C,UAAU,uCACV4C,KAAK,QACLb,GAAI9B,IAEJV,EAAAA,EAAAA,IAACvE,EAAAA,GAAK,CACJ6B,GAAIgE,EAAAA,EACJP,MAAOA,EACP3D,UAAU,QACVhB,IAAKA,GAAe4B,EAAI,QACxB1B,MAAM,OACNgH,UAAU,SACVvE,SAAU,CAAEwE,KAAM,QAASC,GAAI,SAC/BC,UAAU,YAGdzD,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CACHkC,UAAU,OACVV,cAAc,SACdI,eAAe,kBAEfpD,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,MACFrB,EAAAA,EAAAA,IAAC2D,EAAAA,GAAO,CACNrG,GAAG,KACHsG,KAAK,KACL5B,SAAS,MACT6B,WAAW,MACXC,WAAW,MACXC,GAAI,EACJC,GAAI,EACJ/B,GAAI,IAEJjC,EAAAA,EAAAA,IAAC2B,EAAAA,GAAW,CAACE,KAAMX,EAAKD,YAAU,GAC/BjD,KAGLgC,EAAAA,EAAAA,IAACiE,EAAAA,GAAI,CAACjC,SAAS,KAAKI,QAAQ,MAAM4B,GAAI,EAAG/B,GAAI,EAAG6B,WAAW,QACxDjD,IAGJkC,IACC/C,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CACFvC,UAAU,SACV2E,UAAU,QACVxB,GAAI,EACJiC,UAAU,YACV5D,YAAY,eAEXyC,EAAKN,KAAI,CAAC,EAAqBE,KAAG,IAAxB,KAAEwB,EAAI,KAAEC,EAAI,IAAEC,GAAK,SAC5BrE,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CACHpH,IAAKuI,EACLvC,MAAM,UACN4B,SAAS,KACTsC,QAAQ,gBACRnE,EAAG,EACHoE,cAAc,YACdlE,OAAO,YACPC,YAAY,cACZkE,WAAW,IACXC,YAAY,MAEZzE,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CAAC2B,WAAW,UACdgB,IACCnE,EAAAA,EAAAA,IAACvE,EAAAA,GAAK,CACJ6B,GAAIgE,EAAAA,EACJP,MAAOoD,EACP/G,UAAU,QACVhB,IAAI,GACJsI,SAAS,OACTC,YAAY,WAGfP,IAEHpE,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CAAC2B,WAAW,UAAUkB,EAAI,SAC1B,MAKP,C,kDCtGd,IA/BoChC,IAAAA,IAAC,SAAEuC,EAAQ,UAAErH,GAAW,SAC1DyC,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAACwD,SAAS,WAAWC,GAAG,IAAIxB,UAAU,UAAU/F,UAAWA,IAC7DyC,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CACF0D,OAAO,OACPF,SAAS,WACTG,gBAAgB,iBAChBC,OAAO,IACPC,KAAK,IACL7E,OAAO,YACPC,YAAY,SACZE,aAAa,MACbjE,OAAO,OACPD,MAAM,UAER0D,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CACF9D,UAAU,kBACVhB,OAAO,OACPD,MAAM,OACNkE,aAAa,MACbuE,OAAQ,EACRI,QAAQ,IACRzE,WAAW,sBACXL,OAAO,YACPC,YAAY,SACZoD,UAAU,QAETkB,GAEC,C,6DCHR,IApByCvC,IAAAA,IAAC,MACxC+C,EAAK,MACLxE,EAAK,YACLC,EAAW,SACX+D,EAAQ,UACRrH,EAAS,UACT8H,GACD,SACCrF,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CAAChB,aAAa,OAAOjD,UAAWA,IACnCyC,EAAAA,EAAAA,IAACsF,EAAAA,EAAK,CAACtD,SAAaqD,EAAS,MAAOE,KAAMH,KAC1CpF,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAACmE,SAAS,IAAIC,WAAW,IAAIC,UAAU,MAAMC,GAAG,MAClD3F,EAAAA,EAAAA,IAACiE,EAAAA,GAAI,CAACjC,SAAS,MAAMpB,IACrBZ,EAAAA,EAAAA,IAACiE,EAAAA,GAAI,CAAC7B,QAAQ,MAAM0C,GAAG,KAAK7C,GAAG,KAC5BpB,GAEF+D,GAEE,C,4KC2BT,IA5CqCvC,IAQ9B,IAR+B,SACpCuC,EAAQ,UACRrH,EAAS,MACT6H,EAAK,UACLQ,GAAY,EAAK,aACjBC,GAAe,EAAK,mBACpBC,GAAqB,GAEtB,EADIxL,GAAK,YAER,MAAMyL,GACJ/F,EAAAA,EAAAA,IAACwB,EAAAA,IAAI,QACH5E,MAAM,SACNuD,EAAG,EACHK,aAAc,KACdwF,KAAMH,EAAe,QAAU,OAC/BzF,MAAM,WACNoC,GAAIoD,EAAY,UAAY,aAC5BlE,UAAW,CAAE6B,KAAM,SAAUC,GAAI,QAC7BlJ,GAEH8K,IACCpF,EAAAA,EAAAA,IAACsF,EAAAA,EAAK,CACJE,SAAS,IACTC,WAAW,IACXtD,GAAI,CAAEoB,KAAM,EAAGC,GAAI,GACnBvB,GAAI,CAAEsB,KAAM,EAAGC,GAAI,GACnBF,UAAW,CAAEC,KAAM,aAAcC,GAAI,QACrC+B,KAAMH,EACNpD,SAAS,SAGbhC,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CACH7C,QAAS,CAAE4E,KAAM,QAASC,GAAIsC,EAAqB,OAAS,SAC5DlJ,MAAOkJ,EAAqB,SAAW,OACvCG,EAAGH,EAAqB,OAAS,OACjCxB,QAASwB,EAAqB,gBAAkB,QAE/ClB,IAIP,OAAOiB,GAAe7F,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CAAC8C,QAAQ,UAAUyB,GAAiBA,CAAM,C,kFC0FvE,IA5GmC1D,IAK5B,IAL6B,QAClCC,EAAO,UACP4D,GAAY,EAAK,SACjBtB,EAAQ,UACRrH,GACD,EACC,MAAM,QAAE4I,EAAO,MAAEvF,EAAK,OAAEwF,EAAM,SAAEC,EAAQ,MAAEtF,EAAK,IAAE3E,GAAQkG,EACzD,OACEtC,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAACiF,GAAI,EAAGC,GAAI,EAAGjK,MAAM,SACvB0D,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CACH4B,eAAe,gBACf0B,GAAI,EACJyB,GAAI,CAAEhD,KAAM,EAAGiD,GAAI,IACnB9E,UAAW,CAAE6B,KAAM2C,EAAY,SAAW,iBAAkBM,GAAI,OAChEjJ,UAAWA,IAEXyC,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CACF2E,KAAM,CAAEzC,KAAM,OAAQiD,GAAI,gBAC1BF,GAAI,CAAE/C,KAAM,GAAIiD,GAAI,IACpBC,GAAI,CAAElD,KAAM,EAAGiD,GAAI,GACnBrE,GAAI,IAEJnC,EAAAA,EAAAA,IAAC2D,EAAAA,GAAO,CACNrG,GAAG,KACHiH,cAAc,YACdvC,SAAS,KACT6B,WAAW,SACX5B,GAAI,EACJ7B,MAAM,UACN0D,WAAY,KAEXlD,IAEHZ,EAAAA,EAAAA,IAAC2D,EAAAA,GAAO,CACNrG,GAAG,KACHuG,WAAW,OACX7B,SAAU,CAAEuB,KAAM,SAAUiD,GAAI,OAChCR,KAAK,OACL/D,GAAI,EACJ7B,MAAM,SACN0D,WAAY,KAEXsC,IAEHpG,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CACFW,SAAU,CAAEuB,KAAM,KAAMiD,GAAI,OAC5B1C,WAAY,IACZ1D,MAAM,UACN0E,GAAI,EACJ7C,GAAI,GAEHoE,GAEFF,IACCnG,EAAAA,EAAAA,IAAC0G,EAAAA,GAAI,CAACxG,QAAS,GACZiG,EAAQ1D,KAAI,CAACkE,EAAQhE,IA3DpC,SAAsBgE,GACpB,YAAsCC,IAA9BD,EAAuBE,EACjC,CA0DoBC,CAAaH,IAEb3G,EAAAA,EAAAA,IAAC+G,EAAAA,GAAQ,MACP/G,EAAAA,EAAAA,IAACgH,EAAAA,EAAU,CACT5M,IAAKuI,EACLsE,QAASN,EAAOM,QAChBJ,GAAIF,EAAOE,IAEVF,EAAOrE,UAMZqE,EAAOO,MAEPlH,EAAAA,EAAAA,IAAC+G,EAAAA,GAAQ,MACP/G,EAAAA,EAAAA,IAACmH,EAAAA,EAAM,CACL/M,IAAKuI,EACLsE,QAASN,EAAOM,QAChBC,KAAMP,EAAOO,MAEZP,EAAOrE,eARhB,KAgBLsC,IAEH5E,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CACF/D,GAAIgE,EAAAA,EACJG,KAAK,UACL6B,UAAU,SACVwB,GAAI,CAAEvB,KAAM,EAAGiD,GAAI,IACnBb,GAAI,CAAEpC,KAAM,EAAGiD,GAAI,IACnBP,EAAE,OACFlH,SAAU,CAAEwE,KAAM,QAASiD,GAAI,SAC/BzF,MAAOA,EACPqG,SAAU,CACRhK,UAAW,WAEbhB,IAAKA,EACL7B,QAAQ,WAGR,C,wGCjDV,IAtEsC8H,IAA4B,IAA3B,QAAEC,EAAO,SAAE+E,GAAU,EAC1D,MAAMC,GAASlG,EAAAA,EAAAA,IAAkB,iBAAkB,iBAEnD,OACEpB,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAAC/E,MAAM,SACT0D,EAAAA,EAAAA,IAAC2D,EAAAA,GAAO,CACNrG,GAAG,KACH0E,SAAS,MACTuF,aAAa,YACbjH,YAAY,SACZkH,cAAe,EACfC,aAAc,GAEbJ,GAEF/E,EAAQG,KAAI,CAAC,EAA8CE,KAAG,IAAjD,MAAE/B,EAAK,YAAEC,EAAW,KAAEC,EAAI,MAAEC,EAAK,IAAE3E,EAAG,GAAEwG,GAAI,SACxD5C,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CACHpH,IAAKwI,GAAMD,EACXvC,MAAM,OACNqH,aAAa,KACbC,UAAW,EACXvE,WAAY,CAAEK,GAAI,gBAElBxD,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAAC/E,MAAM,QACRyE,IACCf,EAAAA,EAAAA,IAACvE,EAAAA,GAAK,CACJ6B,GAAIgE,EAAAA,EACJP,MAAOA,EACP3E,IAAKA,EACLqE,UAAW6G,EACX9G,aAAa,SAInBR,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CACHgG,cAAe,EACflL,MAAM,OACN6G,WAAY,CAAEI,KAAM,aAAcC,GAAI,UACtCmE,WAAY,CAAEpE,KAAM,EAAGC,GAAI,GAC3BJ,eAAe,gBACfmE,aAAa,YACbjH,YAAY,SACZsH,QAAS,CAAErE,KAAM,SAAUC,GAAI,SAE/BxD,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAACuG,QAAQ,WACX5H,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,KAAET,IACNZ,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAACW,SAAS,KAAKyF,aAAc,EAAGrF,QAAQ,OACzCvB,IAGJC,IACCd,EAAAA,EAAAA,IAACgH,EAAAA,EAAU,CACTC,QAAQ,UACRJ,GAAI/F,EACJ6G,WAAY,CAAEpE,KAAM,EAAGC,GAAI,GAC3BqE,SAAU,EACVC,SAAU,EACVtH,aAAa,KACbkH,UAAW,CAAEnE,KAAM,EAAGC,GAAI,KAE1BxD,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,8BAIjB,IAEL,C,oHCwDV,IA9GsCP,IAAqC,IAAD,MAAnC,QAAE2F,EAAO,QAAE1F,EAAO,SAAE2F,GAAU,EACnE,MAAOC,IAAaC,EAAAA,EAAAA,IAAS,SAAU,CAAC,SAExC,OACEnI,EAAAA,EAAAA,IAAC9B,EAAAA,GAAK,CACJ+I,QAAQ,WACRlD,GAAI,EACJvD,aAAa,KACbH,OAAM,aAAe6H,EACrB1F,GAAG,aACHP,GAAI,EACJV,KAAK,UAELvB,EAAAA,EAAAA,IAACb,EAAAA,GAAK,CAACqD,GAAG,gBAAgBpC,MAAM,YAC9BJ,EAAAA,EAAAA,IAACL,EAAAA,GAAE,CAACc,UAAS,aAAeyH,EAAajG,GAAG,OACzC+F,EAAQvF,KAAI,CAAC2F,EAAQzF,KACpB3C,EAAAA,EAAAA,IAACT,EAAAA,GAAE,CACDnF,IAAKuI,EACL2D,GAAI,EACJtE,SAAS,KACT6B,WAAW,SACXwE,cAAc,UAEbD,KAIJ9F,IAAqB,QAAd,EAAIA,EAAQ,UAAE,aAAVgG,EAAYpH,OACtBlB,EAAAA,EAAAA,IAACT,EAAAA,GAAE,CAACY,EAAG,EAAG6B,SAAS,KAAK6B,WAAW,SAASH,UAAU,OAAM,QAMlE1D,EAAAA,EAAAA,IAACX,EAAAA,GAAK,KACH4I,IACCjI,EAAAA,EAAAA,IAACL,EAAAA,GAAE,CAACQ,EAAG,IACLH,EAAAA,EAAAA,IAACH,EAAAA,GAAE,CAAC0I,QAAS,IACXvI,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,oCAIpBqF,GAA+B,IAAnB3F,EAAQkG,SACpBxI,EAAAA,EAAAA,IAACL,EAAAA,GAAE,CAACQ,EAAG,IACLH,EAAAA,EAAAA,IAACH,EAAAA,GAAE,CAAC0I,QAAS,IACXvI,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,qCAKrBN,EAAQG,KAAI,CAAC,EAAuCE,KAAG,IAA1C,KAAE3E,EAAI,UAAEyK,EAAS,MAAE1H,EAAK,KAAE2H,EAAI,IAAExH,GAAK,SACjDlB,EAAAA,EAAAA,IAAC6C,EAAAA,GAAO,CACNvF,GAAIqC,EAAAA,GACJvF,IAAKuI,EACLvC,MAAM,OACNK,UAAS,aAAeyH,EACxB3H,OAAQ,CACNwB,eAAgB,OAChBtB,UAAU,WAAYyH,EACtB1F,GAAI,aACJpC,MAAO,WACPuI,OAAQzH,EAAM,UAAY,WAE5B0H,OAAQ,CACNnI,UAAU,WAAYyH,EACtB1F,GAAI,aACJpC,MAAO,cAGTJ,EAAAA,EAAAA,IAACH,EAAAA,GAAE,MACDG,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CAAC5E,MAAM,UACTmE,IAASf,EAAAA,EAAAA,IAACvE,EAAAA,GAAK,CAACjB,IAAKuG,EAAO3E,IAAI,GAAG+F,GAAI,EAAG0G,QAAS,IACnD3H,GACClB,EAAAA,EAAAA,IAAC2B,EAAAA,GAAW,CACVrE,GAAIsE,EAAAA,EACJE,WAAS,EACT+E,GAAI3F,EACJd,MAAM,UACN2B,eAAe,UACfxB,OAAQ,CACNwB,eAAgB,WAElBd,YAAU,GAETjD,IAGHgC,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,KAAGhC,MAITgC,EAAAA,EAAAA,IAACH,EAAAA,GAAE,MACDG,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CAAC5E,MAAM,UAAU6L,KAExBzI,EAAAA,EAAAA,IAACH,EAAAA,GAAE,MACDG,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CAAC5E,MAAM,UAAU8L,IAEvBxH,IACClB,EAAAA,EAAAA,IAACH,EAAAA,GAAE,CAACO,MAAM,YACRJ,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CAAC5E,MAAM,SAAS0H,QAAQ,YAAW,MAKpC,KAGR,C,iRCrFZ,MA7C+BjC,IAMxB,IANyB,SAC9BuC,EAAQ,UACRrH,EAAS,YACTuL,EAAW,WACXpI,GAED,EADIrE,GAAI,YAEP,OAAOyM,GACL9I,EAAAA,EAAAA,IAACwB,EAAAA,IAAI,QACHnB,OAAO,MACP0I,YAAY,QACZzI,YAAY,aACZF,MAAM,OACNmE,cAAc,YACdb,UAAU,SACV/E,QAAQ,eACR2H,GAAI,EACJC,GAAI,EACJ/F,aAAa,OACbwB,SAAS,KACTzE,UAAWA,GACPlB,GAEHuI,IAGH5E,EAAAA,EAAAA,IAACwB,EAAAA,IAAI,QACHd,WAAYA,QAAAA,EAAc,aAC1B/B,QAAQ,eACRyB,MAAM,WACNmE,cAAc,YACdb,UAAU,SACV4C,GAAI,EACJC,GAAI,EACJpE,GAAI,EACJH,SAAS,KACTxB,aAAa,OACbjD,UAAWA,GACPlB,GAEHuI,EAEJ,ECtCI,MAAMoE,EAET,CACFC,MAAO,CACL7D,MAAO,8BACPxE,MAAO,wCACPsI,KAAM,CACJ9I,MAAO,aACPpC,KAAM,wCAERmL,YAAa,gDAEfC,IAAK,CACHhE,MAAO,kBACPxE,MAAO,uCACPuI,YAAa,+CAEfE,KAAM,CACJjE,MAAO,cACPxE,MAAO,wCACPuI,YAAa,gDAEfG,SAAU,CACRlE,MAAO,cACPxE,MAAO,0CACPsI,KAAM,CACJ9I,MAAO,UACPpC,KAAM,0CAERmL,YAAa,mDC1BJI,EAAmBjP,IAC9B0F,EAAAA,EAAAA,IAACqB,EAAAA,IAAG,QAACI,KAAK,UAAUuE,KAAM,CAAEQ,GAAI,OAASrE,GAAI,CAAEqE,GAAI,KAAUlM,IAGlDkP,EAAoBlP,IAC/B0F,EAAAA,EAAAA,IAACuJ,GAAe,QAACpH,GAAI,EAAGV,KAAK,UAAUqD,GAAI,CAAEvB,KAAM,GAAIiD,GAAI,IAASlM,IAGhEmP,EAAiBpH,IAAsC,IAArC,OAAEqH,GAA6B,EACrD,OACE1J,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAACc,GAAI,EAAG/B,MAAM,WACfsJ,GACC1J,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,qCAEhB5C,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,oCAEd,EAYG+G,EAAuBrP,IAClC,MAAM,SAAE+M,EAAQ,SAAEzC,GAAatK,EAEzBsP,EAAaZ,EAAuB3B,GAE1C,OACErH,EAAAA,EAAAA,IAAC6J,EAAAA,GAAa,CAACxJ,OAAO,MAAMC,YAAY,sBACrCwJ,IAAAA,IAAC,WAAEC,GAAY,SACd/J,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAACgK,EAAAA,GAAe,CACd5G,eAAe,gBACfD,WAAW,SACXhD,EAAG,EACHI,OAAQ,CAAEG,WAAY,mBAEtBV,EAAAA,EAAAA,IAACwB,EAAAA,IAAI,QACH2B,WAAY,CAAEI,KAAM,aAAciD,GAAI,UACtCxD,cAAe,CAAEO,KAAM,SAAU0G,GAAI,OACrCC,EAAG,EACHC,GAAI,GACA7P,IAEJ0F,EAAAA,EAAAA,IAACsF,EAAAA,EAAK,CACJC,KAAMqE,EAAWxE,MACjB+E,GAAI,EACJlI,GAAI,CAAEsB,KAAM,EAAG0G,GAAI,GACnBjI,SAAU,CAAEuB,KAAM,OAAQ0G,GAAI,WAEhCjK,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,MACFrB,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CAAC2B,WAAW,SAASlB,GAAI,IAC5BjC,EAAAA,EAAAA,IAAC2D,EAAAA,GAAO,CACNrG,GAAG,KACH0E,SAAU,CAAEuB,KAAM,UAAW0G,GAAI,UACjCnG,WAAY,IACZC,GAAI,IAEJ/D,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAIgH,EAAWhJ,WAE3BgJ,EAAWV,OACZlJ,EAAAA,EAAAA,IAACoK,EAAI,CAACzE,GAAI,EAAGjF,WAAYkJ,EAAWV,KAAK9I,QACvCJ,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAIgH,EAAWV,KAAKlL,UAIvCgC,EAAAA,EAAAA,IAACiE,EAAAA,GAAI,CAAC7D,MAAM,UAAU6B,GAAI,EAAGyB,UAAU,UACrC1D,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAIgH,EAAWT,kBAIlCnJ,EAAAA,EAAAA,IAACyJ,EAAc,CAACC,OAAQK,MAE1B/J,EAAAA,EAAAA,IAACqK,EAAAA,GAAc,CACb3J,WAAW,gBACXL,OAAO,MACPC,YAAY,SACZ2B,GAAG,OACH+B,GAAG,OACH7D,EAAG,IAEHH,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CACHrB,EAAG,EACHiD,eAAe,gBACfJ,cAAe,CAAEO,KAAM,SAAUiD,GAAI,QAEpC5B,IAGJ,GAES,E,gDC5Gb,MCuBD0F,EAAgBhQ,IACpB0F,EAAAA,EAAAA,IAAC2D,EAAAA,IAAO,QACNrG,GAAG,KACH0E,SAAS,UACT6B,WAAY,IACZC,WAAW,OACXJ,UAAU,OACVoB,GAAI,GACAxK,IAIFiQ,EAAoBjQ,IACxB0F,EAAAA,EAAAA,IAACqB,EAAAA,IAAG,QAACyD,GAAI,EAAG7C,GAAI,GAAO3H,IAGnBkQ,EACJlQ,IAEA0F,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CACHlE,GAAIuF,EAAAA,GACJM,WAAY,CAAEI,KAAM,aAAc0G,GAAI,UACtCvJ,WAAW,aACXL,OAAO,MACPC,YAAY,SACZF,MAAM,OACN4C,cAAe,CAAEO,KAAM,SAAU0G,GAAI,OACrC9J,EAAG,EACHsK,GAAI,CACF,wBAAyB,CACvB3F,GAAI,SAGRvE,OAAQ,CACNG,WAAY,gBACZuC,WAAY,iBACZC,UAAW,iBAGblD,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CAAC4B,eAAe,gBAAgBD,WAAW,SAAS7G,MAAM,SAC7D0D,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,MACFrB,EAAAA,EAAAA,IAAC2B,EAAAA,GAAW,CACVrE,GAAIsE,EAAAA,EACJxB,MAAM,UACN2B,eAAe,UACf8E,GAAIvM,EAAMuM,GACVhD,WAAY,IACZH,UAAU,OACVnD,OAAQ,CACNwB,eAAgB,aAGlB/B,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAItI,EAAMoQ,YAEzB1K,EAAAA,EAAAA,IAACiE,EAAAA,GAAI,CAAChC,GAAI,IACRjC,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAItI,EAAMqQ,YAG3B3K,EAAAA,EAAAA,IAAC4K,EAAAA,GAAI,CAACtN,GAAIuN,EAAAA,IAAgBlF,GAAI,EAAGpE,KAAM,MAKvCuJ,EAAMxQ,IACV0F,EAAAA,EAAAA,IAAC2D,EAAAA,IAAO,QAAC3B,SAAS,UAAU6B,WAAY,IAAKiB,GAAI,EAAG7C,GAAI,GAAO3H,IAwKjE,MAnK8C,KAC5C,MAAM,eAAEyQ,GD7F4B,MACpC,MAAMC,GAAOC,EAAAA,EAAAA,KACPlI,GAAOmI,EAAAA,EAAAA,gBAAe,cAsS5B,MAAO,CACLH,eAAgB,CACd9B,MAnI+B,CACjC,CACErI,MAAO,UACPG,OAAOoK,EAAAA,EAAAA,GAASpI,EAAKqI,SACrBtK,KAAM,sBACN1E,KAAKiP,EAAAA,EAAAA,IAAmB,eAAgBL,IAE1C,CACEpK,MAAO,WACPG,OAAOoK,EAAAA,EAAAA,GAASpI,EAAKuI,UACrBxK,KAAM,uBACN1E,KAAKiP,EAAAA,EAAAA,IAAmB,gBAAiBL,IAE3C,CACEpK,MAAO,QACPG,OAAOoK,EAAAA,EAAAA,GAASpI,EAAKwI,SACrBzK,KAAM,uBACN1E,KAAKiP,EAAAA,EAAAA,IAAmB,aAAcL,IAExC,CACEpK,MAAO,SACPG,OAAOoK,EAAAA,EAAAA,GAASpI,EAAKyI,QACrB1K,KAAM,qBACN1E,KAAKiP,EAAAA,EAAAA,IAAmB,cAAeL,KA6GvCS,OAzGgC,CAClC,CACE7K,MAAO,WACPG,OAAOoK,EAAAA,EAAAA,GAASpI,EAAK2I,UACrB5K,KAAM,2BACN1E,KAAKiP,EAAAA,EAAAA,IAAmB,gBAAiBL,IAE3C,CACEpK,MAAO,OACPG,OAAOoK,EAAAA,EAAAA,GAASpI,EAAK4I,MACrB7K,KAAM,mBACN1E,KAAKiP,EAAAA,EAAAA,IAAmB,YAAaL,IAEvC,CACEpK,MAAO,QACPG,OAAOoK,EAAAA,EAAAA,GAASpI,EAAK6I,OACrB9K,KAAM,oBACN1E,KAAKiP,EAAAA,EAAAA,IAAmB,aAAcL,KAyFtC3B,KArF8B,CAChC,CACEzI,OAAOyK,EAAAA,EAAAA,IACL,mDACAL,GAEFjK,OAAOoK,EAAAA,EAAAA,GAASpI,EAAK8I,SACrB/K,KAAM,8BACND,aAAawK,EAAAA,EAAAA,IACX,wDACAL,GAEF5O,KAAKiP,EAAAA,EAAAA,IAAmB,eAAgBL,IAE1C,CACEpK,OAAOyK,EAAAA,EAAAA,IACL,oDACAL,GAEFjK,OAAOoK,EAAAA,EAAAA,GAASpI,EAAK+I,OACrBhL,KAAM,uCACND,aAAawK,EAAAA,EAAAA,IACX,wDACAL,GAEF5O,KAAKiP,EAAAA,EAAAA,IAAmB,gBAAiBL,IAE3C,CACEpK,OAAOyK,EAAAA,EAAAA,IACL,uDACAL,GAEFjK,OAAOoK,EAAAA,EAAAA,GAASpI,EAAKgJ,KACrBjL,KAAM,eACND,aAAawK,EAAAA,EAAAA,IACX,wDACAL,GAEF5O,KAAKiP,EAAAA,EAAAA,IAAmB,gBAAiBL,KAgDzCgB,UA5CmC,CACrC,CACEpL,MAAO,WACPG,OAAOoK,EAAAA,EAAAA,GAASpI,EAAKkJ,UACrBnL,KAAM,uBACN1E,KAAKiP,EAAAA,EAAAA,IAAmB,gBAAiBL,IAE3C,CACEpK,MAAO,SACPG,OAAOoK,EAAAA,EAAAA,GAASpI,EAAKmJ,QACrBpL,KAAM,qBACN1E,KAAKiP,EAAAA,EAAAA,IAAmB,cAAeL,IAEzC,CACEpK,MAAO,SACPG,OAAOoK,EAAAA,EAAAA,GAASpI,EAAKoJ,QACrBrL,KAAM,qBACN1E,KAAKiP,EAAAA,EAAAA,IAAmB,cAAeL,IAEzC,CACEpK,MAAO,WACPG,OAAOoK,EAAAA,EAAAA,GAASpI,EAAKqJ,UACrBtL,KAAM,uBACN1E,KAAKiP,EAAAA,EAAAA,IAAmB,gBAAiBL,IAE3C,CACEpK,MAAO,UACPG,OAAOoK,EAAAA,EAAAA,GAASpI,EAAKsJ,SACrBvL,KAAM,6BACN1E,KAAKiP,EAAAA,EAAAA,IAAmB,eAAgBL,IAE1C,CACEpK,MAAO,UACPG,OAAOoK,EAAAA,EAAAA,GAASpI,EAAKuJ,SACrBxL,KAAM,sBACN1E,KAAKiP,EAAAA,EAAAA,IAAmB,eAAgBL,MAW3C,EClN0BuB,GAE3B,OACEvM,EAAAA,EAAAA,IAACwM,EAAAA,GAAS,CACRhM,aAAa,OACbsE,GAAI,GACJxI,MAAM,OACNmQ,aAAW,EACXC,cAAY,IAEZ1M,EAAAA,EAAAA,IAAC2J,EAAmB,CAACtC,SAAS,UAC5BrH,EAAAA,EAAAA,IAACuJ,EAAe,MACdvJ,EAAAA,EAAAA,IAACsK,EAAY,MACXtK,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,8CAElB5C,EAAAA,EAAAA,IAACuK,EAAgB,MACfvK,EAAAA,EAAAA,IAACwK,EAAO,CACN3D,GAAG,YACH6D,QAAQ,gDACRC,OAAO,+DAET3K,EAAAA,EAAAA,IAACwK,EAAO,CACN3D,GAAG,YACH6D,QAAQ,gDACRC,OAAO,gEAGX3K,EAAAA,EAAAA,IAAC2M,EAAAA,EAAU,CAACvH,MAAM,iBAChBpF,EAAAA,EAAAA,IAAC8K,EAAE,MACD9K,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,kDAElB5C,EAAAA,EAAAA,IAACiE,EAAAA,GAAI,MACHjE,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,uDAElB5C,EAAAA,EAAAA,IAACgH,EAAAA,EAAU,CAACH,GAAG,yEACb7G,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,2DAItB5C,EAAAA,EAAAA,IAACwJ,EAAgB,MACfxJ,EAAAA,EAAAA,IAACsK,EAAY,MACXtK,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,iDAElB5C,EAAAA,EAAAA,IAAAA,IAAAA,MACEA,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,+CAAgD,KAChE5C,EAAAA,EAAAA,IAAC4B,EAAAA,EAAI,CAACiF,GAAG,kBACP7G,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,iDAGpB5C,EAAAA,EAAAA,IAAC4M,EAAAA,EAAQ,CAACtK,QAASyI,EAAe9B,WAGtCjJ,EAAAA,EAAAA,IAAC2J,EAAmB,CAACtC,SAAS,QAC5BrH,EAAAA,EAAAA,IAACuJ,EAAe,MACdvJ,EAAAA,EAAAA,IAACsK,EAAY,MACXtK,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,8CAElB5C,EAAAA,EAAAA,IAACiE,EAAAA,GAAI,MACHjE,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,8DAElB5C,EAAAA,EAAAA,IAACuK,EAAgB,MACfvK,EAAAA,EAAAA,IAACwK,EAAO,CACN3D,GAAG,YACH6D,QAAQ,+CACRC,OAAO,+DAGX3K,EAAAA,EAAAA,IAAC2M,EAAAA,EAAU,CAAC/G,WAAW,IACrB5F,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,8CAGpB5C,EAAAA,EAAAA,IAACwJ,EAAgB,MACfxJ,EAAAA,EAAAA,IAACsK,EAAY,MACXtK,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,qDAElB5C,EAAAA,EAAAA,IAAC4M,EAAAA,EAAQ,CAACtK,QAASyI,EAAeiB,eAGtChM,EAAAA,EAAAA,IAAC2J,EAAmB,CAACtC,SAAS,SAC5BrH,EAAAA,EAAAA,IAACuJ,EAAe,MACdvJ,EAAAA,EAAAA,IAACsK,EAAY,MACXtK,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,8CAElB5C,EAAAA,EAAAA,IAAAA,IAAAA,MACEA,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,+DAElB5C,EAAAA,EAAAA,IAACuK,EAAgB,MACfvK,EAAAA,EAAAA,IAACwK,EAAO,CACN3D,GAAG,YACH6D,QAAQ,gDACRC,OAAO,iEAIb3K,EAAAA,EAAAA,IAACwJ,EAAgB,MACfxJ,EAAAA,EAAAA,IAACsK,EAAY,MACXtK,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,qDAElB5C,EAAAA,EAAAA,IAAAA,IAAAA,MACEA,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,oDAElB5C,EAAAA,EAAAA,IAAC4M,EAAAA,EAAQ,CAACtK,QAASyI,EAAe1B,UAGtCrJ,EAAAA,EAAAA,IAAC2J,EAAmB,CAACtC,SAAS,aAC5BrH,EAAAA,EAAAA,IAACuJ,EAAe,MACdvJ,EAAAA,EAAAA,IAACsK,EAAY,MACXtK,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,8CAElB5C,EAAAA,EAAAA,IAAAA,IAAAA,MACEA,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,iEAElB5C,EAAAA,EAAAA,IAACuK,EAAgB,MACfvK,EAAAA,EAAAA,IAACwK,EAAO,CACN3D,GAAG,YACH6D,QAAQ,kDACRC,OAAO,iEAET3K,EAAAA,EAAAA,IAACwK,EAAO,CACN3D,GAAG,YACH6D,QAAQ,kDACRC,OAAO,kEAGX3K,EAAAA,EAAAA,IAACsK,EAAY,MACXtK,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,0DAElB5C,EAAAA,EAAAA,IAAAA,IAAAA,MACEA,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,6DAA8D,KAC9E5C,EAAAA,EAAAA,IAAC4B,EAAAA,EAAI,CAACiF,GAAG,SACP7G,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,gEAGpB5C,EAAAA,EAAAA,IAAAA,IAAAA,MACEA,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,mEAGpB5C,EAAAA,EAAAA,IAACwJ,EAAgB,MACfxJ,EAAAA,EAAAA,IAACsK,EAAY,MACXtK,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,qDAElB5C,EAAAA,EAAAA,IAAAA,IAAAA,MACEA,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,qDAElB5C,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAACY,GAAI,IACPjC,EAAAA,EAAAA,IAAC4M,EAAAA,EAAQ,CAACtK,QAASyI,EAAeU,WAEpCzL,EAAAA,EAAAA,IAACsK,EAAY,MACXtK,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,oDAElB5C,EAAAA,EAAAA,IAAAA,IAAAA,MACEA,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,iDAAkD,KAClE5C,EAAAA,EAAAA,IAAC4B,EAAAA,EAAI,CAACiF,GAAG,UACP7G,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,qDAKd,C,8HCxPhB,MAWMiK,EAAS,CACb,aACA,WACA,YACA,aACA,WACA,cAuBIC,EAAyCzK,IAAgB,IAAf,MAAEzB,GAAO,EACvD,OACEZ,EAAAA,EAAAA,IAAC2D,EAAAA,GAAO,CACNrG,GAAG,KACH0E,SAAU,CAAEuB,KAAM,OAAQC,GAAI,UAC9BK,WAAY,IACZ6D,UAAW,GAEV9G,EACO,EAIRmM,EAAqCjD,IAAgB,IAAf,MAAElJ,GAAO,EACnD,OACEZ,EAAAA,EAAAA,IAAC2D,EAAAA,GAAO,CACNrG,GAAG,KACH0E,SAAU,CAAEuB,KAAM,OAAQC,GAAI,UAC9BK,WAAY,IACZ6D,UAAW,GAEV9G,EACO,EAIRoM,EAAwCC,IAAmB,IAAlB,SAAErI,GAAU,EACzD,OACE5E,EAAAA,EAAAA,IAAC2D,EAAAA,GAAO,CACNrG,GAAG,KACH0E,SAAU,CAAEuB,KAAM,MAAOC,GAAI,QAC7BK,WAAY,IACZ6D,UAAW,EACXvC,QAAS,EACTqC,cAAe,EACfD,aAAa,YACbjH,YAAY,YAEXsE,EACO,EAIRsI,EAAoCC,IAAmB,IAAlB,SAAEvI,GAAU,EACrD,OACE5E,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAACW,SAAS,KAAK8B,WAAW,OAAO1D,MAAM,YACxCwE,EACG,EAIJwI,EAA2CC,IAAgB,IAAf,MAAEjI,GAAO,EACzD,OACEpF,EAAAA,EAAAA,IAACsF,EAAAA,EAAK,CACJtD,SAAS,MACTuD,KAAMH,EACNkI,OAAQ,EACRhK,UAAU,SACViK,MAAM,IACNhN,OAAQ,CACN0C,WAAY,gBACZC,UAAW,mBAEb,EAIAsK,EAAmCC,IAAmB,IAAlB,SAAE7I,GAAU,EACpD,OACE5E,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CACH8C,QAAQ,gBACRoD,UAAW,EACXhG,UAAW,CAAE6B,KAAM,SAAU0G,GAAI,QAEhCrF,EACI,EAIL8I,EAAsCC,IAAmB,IAAlB,SAAE/I,GAAU,EACvD,OAAO5E,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CAAC/E,MAAM,QAAQsI,EAAe,EAGrCgJ,EAAqCC,IAapC,IAbqC,YAC1ChN,EAAW,aACXiN,EAAY,UACZC,EAAS,MACT3I,EAAK,MACL4I,EAAK,MACLpN,EAAK,OACL8I,EAAM,SACNuE,EAAQ,MACR7N,EAAK,KACL8N,EAAI,KACJC,EAAI,MACJC,GACD,EACC,MAGM9G,GAASlG,EAAAA,EAAAA,IAAkB,iBAAkB,iBAEnD,OACEpB,EAAAA,EAAAA,IAACwB,EAAAA,GAAI,CACHoB,GAAE,QAAUoL,EACZlL,QAAS,KAPXmL,EAASD,EAOsB,EAC7BK,aAAc3E,EAASqE,EAAS,OAChCO,WAAY5E,EAAM,gBAClB6E,gBAAiB7E,EAASoE,EAAY,OACtC1N,MAAOsJ,EAAS,WAAa,OAC7Bf,OAAQe,EAAM,iBACdhJ,WAAYgJ,EAAStJ,EAAQ,aAC7BsB,UAAW,CACT6B,KAAM,SACNC,GAAOkG,EAAS,SAAW,MAC3BlD,GAAI,UAENlC,QAAS,CACPf,KAASmG,EAAS,aAAe,gBACjClD,GAAI,cAEN5J,MAAO,CAAE2G,KAAM,SAAUiD,GAAI,cAC7BnG,OAAO,YACPC,YAAY,OACZ6E,QAAS,EACT5E,OAAQ,CACNG,WAAYgJ,EAAStJ,EAAQ,gBAC7B6C,WAAYyG,EAAS,OAAS,iBAC9BxG,UAAWwG,EAAS,OAAS,eAC7BjJ,UAAW6G,IAGZoC,GACC1J,EAAAA,EAAAA,IAACsF,EAAAA,EAAK,CAACrD,GAAI,EAAGsD,KAAMH,EAAOpD,SAAS,SAEpChC,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAACoN,EAAW,CAAChI,MAAOA,KACpBpF,EAAAA,EAAAA,IAAC+M,EAAK,CAACnM,MAAOA,MAGlBZ,EAAAA,EAAAA,IAAAA,MAAAA,KACG0J,IACC1J,EAAAA,EAAAA,IAAAA,MAAAA,MACEA,EAAAA,EAAAA,IAAC8M,EAAS,CAAClM,MAAOA,KAClBZ,EAAAA,EAAAA,IAACkN,EAAI,KAAErM,IACPb,EAAAA,EAAAA,IAACwN,EAAG,KACDU,IACClO,EAAAA,EAAAA,IAAC0N,EAAM,MACL1N,EAAAA,EAAAA,IAACgN,EAAQ,MACPhN,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,WAGlB5C,EAAAA,EAAAA,IAACkN,EAAI,MACHlN,EAAAA,EAAAA,IAAAA,KAAAA,KACGkO,EAAKzL,KAAI,CAAC+L,EAAK7L,KACd3C,EAAAA,EAAAA,IAAAA,KAAAA,CAAI5F,IAAKuI,GAAM6L,QAMxBL,IACCnO,EAAAA,EAAAA,IAAC0N,EAAM,MACL1N,EAAAA,EAAAA,IAACgN,EAAQ,MACPhN,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,WAElB5C,EAAAA,EAAAA,IAACkN,EAAI,MACHlN,EAAAA,EAAAA,IAAAA,KAAAA,KACGmO,EAAK1L,KAAI,CAACgM,EAAK9L,KACd3C,EAAAA,EAAAA,IAAAA,KAAAA,CAAI5F,IAAKuI,GAAM8L,UAO3BzO,EAAAA,EAAAA,IAAAA,MAAAA,MACEA,EAAAA,EAAAA,IAACgN,EAAQ,MACPhN,EAAAA,EAAAA,IAAC+H,EAAAA,EAAW,CAACnF,GAAG,uBAElB5C,EAAAA,EAAAA,IAACkN,EAAI,MACHlN,EAAAA,EAAAA,IAAAA,KAAAA,KACGoO,EAAM3L,KAAI,CAAC3B,EAAM6B,KAChB3C,EAAAA,EAAAA,IAAAA,KAAAA,CAAI5F,IAAKuI,IACP3C,EAAAA,EAAAA,IAAC4B,EAAAA,EAAI,CACHxH,IAAKuI,EACLkE,GAAI/F,EAAKI,IACTd,MAAM,WACNG,OAAQ,CACNH,MAAO,UAGRU,EAAKyE,cAUnB,EAkEX,IAjD4CmJ,IAAgB,IAAf,MAAEC,GAAO,EACpD,MAAM3D,GAAOC,EAAAA,EAAAA,MACP,EAAC2D,EAAU,EAACC,IAAgB5T,EAAAA,EAAAA,UAAiB,GAG7C6T,EAAgBnM,IACpBkM,EAAalM,IACToM,EAAAA,EAAAA,OACFC,EAAAA,EAAAA,GAAS,sBAAsBrM,EAAOqI,EACxC,EAGF,OACEhL,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CACF4N,oBAAoB,UACpBC,iBAAiB,UACjB1O,aAAa,KACbuD,GAAI,GACJpF,QAAS,CAAE4E,KAAM,OAAQiD,GAAI,QAC7BxD,cAAc,SACdgD,KAAK,QAEJ2I,EAAMlM,KAAI,CAAC0M,EAAMxM,KAGhB,MAAMyM,EA5RIC,KAChB,IAAIC,EAAO,EACX,IAAK,MAAMC,KAAQF,EAEjBC,GAAQA,GAAQ,GAAKA,EADRC,EAAKC,WAAW,GAE7BF,GAAQ,EAEV,OAAOG,KAAKC,IAAIJ,EAAK,EAqREK,CAASR,EAAK/J,OAASyH,EAAOrE,OACzCpI,EAAQyM,EAAOuC,GACrB,OACEpP,EAAAA,EAAAA,IAAC4N,EAAQ,CACPxT,IAAKuI,EACL/B,MAAOuO,EAAKvO,MACZwE,MAAO+J,EAAK/J,MACZvE,YAAasO,EAAKtO,YAClBqN,KAAMiB,EAAKjB,KACXC,KAAMgB,EAAKhB,KACXC,MAAOe,EAAKf,MACZJ,MAAOrL,EACPmL,aAde,EAefC,UAdY,EAeZrE,OAAQ/G,IAAQiM,EAChBX,SAAUa,EACV1O,MAAOA,GACP,IAGF,C,kFCpOV,IA3EkCiC,IAA4B,IAA3B,QAAEC,EAAO,SAAEsC,GAAU,EACtD,MAAM,EAACgL,EAAU,EAACC,IAAgB5U,EAAAA,EAAAA,WAAkB,GAC9C8T,EAAWe,EAAAA,IACXxI,GAASlG,EAAAA,EAAAA,IAAkB,iBAAkB,iBAEnD,OACEpB,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,KACG4P,GAAab,IAGZ/O,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CACFwD,SAAS,QACTkL,IAAK,EACL7K,KAAM,EACNe,EAAE,OACF+J,EAAE,OACFjL,OAAQ,EACRjC,QAAS,IAAM+M,GAAa,MAGhC7P,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CACFwD,SAAS,WACTlG,QAAQ,cACRsR,WAAW,OACXtH,OAAO,UACP/H,MAAM,YACNsP,aAAenB,OAAsCnI,EAA3B,IAAMiJ,GAAa,GAC7CM,aAAepB,OAAuCnI,EAA5B,IAAMiJ,GAAa,GAC7C/M,QAASiM,EAAW,IAAMc,GAAcD,QAAahJ,GAEpDhC,EACAgL,IACC5P,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CACFqC,UAAU,SACV9E,WAAW,SACXqH,EAAG,CAAE1C,KAAM,QAAS0G,GAAI,SACxB7J,MAAM,OACNoC,GAAG,aACH/B,UAAW6G,EACXzC,SAAS,WACTE,OAAO,SACPuB,GAAI,EACJC,GAAI,EACJhC,cAAc,OACdvC,SAAS,KACT6B,WAAW,SACX8E,OAAO,UACPnI,aAAa,OACbyE,OAAO,OACPC,KAAK,MACLhC,UAAU,qBAEVlD,EAAAA,EAAAA,IAACqB,EAAAA,GAAG,CACF/D,GAAG,OACHuH,SAAS,WACTI,QAAS,EACTC,KAAK,kBACLkL,iBAAkB,GAClBC,iBAAiB,QACjBC,iBAAiB,cACjBC,eAAgB,GAChBC,eAAe,QACfC,eAAe,aACfC,gBAAiB,GACjBC,gBAAgB,QAChBC,gBAAgB,gBAEjBtO,IAIN,C,gFC/EP,MAYMuO,EAAiCC,KAAKC,UALQ,CAClD1S,MAAO,GACP2S,UAAW,IAsCAC,EAAeC,eAC1BhQ,EACAiQ,QAAsB,IAAtBA,IAAAA,GAAyB,GAEzB,MAAM,KAAEpO,SAAeqO,IAAAA,IAAUlQ,GAEjC,OADAiQ,GAjC0B,EAAI/W,EAAaiE,KAC3C,MAAMgT,EAAoC,CACxChT,QACA2S,WAAW,IAAIM,MAAOC,WAExBC,aAAaC,QAAQrX,EAAK0W,KAAKC,UAAUM,GAAkB,EA4B1CK,CAAaxQ,EAAK6B,GAC5BA,CACT,EAEM4O,EAAoBzQ,IAAiC0Q,OArBjCxX,EAqB+C8G,EApBhE4P,KAAKe,MACVL,aAAaM,QAAQ1X,IAAQyW,GAFPzW,KAqBmD,EAOhE2X,EAAUb,UACrB,MAAMc,EAA8BL,EAAczQ,GAC5C+Q,GAAM,IAAIX,MAAOC,UACvB,OACES,GACAA,EAAWhB,UAAY,GACvBiB,EAAMD,EAAWhB,UArEJ,KAuENgB,EAAW3T,MAEX4S,EAAa/P,GAAK,EAC3B,C","sources":["webpack://ethereum-org-website/./node_modules/@chakra-ui/image/dist/index.esm.js","webpack://ethereum-org-website/./node_modules/@chakra-ui/table/dist/index.esm.js","webpack://ethereum-org-website/./src/components/CardList.tsx","webpack://ethereum-org-website/./src/components/DataProductCard.tsx","webpack://ethereum-org-website/./src/components/GhostCard.tsx","webpack://ethereum-org-website/./src/components/HorizontalCard.tsx","webpack://ethereum-org-website/./src/components/InfoBanner.tsx","webpack://ethereum-org-website/./src/components/PageHero.tsx","webpack://ethereum-org-website/./src/components/ProductList.tsx","webpack://ethereum-org-website/./src/components/SimpleTable.tsx","webpack://ethereum-org-website/./src/components/Pill.tsx","webpack://ethereum-org-website/./src/components/StablecoinAccordion/utils.ts","webpack://ethereum-org-website/./src/components/StablecoinAccordion/AccordionCustomItem.tsx","webpack://ethereum-org-website/./src/components/StablecoinAccordion/useStablecoinAccordion.ts","webpack://ethereum-org-website/./src/components/StablecoinAccordion/index.tsx","webpack://ethereum-org-website/./src/components/StablecoinBoxGrid.tsx","webpack://ethereum-org-website/./src/components/Tooltip.tsx","webpack://ethereum-org-website/./src/utils/cache.ts"],"sourcesContent":["// ../../react-shim.js\nimport React from \"react\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/dist/index.esm.js\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(\"img\", {\n    width: htmlWidth,\n    height: htmlHeight,\n    ref,\n    alt,\n    ...rest\n  });\n});\nNativeImage.displayName = \"NativeImage\";\n\n// src/image.tsx\nvar Image2 = forwardRef2(function Image3(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ React.createElement(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage2.displayName = \"Image\";\n\n// src/img.tsx\nimport { chakra as chakra2, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar Img = forwardRef3((props, ref) => /* @__PURE__ */ React.createElement(chakra2.img, {\n  ref,\n  as: NativeImage,\n  className: \"chakra-image\",\n  ...props\n}));\nexport {\n  Image2 as Image,\n  Img,\n  shouldShowFallbackImage,\n  useImage\n};\n","// ../../react-shim.js\nimport React from \"react\";\n\n// src/table.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\n// src/table.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [TableStylesProvider, useTableStyles] = createContext({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `\n});\nvar Table = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props);\n  const { className, ...tableProps } = omitThemingProps(props);\n  return /* @__PURE__ */ React.createElement(TableStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(chakra.table, {\n    role: \"table\",\n    ref,\n    __css: styles.table,\n    className: cx(\"chakra-table\", className),\n    ...tableProps\n  }));\n});\nTable.displayName = \"Table\";\n\n// src/table-container.tsx\nimport { chakra as chakra2, forwardRef as forwardRef2 } from \"@chakra-ui/system\";\nvar TableContainer = forwardRef2((props, ref) => {\n  const { overflow, overflowX, className, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    ref,\n    className: cx(\"chakra-table__container\", className),\n    ...rest,\n    __css: {\n      display: \"block\",\n      whiteSpace: \"nowrap\",\n      WebkitOverflowScrolling: \"touch\",\n      overflowX: overflow ?? overflowX ?? \"auto\",\n      overflowY: \"hidden\",\n      maxWidth: \"100%\"\n    }\n  });\n});\n\n// src/table-caption.tsx\nimport { chakra as chakra3, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar TableCaption = forwardRef3((props, ref) => {\n  const { placement = \"bottom\", ...rest } = props;\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra3.caption, {\n    ...rest,\n    ref,\n    __css: {\n      ...styles.caption,\n      captionSide: placement\n    }\n  });\n});\nTableCaption.displayName = \"TableCaption\";\n\n// src/thead.tsx\nimport { chakra as chakra4, forwardRef as forwardRef4 } from \"@chakra-ui/system\";\nvar Thead = forwardRef4((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra4.thead, {\n    ...props,\n    ref,\n    __css: styles.thead\n  });\n});\n\n// src/tbody.tsx\nimport { chakra as chakra5, forwardRef as forwardRef5 } from \"@chakra-ui/system\";\nvar Tbody = forwardRef5((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra5.tbody, {\n    ...props,\n    ref,\n    __css: styles.tbody\n  });\n});\n\n// src/tfooter.tsx\nimport { chakra as chakra6, forwardRef as forwardRef6 } from \"@chakra-ui/system\";\nvar Tfoot = forwardRef6((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra6.tfoot, {\n    ...props,\n    ref,\n    __css: styles.tfoot\n  });\n});\n\n// src/th.tsx\nimport { chakra as chakra7, forwardRef as forwardRef7 } from \"@chakra-ui/system\";\nvar Th = forwardRef7(({ isNumeric, ...rest }, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra7.th, {\n    ...rest,\n    ref,\n    __css: styles.th,\n    \"data-is-numeric\": isNumeric\n  });\n});\n\n// src/tr.tsx\nimport { chakra as chakra8, forwardRef as forwardRef8 } from \"@chakra-ui/system\";\nvar Tr = forwardRef8((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra8.tr, {\n    role: \"row\",\n    ...props,\n    ref,\n    __css: styles.tr\n  });\n});\n\n// src/td.tsx\nimport { chakra as chakra9, forwardRef as forwardRef9 } from \"@chakra-ui/system\";\nvar Td = forwardRef9(({ isNumeric, ...rest }, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra9.td, {\n    role: \"gridcell\",\n    ...rest,\n    ref,\n    __css: styles.td,\n    \"data-is-numeric\": isNumeric\n  });\n});\nexport {\n  Table,\n  TableCaption,\n  TableContainer,\n  Tbody,\n  Td,\n  Tfoot,\n  Th,\n  Thead,\n  Tr,\n  useTableStyles\n};\n","import React, { ReactNode } from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport {\n  Box,\n  Flex,\n  HStack,\n  LinkBox,\n  LinkOverlay,\n  StackProps,\n  useColorModeValue,\n} from \"@chakra-ui/react\"\n\nimport { ImageProp } from \"../types\"\nimport * as url from \"../utils/url\"\nimport Link from \"./Link\"\n\nexport type CardListItem = {\n  title?: ReactNode\n  description?: ReactNode\n  caption?: ReactNode\n  link?: string\n  id?: string\n} & ImageProp\n\nexport interface IProps {\n  content: Array<CardListItem>\n  clickHandler?: (idx: string | number) => void\n}\n\nconst CardContainer = (props: StackProps) => {\n  return (\n    <HStack\n      spacing={4}\n      p={4}\n      color=\"text\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      _hover={{\n        borderRadius: \"base\",\n        boxShadow: \"0 0 1px var(--eth-colors-primary)\",\n        background: \"tableBackgroundHover\",\n      }}\n      {...props}\n    />\n  )\n}\n\nconst Card = (props: CardListItem & Omit<StackProps, \"title\" | \"id\">) => {\n  const { title, description, caption, link, image, alt, ...rest } = props\n\n  const isLink = !!link\n  const isExternal = url.isExternal(link || \"\")\n\n  const descriptionColor = useColorModeValue(\"gray.500\", \"gray.400\")\n\n  return (\n    <CardContainer {...rest}>\n      {image && <Box as={GatsbyImage} image={image} alt={alt} minW=\"20px\" />}\n      <Flex flex=\"1 1 75%\" direction=\"column\">\n        {isLink ? (\n          <LinkOverlay\n            as={Link}\n            href={link}\n            hideArrow\n            color=\"text\"\n            textDecoration=\"none\"\n            _hover={{ textDecoration: \"none\" }}\n          >\n            {title}\n          </LinkOverlay>\n        ) : (\n          <Box>{title}</Box>\n        )}\n\n        <Box fontSize=\"sm\" mb={0} color={descriptionColor}>\n          {description}\n        </Box>\n      </Flex>\n      {caption && (\n        <Flex flex=\"1 0 25%\" align=\"center\" wrap=\"wrap\" mr={4}>\n          <Box fontSize=\"sm\" mb={0} opacity={0.6}>\n            {caption}\n          </Box>\n        </Flex>\n      )}\n      {isExternal && <Box>↗</Box>}\n    </CardContainer>\n  )\n}\n\nconst CardList: React.FC<IProps> = ({ content, clickHandler = () => null }) => (\n  <Box bg=\"background\" width=\"full\">\n    {content.map((listItem, idx) => {\n      const { link, id } = listItem\n      const isLink = !!link\n\n      return isLink ? (\n        <LinkBox key={id || idx}>\n          <Card {...listItem} />\n        </LinkBox>\n      ) : (\n        <Card\n          key={idx}\n          onClick={() => clickHandler(idx)}\n          mb={4}\n          {...listItem}\n        />\n      )\n    })}\n  </Box>\n)\n\nexport default CardList\n","import React from \"react\"\n\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport {\n  Box,\n  Flex,\n  Heading,\n  Image,\n  Text,\n  LinkOverlay,\n  LinkBox,\n  useColorModeValue,\n} from \"@chakra-ui/react\"\n\nexport interface DataRow {\n  logo: IGatsbyImageData\n  coin: string\n  apy: string\n}\n\nexport interface IProps {\n  url: string\n  background: string\n  image: IGatsbyImageData\n  alt?: string\n  name: string\n  description?: string\n  data?: Array<DataRow>\n}\n\nconst DataProductCard: React.FC<IProps> = ({\n  url,\n  background,\n  image,\n  alt,\n  name,\n  description,\n  data,\n}) => {\n  const boxShadow = useColorModeValue(\"tableBox.light\", \"tableBox.dark\")\n\n  return (\n    <LinkBox\n      color=\"text\"\n      background=\"searchBackground\"\n      border=\"1px solid\"\n      borderColor=\"lightBorder\"\n      borderRadius=\"base\"\n      overflow=\"hidden\"\n      boxShadow={boxShadow}\n      display=\"flex\"\n      flexDirection=\"column\"\n      _hover={{\n        background: \"tableBackgroundHover\",\n        boxShadow: boxShadow,\n        transition: \"transform 0.1s ease 0s\",\n        transform: \"scale(1.02)\",\n      }}\n    >\n      <Flex\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        boxShadow=\"rgb(0 0 0 / 10%) 0px -1px 0px inset;\"\n        minH=\"200px\"\n        bg={background}\n      >\n        <Image\n          as={GatsbyImage}\n          image={image}\n          objectFit=\"cover\"\n          alt={alt ? alt : `${name} logo`}\n          width=\"100%\"\n          alignSelf=\"center\"\n          maxWidth={{ base: \"311px\", sm: \"372px\" }}\n          maxHeight=\"257px\"\n        />\n      </Flex>\n      <Flex\n        textAlign=\"left\"\n        flexDirection=\"column\"\n        justifyContent=\"space-between\"\n      >\n        <Box>\n          <Heading\n            as=\"h3\"\n            size=\"lg\"\n            fontSize=\"2xl\"\n            fontWeight=\"600\"\n            lineHeight=\"1.4\"\n            my={8}\n            mx={4}\n            mb={4}\n          >\n            <LinkOverlay href={url} isExternal>\n              {name}\n            </LinkOverlay>\n          </Heading>\n          <Text fontSize=\"sm\" opacity=\"0.8\" mx={4} mb={4} lineHeight=\"140%\">\n            {description}\n          </Text>\n        </Box>\n        {data && (\n          <Box\n            overflowY=\"scroll\"\n            maxHeight=\"160px\"\n            mb={4}\n            borderTop=\"1px solid\"\n            borderColor=\"lightBorder\"\n          >\n            {data.map(({ logo, coin, apy }, idx) => (\n              <Flex\n                key={idx}\n                color=\"text300\"\n                fontSize=\"sm\"\n                justify=\"space-between\"\n                p={4}\n                textTransform=\"uppercase\"\n                border=\"1px solid\"\n                borderColor=\"lightBorder\"\n                borderLeft=\"0\"\n                borderRight=\"0\"\n              >\n                <Flex alignItems=\"center\">\n                  {logo && (\n                    <Image\n                      as={GatsbyImage}\n                      image={logo}\n                      objectFit=\"cover\"\n                      alt=\"\"\n                      minWidth=\"24px\"\n                      marginRight=\"0.5rem\"\n                    />\n                  )}\n                  {coin}\n                </Flex>\n                <Flex alignItems=\"center\">{apy}% APY</Flex>\n              </Flex>\n            ))}\n          </Box>\n        )}\n      </Flex>\n    </LinkBox>\n  )\n}\n\nexport default DataProductCard\n","import React from \"react\"\nimport { Box } from \"@chakra-ui/react\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  className?: string\n}\n\nconst GhostCard: React.FC<IProps> = ({ children, className }) => (\n  <Box position=\"relative\" mt=\"2\" alignSelf=\"stretch\" className={className}>\n    <Box\n      zIndex=\"hide\"\n      position=\"absolute\"\n      backgroundColor=\"ghostCardGhost\"\n      bottom=\"2\"\n      left=\"2\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      borderRadius=\"2px\"\n      height=\"full\"\n      width=\"full\"\n    />\n    <Box\n      className=\"ghost-card-base\"\n      height=\"full\"\n      width=\"full\"\n      borderRadius=\"2px\"\n      zIndex={2}\n      padding=\"6\"\n      background=\"ghostCardBackground\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      textAlign=\"left\"\n    >\n      {children}\n    </Box>\n  </Box>\n)\n\nexport default GhostCard\n","import React, { ReactNode } from \"react\"\nimport Emoji from \"./Emoji\"\nimport { Text, Box, Flex } from \"@chakra-ui/react\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  emoji: string\n  title?: ReactNode\n  description: ReactNode\n  className?: string\n  emojiSize?: number\n}\n\nconst HorizontalCard: React.FC<IProps> = ({\n  emoji,\n  title,\n  description,\n  children,\n  className,\n  emojiSize,\n}) => (\n  <Flex borderRadius=\"base\" className={className}>\n    <Emoji fontSize={`${emojiSize}rem`} text={emoji} />\n    <Box flexGrow=\"0\" flexShrink=\"1\" flexBasis=\"75%\" ml=\"8\">\n      <Text fontSize=\"lg\">{title}</Text>\n      <Text opacity=\"0.8\" mt=\"-4\" mb=\"2\">\n        {description}\n      </Text>\n      {children}\n    </Box>\n  </Flex>\n)\n\nexport default HorizontalCard\n","import React from \"react\"\nimport { Flex } from \"@chakra-ui/react\"\nimport Emoji from \"./Emoji\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  className?: string\n  emoji?: string\n  isWarning?: boolean\n  shouldCenter?: boolean\n  shouldSpaceBetween?: boolean\n}\n\nconst InfoBanner: React.FC<IProps> = ({\n  children,\n  className,\n  emoji,\n  isWarning = false,\n  shouldCenter = false,\n  shouldSpaceBetween = false,\n  ...props\n}) => {\n  const banner = (\n    <Flex\n      align=\"center\"\n      p={6}\n      borderRadius={\"sm\"}\n      maxW={shouldCenter ? \"55rem\" : \"100%\"}\n      color=\"black300\"\n      bg={isWarning ? \"warning\" : \"infoBanner\"}\n      direction={{ base: \"column\", sm: \"row\" }}\n      {...props}\n    >\n      {emoji && (\n        <Emoji\n          flexGrow=\"0\"\n          flexShrink=\"0\"\n          mr={{ base: 0, sm: 6 }}\n          mb={{ base: 2, sm: 0 }}\n          alignSelf={{ base: \"flex-start\", sm: \"auto\" }}\n          text={emoji}\n          fontSize=\"4xl\"\n        />\n      )}\n      <Flex\n        display={{ base: \"block\", sm: shouldSpaceBetween ? \"flex\" : \"block\" }}\n        align={shouldSpaceBetween ? \"center\" : \"auto\"}\n        w={shouldSpaceBetween ? \"100%\" : \"auto\"}\n        justify={shouldSpaceBetween ? \"space-between\" : \"auto\"}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  )\n  return shouldCenter ? <Flex justify=\"center\">{banner}</Flex> : banner\n}\n\nexport default InfoBanner\n","import React, { ReactNode } from \"react\"\nimport { Box, Flex, Heading, Wrap, WrapItem } from \"@chakra-ui/react\"\n\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\n\nimport ButtonLink, { IProps as IButtonLinkProps } from \"./ButtonLink\"\nimport Button, { IProps as IButtonProps } from \"./Button\"\n\nexport interface IButtonLink extends IButtonLinkProps {\n  content: ReactNode\n}\n\nexport interface IButton extends IButtonProps {\n  content: ReactNode\n}\n\nexport interface IContent {\n  buttons?: Array<IButtonLink | IButton>\n  title: ReactNode\n  header: ReactNode\n  subtitle: ReactNode\n  image: IGatsbyImageData\n  alt: string\n}\n\nexport interface IProps {\n  content: IContent\n  isReverse?: boolean\n  children?: ReactNode\n  className?: string\n}\n\nfunction isButtonLink(button: IButton | IButtonLink): button is IButtonLink {\n  return (button as IButtonLink).to !== undefined\n}\n\nconst PageHero: React.FC<IProps> = ({\n  content,\n  isReverse = false,\n  children,\n  className,\n}) => {\n  const { buttons, title, header, subtitle, image, alt } = content\n  return (\n    <Box py={4} px={8} width=\"full\">\n      <Flex\n        justifyContent=\"space-between\"\n        mt={8}\n        px={{ base: 0, lg: 16 }}\n        direction={{ base: isReverse ? \"column\" : \"column-reverse\", lg: \"row\" }}\n        className={className}\n      >\n        <Box\n          maxW={{ base: \"full\", lg: \"container.sm\" }}\n          py={{ base: 16, lg: 32 }}\n          pl={{ base: 0, lg: 8 }}\n          mr={4}\n        >\n          <Heading\n            as=\"h1\"\n            textTransform=\"uppercase\"\n            fontSize=\"md\"\n            fontWeight=\"normal\"\n            mb={4}\n            color=\"text300\"\n            lineHeight={1.4}\n          >\n            {title}\n          </Heading>\n          <Heading\n            as=\"h2\"\n            fontWeight=\"bold\"\n            fontSize={{ base: \"2.5rem\", lg: \"5xl\" }}\n            maxW=\"full\"\n            mb={0}\n            color=\"text00\"\n            lineHeight={1.4}\n          >\n            {header}\n          </Heading>\n          <Box\n            fontSize={{ base: \"xl\", lg: \"2xl\" }}\n            lineHeight={1.4}\n            color=\"text200\"\n            mt={4}\n            mb={8}\n          >\n            {subtitle}\n          </Box>\n          {buttons && (\n            <Wrap spacing={2}>\n              {buttons.map((button, idx) => {\n                if (isButtonLink(button)) {\n                  return (\n                    <WrapItem>\n                      <ButtonLink\n                        key={idx}\n                        variant={button.variant}\n                        to={button.to}\n                      >\n                        {button.content}\n                      </ButtonLink>\n                    </WrapItem>\n                  )\n                }\n\n                if (button.toId) {\n                  return (\n                    <WrapItem>\n                      <Button\n                        key={idx}\n                        variant={button.variant}\n                        toId={button.toId}\n                      >\n                        {button.content}\n                      </Button>\n                    </WrapItem>\n                  )\n                }\n              })}\n            </Wrap>\n          )}\n          {children}\n        </Box>\n        <Box\n          as={GatsbyImage}\n          flex=\"1 1 50%\"\n          alignSelf=\"center\"\n          mt={{ base: 0, lg: 12 }}\n          ml={{ base: 0, lg: 12 }}\n          w=\"full\"\n          maxWidth={{ base: \"560px\", lg: \"624px\" }}\n          image={image}\n          imgStyle={{\n            objectFit: \"contain\",\n          }}\n          alt={alt}\n          loading=\"eager\"\n        />\n      </Flex>\n    </Box>\n  )\n}\n\nexport default PageHero\n","import React from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { Box, Flex, Heading, Image, useColorModeValue } from \"@chakra-ui/react\"\n\nimport ButtonLink from \"./ButtonLink\"\nimport Translation from \"./Translation\"\n\nexport interface Content {\n  title: string\n  description: string\n  link?: string\n  image?: any\n  alt: string\n  id?: string\n}\n\nexport interface IProps {\n  content: Array<Content>\n  category: string\n}\n\nconst ProductList: React.FC<IProps> = ({ content, category }) => {\n  const shadow = useColorModeValue(\"tableBox.light\", \"tableBox.dark\")\n\n  return (\n    <Box width=\"full\">\n      <Heading\n        as=\"h3\"\n        fontSize=\"2xl\"\n        borderBottom=\"2px solid\"\n        borderColor=\"border\"\n        paddingBottom={4}\n        marginBottom={0}\n      >\n        {category}\n      </Heading>\n      {content.map(({ title, description, link, image, alt, id }, idx) => (\n        <Flex\n          key={id || idx}\n          color=\"text\"\n          marginBottom=\"px\"\n          marginTop={8}\n          alignItems={{ sm: \"flex-start\" }}\n        >\n          <Box width=\"5rem\">\n            {image && (\n              <Image\n                as={GatsbyImage}\n                image={image}\n                alt={alt}\n                boxShadow={shadow}\n                borderRadius=\"sm\"\n              />\n            )}\n          </Box>\n          <Flex\n            paddingBottom={4}\n            width=\"full\"\n            alignItems={{ base: \"flex-start\", sm: \"center\" }}\n            marginLeft={{ base: 4, sm: 6 }}\n            justifyContent=\"space-between\"\n            borderBottom=\"1px solid\"\n            borderColor=\"border\"\n            flexDir={{ base: \"column\", sm: \"row\" }}\n          >\n            <Box flexDir=\"column\">\n              <Box>{title}</Box>\n              <Box fontSize=\"sm\" marginBottom={0} opacity=\"0.6\">\n                {description}\n              </Box>\n            </Box>\n            {link && (\n              <ButtonLink\n                variant=\"outline\"\n                to={link}\n                marginLeft={{ base: 0, sm: 8 }}\n                paddingY={1}\n                paddingX={6}\n                borderRadius=\"sm\"\n                marginTop={{ base: 4, sm: 0 }}\n              >\n                <Translation id=\"page-dapps-ready-button\" />\n              </ButtonLink>\n            )}\n          </Flex>\n        </Flex>\n      ))}\n    </Box>\n  )\n}\n\nexport default ProductList\n","import React from \"react\"\n\nimport Translation from \"./Translation\"\nimport {\n  Flex,\n  Image,\n  LinkBox,\n  LinkOverlay,\n  Table,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n  useToken,\n} from \"@chakra-ui/react\"\nimport Link from \"./Link\"\n\nexport interface TableRow {\n  name: string\n  marketCap: string\n  image?: string\n  type: string\n  url?: string\n}\n\nexport interface IProps {\n  columns: Array<string>\n  content: Array<TableRow>\n  hasError: boolean\n}\n\n// TODO generalize this component - currently tailored for stablecoin market caps\nconst SimpleTable: React.FC<IProps> = ({ columns, content, hasError }) => {\n  const [textColor] = useToken(\"colors\", [\"text\"])\n\n  return (\n    <Table\n      variant=\"unstyled\"\n      my={8}\n      borderRadius=\"sm\"\n      border={`1px solid ${textColor}`}\n      bg=\"background\"\n      mb={8}\n      minW=\"720px\"\n    >\n      <Thead bg=\"ednBackground\" color=\"text200\">\n        <Tr boxShadow={`0 1px 1px ${textColor}`} mb=\"1px\">\n          {columns.map((column, idx) => (\n            <Th\n              key={idx}\n              py={5}\n              fontSize=\"md\"\n              fontWeight=\"normal\"\n              letterSpacing=\"normal\"\n            >\n              {column}\n            </Th>\n          ))}\n\n          {content && content[0]?.url && (\n            <Th p={5} fontSize=\"md\" fontWeight=\"normal\" textAlign=\"end\">\n              ↗\n            </Th>\n          )}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {hasError && (\n          <Tr p={4}>\n            <Td colSpan={4}>\n              <Translation id=\"page-stablecoins-table-error\" />\n            </Td>\n          </Tr>\n        )}\n        {!hasError && content.length === 0 && (\n          <Tr p={4}>\n            <Td colSpan={4}>\n              <Translation id=\"page-stablecoins-table-loading\" />\n            </Td>\n          </Tr>\n        )}\n\n        {content.map(({ name, marketCap, image, type, url }, idx) => (\n          <LinkBox\n            as={Tr}\n            key={idx}\n            color=\"text\"\n            boxShadow={`0 1px 1px ${textColor}`}\n            _hover={{\n              textDecoration: \"none\",\n              boxShadow: `0 0 1px ${textColor}`,\n              bg: \"primary200\",\n              color: \"black300\",\n              cursor: url ? \"pointer\" : \"default\",\n            }}\n            _focus={{\n              boxShadow: `0 0 1px ${textColor}`,\n              bg: \"primary200\",\n              color: \"black300\",\n            }}\n          >\n            <Td>\n              <Flex align=\"center\">\n                {image && <Image src={image} alt=\"\" mr={4} boxSize={6} />}\n                {url ? (\n                  <LinkOverlay\n                    as={Link}\n                    hideArrow\n                    to={url}\n                    color=\"inherit\"\n                    textDecoration=\"inherit\"\n                    _hover={{\n                      textDecoration: \"inherit\",\n                    }}\n                    isExternal\n                  >\n                    {name}\n                  </LinkOverlay>\n                ) : (\n                  <>{name}</>\n                )}\n              </Flex>\n            </Td>\n            <Td>\n              <Flex align=\"center\">{marketCap}</Flex>\n            </Td>\n            <Td>\n              <Flex align=\"center\">{type}</Flex>\n            </Td>\n            {url && (\n              <Td color=\"primary\">\n                <Flex align=\"center\" justify=\"flex-end\">\n                  ↗\n                </Flex>\n              </Td>\n            )}\n          </LinkBox>\n        ))}\n      </Tbody>\n    </Table>\n  )\n}\nexport default SimpleTable\n","import React from \"react\"\nimport { Flex, FlexProps } from \"@chakra-ui/react\"\n\nexport interface IProps extends FlexProps {\n  children?: React.ReactNode\n  className?: string\n  isSecondary?: boolean\n  color?: string\n}\n\nconst Pill: React.FC<IProps> = ({\n  children,\n  className,\n  isSecondary,\n  background,\n  ...rest\n}) => {\n  return isSecondary ? (\n    <Flex\n      border=\"1px\"\n      borderStyle=\"solid\"\n      borderColor=\"primary100\"\n      color=\"text\"\n      textTransform=\"uppercase\"\n      textAlign=\"center\"\n      display=\"inline-block\"\n      py={1}\n      px={2}\n      borderRadius=\"base\"\n      fontSize=\"xs\"\n      className={className}\n      {...rest}\n    >\n      {children}\n    </Flex>\n  ) : (\n    <Flex\n      background={background ?? \"primary100\"}\n      display=\"inline-block\"\n      color=\"black300\"\n      textTransform=\"uppercase\"\n      textAlign=\"center\"\n      py={1}\n      px={2}\n      mr={2}\n      fontSize=\"xs\"\n      borderRadius=\"base\"\n      className={className}\n      {...rest}\n    >\n      {children}\n    </Flex>\n  )\n}\n\nexport default Pill\n","import { TranslationKey } from \"../../utils/translations\"\n\nexport type CategoryNameType = \"dapps\" | \"buy\" | \"earn\" | \"generate\"\n\ntype AccordionButtonContentType = {\n  emoji: string\n  title: TranslationKey\n  pill?: {\n    color: string\n    name: TranslationKey\n  }\n  textPreview: TranslationKey\n}\n\nexport const accordionButtonContent: {\n  [key in CategoryNameType]: AccordionButtonContentType\n} = {\n  dapps: {\n    emoji: \":twisted_rightwards_arrows:\",\n    title: \"page-stablecoins-accordion-swap-title\",\n    pill: {\n      color: \"success100\",\n      name: \"page-stablecoins-accordion-swap-pill\",\n    },\n    textPreview: \"page-stablecoins-accordion-swap-text-preview\",\n  },\n  buy: {\n    emoji: \":shopping_bags:\",\n    title: \"page-stablecoins-accordion-buy-title\",\n    textPreview: \"page-stablecoins-accordion-buy-text-preview\",\n  },\n  earn: {\n    emoji: \":money_bag:\",\n    title: \"page-stablecoins-accordion-earn-title\",\n    textPreview: \"page-stablecoins-accordion-earn-text-preview\",\n  },\n  generate: {\n    emoji: \":handshake:\",\n    title: \"page-stablecoins-accordion-borrow-title\",\n    pill: {\n      color: \"warning\",\n      name: \"page-stablecoins-accordion-borrow-pill\",\n    },\n    textPreview: \"page-stablecoins-accordion-borrow-text-preview\",\n  },\n}\n","import React, { ReactNode } from \"react\"\nimport {\n  AccordionButton,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  BoxProps,\n  Flex,\n  Heading,\n  Text,\n} from \"@chakra-ui/react\"\nimport Emoji from \"../Emoji\"\nimport Pill from \"../Pill\"\nimport Translation from \"../Translation\"\nimport { ChildOnlyType } from \".\"\nimport { accordionButtonContent, CategoryNameType } from \"./utils\"\n\nexport const LeftColumnPanel = (props: ChildOnlyType & Partial<BoxProps>) => (\n  <Box flex=\"0 0 50%\" maxW={{ lg: \"75%\" }} mr={{ lg: 16 }} {...props} />\n)\n\nexport const RightColumnPanel = (props: ChildOnlyType) => (\n  <LeftColumnPanel mr={0} flex=\"0 1 50%\" mt={{ base: 12, lg: 0 }} {...props} />\n)\n\nconst MoreOrLessLink = ({ isOpen }: { isOpen: boolean }) => {\n  return (\n    <Box mr={6} color=\"primary\">\n      {isOpen ? (\n        <Translation id=\"page-stablecoins-accordion-less\" />\n      ) : (\n        <Translation id=\"page-stablecoins-accordion-more\" />\n      )}\n    </Box>\n  )\n}\n\ninterface AccordionCustomItemProps {\n  /**\n   * The category name of each accordion section\n   */\n  category: CategoryNameType\n  children: ReactNode\n}\n\nexport const AccordionCustomItem = (props: AccordionCustomItemProps) => {\n  const { category, children } = props\n\n  const contentObj = accordionButtonContent[category]\n\n  return (\n    <AccordionItem border=\"1px\" borderColor=\"border !important\">\n      {({ isExpanded }) => (\n        <>\n          <AccordionButton\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            p={0}\n            _hover={{ background: \"ednBackground\" }}\n          >\n            <Flex\n              alignItems={{ base: \"flex-start\", lg: \"center\" }}\n              flexDirection={{ base: \"column\", md: \"row\" }}\n              m={6}\n              me={4}\n              {...props}\n            >\n              <Emoji\n                text={contentObj.emoji}\n                me={6}\n                mb={{ base: 2, md: 0 }}\n                fontSize={{ base: \"3rem\", md: \"4rem\" }}\n              />\n              <Box>\n                <Flex alignItems=\"center\" mb={2}>\n                  <Heading\n                    as=\"h3\"\n                    fontSize={{ base: \"1.25rem\", md: \"1.5rem\" }}\n                    lineHeight={1.4}\n                    my={0}\n                  >\n                    <Translation id={contentObj.title} />\n                  </Heading>\n                  {!!contentObj.pill && (\n                    <Pill ml={4} background={contentObj.pill.color}>\n                      <Translation id={contentObj.pill.name} />\n                    </Pill>\n                  )}\n                </Flex>\n                <Text color=\"text200\" mb={0} textAlign=\"start\">\n                  <Translation id={contentObj.textPreview} />\n                </Text>\n              </Box>\n            </Flex>\n            <MoreOrLessLink isOpen={isExpanded} />\n          </AccordionButton>\n          <AccordionPanel\n            background=\"ednBackground\"\n            border=\"1px\"\n            borderColor=\"border\"\n            mb=\"-1px\"\n            mx=\"-1px\"\n            p={0}\n          >\n            <Flex\n              p={8}\n              justifyContent=\"space-between\"\n              flexDirection={{ base: \"column\", lg: \"row\" }}\n            >\n              {children}\n            </Flex>\n          </AccordionPanel>\n        </>\n      )}\n    </AccordionItem>\n  )\n}\n","import { useStaticQuery, graphql } from \"gatsby\"\nimport { getImage } from \"gatsby-plugin-image\"\nimport { useIntl } from \"react-intl\"\nimport { CardListItem } from \"../CardList\"\nimport { translateMessageId } from \"../../utils/translations\"\n\nexport const useStablecoinAccordion = () => {\n  const intl = useIntl()\n  const data = useStaticQuery(graphql`\n    {\n      uniswap: file(relativePath: { eq: \"dapps/uni.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      compound: file(relativePath: { eq: \"dapps/compound.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      aave: file(relativePath: { eq: \"dapps/aave.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      oasis: file(relativePath: { eq: \"dapps/stabledai.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      gitcoin: file(relativePath: { eq: \"dapps/gitcoin.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      maker: file(relativePath: { eq: \"stablecoins/maker.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      eth: file(relativePath: { eq: \"favicon.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      oneinch: file(relativePath: { eq: \"exchanges/1inch.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      loopring: file(relativePath: { eq: \"dapps/loopring.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      matcha: file(relativePath: { eq: \"dapps/matcha.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      coinbase: file(relativePath: { eq: \"exchanges/coinbase.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      kraken: file(relativePath: { eq: \"exchanges/kraken.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      coinmama: file(relativePath: { eq: \"exchanges/coinmama.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      gemini: file(relativePath: { eq: \"exchanges/gemini.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      binance: file(relativePath: { eq: \"exchanges/binance.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      bittrex: file(relativePath: { eq: \"exchanges/bittrex.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n    }\n  `)\n\n  const dapps: Array<CardListItem> = [\n    {\n      title: \"Uniswap\",\n      image: getImage(data.uniswap)!,\n      link: \"https://uniswap.org\",\n      alt: translateMessageId(\"uniswap-logo\", intl),\n    },\n    {\n      title: \"Loopring\",\n      image: getImage(data.loopring)!,\n      link: \"https://loopring.org\",\n      alt: translateMessageId(\"loopring-logo\", intl),\n    },\n    {\n      title: \"1inch\",\n      image: getImage(data.oneinch)!,\n      link: \"https://app.1inch.io\",\n      alt: translateMessageId(\"1inch-logo\", intl),\n    },\n    {\n      title: \"Matcha\",\n      image: getImage(data.matcha)!,\n      link: \"https://matcha.xyz\",\n      alt: translateMessageId(\"matcha-logo\", intl),\n    },\n  ]\n\n  const borrow: Array<CardListItem> = [\n    {\n      title: \"Compound\",\n      image: getImage(data.compound)!,\n      link: \"https://compound.finance\",\n      alt: translateMessageId(\"compound-logo\", intl),\n    },\n    {\n      title: \"Aave\",\n      image: getImage(data.aave)!,\n      link: \"https://aave.com\",\n      alt: translateMessageId(\"aave-logo\", intl),\n    },\n    {\n      title: \"Oasis\",\n      image: getImage(data.oasis)!,\n      link: \"https://oasis.app\",\n      alt: translateMessageId(\"oasis-logo\", intl),\n    },\n  ]\n\n  const earn: Array<CardListItem> = [\n    {\n      title: translateMessageId(\n        \"page-stablecoins-accordion-earn-project-bounties\",\n        intl\n      ),\n      image: getImage(data.gitcoin)!,\n      link: \"https://gitcoin.co/explorer\",\n      description: translateMessageId(\n        \"page-stablecoins-accordion-earn-project-1-description\",\n        intl\n      ),\n      alt: translateMessageId(\"gitcoin-logo\", intl),\n    },\n    {\n      title: translateMessageId(\n        \"page-stablecoins-accordion-earn-project-community\",\n        intl\n      ),\n      image: getImage(data.maker)!,\n      link: \"https://makerdao.world/en/resources/\",\n      description: translateMessageId(\n        \"page-stablecoins-accordion-earn-project-2-description\",\n        intl\n      ),\n      alt: translateMessageId(\"makerdao-logo\", intl),\n    },\n    {\n      title: translateMessageId(\n        \"page-stablecoins-accordion-earn-project-bug-bounties\",\n        intl\n      ),\n      image: getImage(data.eth)!,\n      link: \"/bug-bounty/\",\n      description: translateMessageId(\n        \"page-stablecoins-accordion-earn-project-3-description\",\n        intl\n      ),\n      alt: translateMessageId(\"ethereum-logo\", intl),\n    },\n  ]\n\n  const exchanges: Array<CardListItem> = [\n    {\n      title: \"Coinbase\",\n      image: getImage(data.coinbase)!,\n      link: \"https://coinbase.com\",\n      alt: translateMessageId(\"coinbase-logo\", intl),\n    },\n    {\n      title: \"Gemini\",\n      image: getImage(data.gemini)!,\n      link: \"https://gemini.com\",\n      alt: translateMessageId(\"gemini-logo\", intl),\n    },\n    {\n      title: \"Kraken\",\n      image: getImage(data.kraken)!,\n      link: \"https://kraken.com\",\n      alt: translateMessageId(\"kraken-logo\", intl),\n    },\n    {\n      title: \"Coinmama\",\n      image: getImage(data.coinmama)!,\n      link: \"https://coinmama.com\",\n      alt: translateMessageId(\"coinmama-logo\", intl),\n    },\n    {\n      title: \"Bittrex\",\n      image: getImage(data.bittrex)!,\n      link: \"https://global.bittrex.com\",\n      alt: translateMessageId(\"bittrex-logo\", intl),\n    },\n    {\n      title: \"Binance\",\n      image: getImage(data.binance)!,\n      link: \"https://binance.com\",\n      alt: translateMessageId(\"binance-logo\", intl),\n    },\n  ]\n\n  return {\n    cardListGroups: {\n      dapps,\n      borrow,\n      earn,\n      exchanges,\n    },\n  }\n}\n","import React, { ReactNode } from \"react\"\nimport {\n  Accordion,\n  Box,\n  Flex,\n  Heading,\n  Icon,\n  LinkBox,\n  LinkOverlay,\n  Text,\n} from \"@chakra-ui/react\"\nimport { MdArrowForward } from \"react-icons/md\"\nimport ButtonLink from \"../ButtonLink\"\nimport CardList from \"../CardList\"\nimport InfoBanner from \"../InfoBanner\"\nimport Link from \"../Link\"\nimport Translation from \"../Translation\"\nimport {\n  AccordionCustomItem,\n  LeftColumnPanel,\n  RightColumnPanel,\n} from \"./AccordionCustomItem\"\nimport { useStablecoinAccordion } from \"./useStablecoinAccordion\"\nimport { TranslationKey } from \"../../utils/translations\"\n\nexport type ChildOnlyType = {\n  children: ReactNode\n}\n\nconst SectionTitle = (props: ChildOnlyType) => (\n  <Heading\n    as=\"h4\"\n    fontSize=\"1.25rem\"\n    fontWeight={700}\n    lineHeight=\"22px\"\n    textAlign=\"left\"\n    mt={0}\n    {...props}\n  />\n)\n\nconst StepBoxContainer = (props: ChildOnlyType) => (\n  <Box mt={4} mb={8} {...props} />\n)\n\nconst StepBox = (\n  props: { to: string } & Record<\"titleId\" | \"descId\", TranslationKey>\n) => (\n  <Flex\n    as={LinkBox}\n    alignItems={{ base: \"flex-start\", md: \"normal\" }}\n    background=\"background\"\n    border=\"1px\"\n    borderColor=\"border\"\n    color=\"text\"\n    flexDirection={{ base: \"column\", md: \"row\" }}\n    p={4}\n    sx={{\n      \"&:not(:first-of-type)\": {\n        mt: \"-1px\",\n      },\n    }}\n    _hover={{\n      background: \"ednBackground\",\n      transition: \"transform 0.2s\",\n      transform: \"scale(1.05)\",\n    }}\n  >\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\n      <Box>\n        <LinkOverlay\n          as={Link}\n          color=\"inherit\"\n          textDecoration=\"inherit\"\n          to={props.to}\n          fontWeight={700}\n          textAlign=\"left\"\n          _hover={{\n            textDecoration: \"inherit\",\n          }}\n        >\n          <Translation id={props.titleId} />\n        </LinkOverlay>\n        <Text mb={0}>\n          <Translation id={props.descId} />\n        </Text>\n      </Box>\n      <Icon as={MdArrowForward} ml={4} minW={6} />\n    </Flex>\n  </Flex>\n)\n\nconst H4 = (props: ChildOnlyType) => (\n  <Heading fontSize=\"1.25rem\" fontWeight={700} mt={0} mb={4} {...props} />\n)\n\nexport interface IProps {}\n\nconst StablecoinAccordion: React.FC<IProps> = () => {\n  const { cardListGroups } = useStablecoinAccordion()\n\n  return (\n    <Accordion\n      borderRadius=\"base\"\n      mt={12}\n      width=\"full\"\n      allowToggle\n      reduceMotion\n    >\n      <AccordionCustomItem category=\"dapps\">\n        <LeftColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-requirements\" />\n          </SectionTitle>\n          <StepBoxContainer>\n            <StepBox\n              to=\"/wallets/\"\n              titleId=\"page-stablecoins-accordion-swap-requirement-1\"\n              descId=\"page-stablecoins-accordion-swap-requirement-1-description\"\n            />\n            <StepBox\n              to=\"/get-eth/\"\n              titleId=\"page-stablecoins-accordion-swap-requirement-2\"\n              descId=\"page-stablecoins-accordion-swap-requirement-2-description\"\n            />\n          </StepBoxContainer>\n          <InfoBanner emoji=\":light_bulb:\">\n            <H4>\n              <Translation id=\"page-stablecoins-accordion-swap-editors-tip\" />\n            </H4>\n            <Text>\n              <Translation id=\"page-stablecoins-accordion-swap-editors-tip-copy\" />\n            </Text>\n            <ButtonLink to=\"/wallets/find-wallet/?filters=has_card_deposits,has_dex_integrations\">\n              <Translation id=\"page-stablecoins-accordion-swap-editors-tip-button\" />\n            </ButtonLink>\n          </InfoBanner>\n        </LeftColumnPanel>\n        <RightColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-swap-dapp-title\" />\n          </SectionTitle>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-swap-dapp-intro\" />{\" \"}\n            <Link to=\"/get-eth/#dex\">\n              <Translation id=\"page-stablecoins-accordion-swap-dapp-link\" />\n            </Link>\n          </p>\n          <CardList content={cardListGroups.dapps} />\n        </RightColumnPanel>\n      </AccordionCustomItem>\n      <AccordionCustomItem category=\"buy\">\n        <LeftColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-requirements\" />\n          </SectionTitle>\n          <Text>\n            <Translation id=\"page-stablecoins-accordion-buy-requirements-description\" />\n          </Text>\n          <StepBoxContainer>\n            <StepBox\n              to=\"/get-eth/\"\n              titleId=\"page-stablecoins-accordion-buy-requirement-1\"\n              descId=\"page-stablecoins-accordion-buy-requirement-1-description\"\n            />\n          </StepBoxContainer>\n          <InfoBanner isWarning={true}>\n            <Translation id=\"page-stablecoins-accordion-buy-warning\" />\n          </InfoBanner>\n        </LeftColumnPanel>\n        <RightColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-buy-exchanges-title\" />\n          </SectionTitle>\n          <CardList content={cardListGroups.exchanges} />\n        </RightColumnPanel>\n      </AccordionCustomItem>\n      <AccordionCustomItem category=\"earn\">\n        <LeftColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-requirements\" />\n          </SectionTitle>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-earn-requirements-description\" />\n          </p>\n          <StepBoxContainer>\n            <StepBox\n              to=\"/wallets/\"\n              titleId=\"page-stablecoins-accordion-earn-requirement-1\"\n              descId=\"page-stablecoins-accordion-earn-requirement-1-description\"\n            />\n          </StepBoxContainer>\n        </LeftColumnPanel>\n        <RightColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-earn-projects-title\" />\n          </SectionTitle>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-earn-projects-copy\" />\n          </p>\n          <CardList content={cardListGroups.earn} />\n        </RightColumnPanel>\n      </AccordionCustomItem>\n      <AccordionCustomItem category=\"generate\">\n        <LeftColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-requirements\" />\n          </SectionTitle>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-borrow-requirements-description\" />\n          </p>\n          <StepBoxContainer>\n            <StepBox\n              to=\"/wallets/\"\n              titleId=\"page-stablecoins-accordion-borrow-requirement-1\"\n              descId=\"page-stablecoins-accordion-borrow-requirement-1-description\"\n            />\n            <StepBox\n              to=\"/get-eth/\"\n              titleId=\"page-stablecoins-accordion-borrow-requirement-2\"\n              descId=\"page-stablecoins-accordion-borrow-requirement-2-description\"\n            />\n          </StepBoxContainer>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-borrow-crypto-collateral\" />\n          </SectionTitle>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-borrow-crypto-collateral-copy\" />{\" \"}\n            <Link to=\"#how\">\n              <Translation id=\"page-stablecoins-accordion-borrow-crypto-collateral-link\" />\n            </Link>\n          </p>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-borrow-crypto-collateral-copy-p2\" />\n          </p>\n        </LeftColumnPanel>\n        <RightColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-borrow-places-title\" />\n          </SectionTitle>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-borrow-places-intro\" />\n          </p>\n          <Box mb={8}>\n            <CardList content={cardListGroups.borrow} />\n          </Box>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-borrow-risks-title\" />\n          </SectionTitle>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-borrow-risks-copy\" />{\" \"}\n            <Link to=\"/eth/\">\n              <Translation id=\"page-stablecoins-accordion-borrow-risks-link\" />\n            </Link>\n          </p>\n        </RightColumnPanel>\n      </AccordionCustomItem>\n    </Accordion>\n  )\n}\n\nexport default StablecoinAccordion\n","import React, { useState } from \"react\"\nimport { Box, Flex, Heading, useColorModeValue } from \"@chakra-ui/react\"\nimport { useIntl } from \"react-intl\"\nimport Link, { navigate } from \"./Link\"\nimport Emoji from \"./Emoji\"\nimport Translation from \"./Translation\"\nimport { isMobile } from \"../utils/isMobile\"\n\n// Represent string as 32-bit integer\nconst hashCode = (string: string): number => {\n  let hash = 0\n  for (const char of string) {\n    const code = char.charCodeAt(0)\n    hash = (hash << 5) - hash + code\n    hash |= 0\n  }\n  return Math.abs(hash)\n}\n\n// Theme variables from Theme.js\nconst colors = [\n  \"gridYellow\",\n  \"gridBlue\",\n  \"gridGreen\",\n  \"gridOrange\",\n  \"gridPink\",\n  \"gridPurple\",\n]\n\ninterface ILink {\n  url: string\n  text: string\n}\n\ninterface IPropsGridItem {\n  description: string\n  columnNumber: number\n  rowNumber: number\n  emoji: string\n  index: number\n  title: string\n  isOpen: boolean\n  callback: (index: number) => void\n  color: string\n  pros?: Array<string>\n  cons?: Array<string>\n  links: Array<ILink>\n}\n\nconst OpenTitle: React.FC<{ title: string }> = ({ title }) => {\n  return (\n    <Heading\n      as=\"h3\"\n      fontSize={{ base: \"2rem\", sm: \"2.5rem\" }}\n      fontWeight={700}\n      marginTop={0}\n    >\n      {title}\n    </Heading>\n  )\n}\n\nconst Title: React.FC<{ title: string }> = ({ title }) => {\n  return (\n    <Heading\n      as=\"h3\"\n      fontSize={{ base: \"2rem\", sm: \"2.5rem\" }}\n      fontWeight={400}\n      marginTop={0}\n    >\n      {title}\n    </Heading>\n  )\n}\n\nconst Subtitle: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <Heading\n      as=\"h4\"\n      fontSize={{ base: \"2xl\", sm: \"2rem\" }}\n      fontWeight={600}\n      marginTop={0}\n      padding={2}\n      paddingBottom={4}\n      borderBottom=\"1px solid\"\n      borderColor=\"black300\"\n    >\n      {children}\n    </Heading>\n  )\n}\n\nconst Body: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <Box fontSize=\"xl\" lineHeight=\"140%\" color=\"black300\">\n      {children}\n    </Box>\n  )\n}\n\nconst StyledEmoji: React.FC<{ emoji: string }> = ({ emoji }) => {\n  return (\n    <Emoji\n      fontSize=\"8xl\"\n      text={emoji}\n      margin={2}\n      alignSelf=\"center\"\n      order=\"2\"\n      _hover={{\n        transition: \"transform 50s\",\n        transform: \"rotate(10turn)\",\n      }}\n    />\n  )\n}\n\nconst Row: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <Flex\n      justify=\"space-between\"\n      marginTop={8}\n      direction={{ base: \"column\", md: \"row\" }}\n    >\n      {children}\n    </Flex>\n  )\n}\n\nconst Column: React.FC<{ children: any }> = ({ children }) => {\n  return <Box width=\"100%\">{children}</Box>\n}\n\nconst GridItem: React.FC<IPropsGridItem> = ({\n  description,\n  columnNumber,\n  rowNumber,\n  emoji,\n  index,\n  title,\n  isOpen,\n  callback,\n  color,\n  pros,\n  cons,\n  links,\n}) => {\n  const handleClick = (): void => {\n    callback(index)\n  }\n  const shadow = useColorModeValue(\"tableBox.light\", \"tableBox.dark\")\n\n  return (\n    <Flex\n      id={`type-${index}`}\n      onClick={() => handleClick()}\n      gridRowStart={isOpen ? rowNumber : `auto`}\n      gridRowEnd={isOpen ? `span 3` : `auto`}\n      gridColumnStart={isOpen ? columnNumber : `auto`}\n      color={isOpen ? \"black300\" : \"text\"}\n      cursor={isOpen ? `auto` : `pointer`}\n      background={isOpen ? color : \"background\"}\n      direction={{\n        base: \"column\",\n        sm: `${isOpen ? \"column\" : \"row\"}`,\n        lg: \"column\",\n      }}\n      justify={{\n        base: `${isOpen ? \"flex-start\" : \"space-between\"}`,\n        lg: \"flex-start\",\n      }}\n      align={{ base: \"center\", lg: \"flex-start\" }}\n      border=\"1px solid\"\n      borderColor=\"text\"\n      padding={6}\n      _hover={{\n        background: isOpen ? color : \"ednBackground\",\n        transition: isOpen ? \"auto\" : \"transform 0.5s\",\n        transform: isOpen ? \"auto\" : \"skewX(-5deg)\",\n        boxShadow: shadow,\n      }}\n    >\n      {isOpen ? (\n        <Emoji mb={8} text={emoji} fontSize=\"8xl\" />\n      ) : (\n        <>\n          <StyledEmoji emoji={emoji} />\n          <Title title={title} />\n        </>\n      )}\n      <div>\n        {isOpen && (\n          <div>\n            <OpenTitle title={title} />\n            <Body>{description}</Body>\n            <Row>\n              {pros && (\n                <Column>\n                  <Subtitle>\n                    <Translation id=\"pros\" />\n                  </Subtitle>\n\n                  <Body>\n                    <ul>\n                      {pros.map((pro, idx) => (\n                        <li key={idx}>{pro}</li>\n                      ))}\n                    </ul>\n                  </Body>\n                </Column>\n              )}\n              {cons && (\n                <Column>\n                  <Subtitle>\n                    <Translation id=\"cons\" />\n                  </Subtitle>\n                  <Body>\n                    <ul>\n                      {cons.map((con, idx) => (\n                        <li key={idx}>{con}</li>\n                      ))}\n                    </ul>\n                  </Body>\n                </Column>\n              )}\n            </Row>\n            <div>\n              <Subtitle>\n                <Translation id=\"example-projects\" />\n              </Subtitle>\n              <Body>\n                <ul>\n                  {links.map((link, idx) => (\n                    <li key={idx}>\n                      <Link\n                        key={idx}\n                        to={link.url}\n                        color=\"black300\"\n                        _hover={{\n                          color: \"black\",\n                        }}\n                      >\n                        {link.text}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </Body>\n            </div>\n          </div>\n        )}\n      </div>\n    </Flex>\n  )\n}\n\nexport interface IPropsBoxItem {\n  description: string\n  emoji: string\n  title: string\n  pros?: Array<string>\n  cons?: Array<string>\n  links: Array<ILink>\n}\n\nexport interface IProps {\n  items: Array<IPropsBoxItem>\n}\n\nconst StablecoinBoxGrid: React.FC<IProps> = ({ items }) => {\n  const intl = useIntl()\n  const [indexOpen, setOpenIndex] = useState<number>(0)\n\n  // TODO generalize\n  const handleSelect = (idx: number): void => {\n    setOpenIndex(idx)\n    if (isMobile()) {\n      navigate(`/stablecoins/#type-${idx}`, intl)\n    }\n  }\n\n  return (\n    <Box\n      gridTemplateColumns=\"3fr 1fr\"\n      gridTemplateRows=\"3fr 3fr\"\n      borderRadius=\"sm\"\n      my={16}\n      display={{ base: \"flex\", lg: \"grid\" }}\n      flexDirection=\"column\"\n      maxW=\"100%\"\n    >\n      {items.map((item, idx) => {\n        let columnNumber = 1\n        let rowNumber = 1\n        const colorIdx = hashCode(item.emoji) % colors.length\n        const color = colors[colorIdx]\n        return (\n          <GridItem\n            key={idx}\n            title={item.title}\n            emoji={item.emoji}\n            description={item.description}\n            pros={item.pros}\n            cons={item.cons}\n            links={item.links}\n            index={idx}\n            columnNumber={columnNumber}\n            rowNumber={rowNumber}\n            isOpen={idx === indexOpen}\n            callback={handleSelect}\n            color={color}\n          />\n        )\n      })}\n    </Box>\n  )\n}\n\nexport default StablecoinBoxGrid\n","import React, { ReactNode, useState } from \"react\"\nimport { Box, useColorModeValue } from \"@chakra-ui/react\"\nimport * as utils from \"../utils/isMobile\"\n\nexport interface IProps {\n  content: ReactNode\n  children?: React.ReactNode\n}\n\n// TODO add `position` prop\nconst Tooltip: React.FC<IProps> = ({ content, children }) => {\n  const [isVisible, setIsVisible] = useState<boolean>(false)\n  const isMobile = utils.isMobile()\n  const shadow = useColorModeValue(\"tableBox.light\", \"tableBox.dark\")\n\n  return (\n    <>\n      {isVisible && isMobile && (\n        // Invisible full screen div \"below\" the clickable link\n        // Added so clicking away anywhere will hide Tooltip\n        <Box\n          position=\"fixed\"\n          top={0}\n          left={0}\n          w=\"full\"\n          h=\"full\"\n          zIndex={1}\n          onClick={() => setIsVisible(false)}\n        />\n      )}\n      <Box\n        position=\"relative\"\n        display=\"inline-flex\"\n        userSelect=\"none\"\n        cursor=\"pointer\"\n        title=\"More info\"\n        onMouseEnter={!isMobile ? () => setIsVisible(true) : undefined}\n        onMouseLeave={!isMobile ? () => setIsVisible(false) : undefined}\n        onClick={isMobile ? () => setIsVisible(!isVisible) : undefined}\n      >\n        {children}\n        {isVisible && (\n          <Box\n            textAlign=\"center\"\n            whiteSpace=\"normal\"\n            w={{ base: \"140px\", md: \"200px\" }}\n            color=\"text\"\n            bg=\"background\"\n            boxShadow={shadow}\n            position=\"absolute\"\n            zIndex=\"docked\"\n            py={4}\n            px={2}\n            textTransform=\"none\"\n            fontSize=\"sm\"\n            fontWeight=\"medium\"\n            cursor=\"default\"\n            borderRadius=\"base\"\n            bottom=\"125%\"\n            left=\"25%\"\n            transform=\"translateX(-50%)\"\n          >\n            <Box\n              as=\"span\"\n              position=\"absolute\"\n              bottom={-2}\n              left=\"calc(50% - 6px)\"\n              borderRightWidth={10}\n              borderRightStyle=\"solid\"\n              borderRightColor=\"transparent\"\n              borderTopWidth={10}\n              borderTopStyle=\"solid\"\n              borderTopColor=\"background\"\n              borderLeftWidth={10}\n              borderLeftStyle=\"solid\"\n              borderLeftColor=\"transparent\"\n            />\n            {content}\n          </Box>\n        )}\n      </Box>\n    </>\n  )\n}\n\nexport default Tooltip\n","import axios from \"axios\"\n\nconst ONE_HOUR = 1000 * 60 * 60\n\nexport interface CacheStorage<T> {\n  value: T\n  timestamp: number\n}\n\nconst emptyCacheItemStorage: CacheStorage<string> = {\n  value: \"\",\n  timestamp: 0,\n}\n\nconst stringifyEmptyCacheItemStorage = JSON.stringify(emptyCacheItemStorage)\n\n/**\n * Write inside the local storage the value returned by the API call for a given key\n * @param {string} key stored in the local storage\n * @param {T} value for a given key to write in the local storage\n */\nexport const writeToCache = <T>(key: string, value: T): void => {\n  const cacheStorageItem: CacheStorage<T> = {\n    value,\n    timestamp: new Date().getTime(),\n  }\n  localStorage.setItem(key, JSON.stringify(cacheStorageItem))\n}\n\n/**\n * Retrieve the value stored in the local storage for a given key\n * If the value is not defined or the key does not exist, return a default CacheStorage\n * with an empty value and timestamp set to 0\n * @see CacheStorage\n * @param {string} key stored in the local storage\n * @returns {CacheStorage<T>} element stored in browser local storage\n */\nconst readFromCache = <T>(key: string): CacheStorage<T> => {\n  return JSON.parse(\n    localStorage.getItem(key) || stringifyEmptyCacheItemStorage\n  ) as CacheStorage<T>\n}\n\n/**\n * API call to get the response data and store in the local storage if needed\n * @param {string} url API url\n * @param {boolean} cacheResponse should we store the value to the local storage\n * @returns {T} data response from the API\n */\nexport const getFreshData = async <T>(\n  url: string,\n  cacheResponse: boolean = false\n): Promise<T> => {\n  const { data } = await axios.get(url)\n  cacheResponse && writeToCache(url, data)\n  return data\n}\n\nconst getCachedData = <T>(url: string): CacheStorage<T> => readFromCache(url)\n\n/**\n * Get the data response from the local storage or the API\n * @param {string} url of the API\n * @returns {T} data from the API or the local storage\n */\nexport const getData = async <T>(url: string): Promise<T> => {\n  const cachedData: CacheStorage<T> = getCachedData(url)\n  const now = new Date().getTime()\n  if (\n    cachedData &&\n    cachedData.timestamp > 0 &&\n    now - cachedData.timestamp < ONE_HOUR\n  ) {\n    return cachedData.value\n  } else {\n    return getFreshData(url, true)\n  }\n}\n"],"names":["omit","object","keysToOmit","clone","Object","assign","key","useImage","props","loading","src","srcSet","onLoad","onError","crossOrigin","sizes","ignoreFallback","status","setStatus","useState","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","NativeImage","ref","htmlWidth","htmlHeight","alt","rest","width","height","displayName","Image2","fallbackSrc","fallback","align","fit","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","as","className","Img","cx","classNames","filter","Boolean","join","TableStylesProvider","useTableStyles","name","errorMessage","Table","styles","tableProps","value","role","__css","table","overflow","overflowX","display","whiteSpace","WebkitOverflowScrolling","overflowY","maxWidth","placement","caption","captionSide","Thead","thead","Tbody","tbody","Th","tfoot","isNumeric","th","Tr","tr","Td","td","CardContainer","___EmotionJSX","HStack","spacing","p","color","border","borderColor","_hover","borderRadius","boxShadow","background","Card","title","description","link","image","isLink","isExternal","url","descriptionColor","useColorModeValue","Box","GatsbyImage","minW","Flex","flex","direction","LinkOverlay","Link","href","hideArrow","textDecoration","fontSize","mb","wrap","mr","opacity","_ref","content","clickHandler","bg","map","listItem","idx","id","LinkBox","onClick","data","flexDirection","transition","transform","alignItems","justifyContent","minH","alignSelf","base","sm","maxHeight","textAlign","Heading","size","fontWeight","lineHeight","my","mx","Text","borderTop","logo","coin","apy","justify","textTransform","borderLeft","borderRight","minWidth","marginRight","children","position","mt","zIndex","backgroundColor","bottom","left","padding","emoji","emojiSize","Emoji","text","flexGrow","flexShrink","flexBasis","ml","isWarning","shouldCenter","shouldSpaceBetween","banner","maxW","w","isReverse","buttons","header","subtitle","py","px","lg","pl","Wrap","button","undefined","to","isButtonLink","WrapItem","ButtonLink","variant","toId","Button","imgStyle","category","shadow","borderBottom","paddingBottom","marginBottom","marginTop","marginLeft","flexDir","paddingY","paddingX","Translation","columns","hasError","textColor","useToken","column","letterSpacing","_content$","colSpan","length","marketCap","type","cursor","_focus","boxSize","isSecondary","borderStyle","accordionButtonContent","dapps","pill","textPreview","buy","earn","generate","LeftColumnPanel","RightColumnPanel","MoreOrLessLink","isOpen","AccordionCustomItem","contentObj","AccordionItem","_ref2","isExpanded","AccordionButton","md","m","me","Pill","AccordionPanel","SectionTitle","StepBoxContainer","StepBox","sx","titleId","descId","Icon","MdArrowForward","H4","cardListGroups","intl","useIntl","useStaticQuery","getImage","uniswap","translateMessageId","loopring","oneinch","matcha","borrow","compound","aave","oasis","gitcoin","maker","eth","exchanges","coinbase","gemini","kraken","coinmama","bittrex","binance","useStablecoinAccordion","Accordion","allowToggle","reduceMotion","InfoBanner","CardList","colors","OpenTitle","Title","Subtitle","_ref3","Body","_ref4","StyledEmoji","_ref5","margin","order","Row","_ref6","Column","_ref7","GridItem","_ref8","columnNumber","rowNumber","index","callback","pros","cons","links","gridRowStart","gridRowEnd","gridColumnStart","pro","con","_ref9","items","indexOpen","setOpenIndex","handleSelect","isMobile","navigate","gridTemplateColumns","gridTemplateRows","item","colorIdx","string","hash","char","charCodeAt","Math","abs","hashCode","isVisible","setIsVisible","utils","top","h","userSelect","onMouseEnter","onMouseLeave","borderRightWidth","borderRightStyle","borderRightColor","borderTopWidth","borderTopStyle","borderTopColor","borderLeftWidth","borderLeftStyle","borderLeftColor","stringifyEmptyCacheItemStorage","JSON","stringify","timestamp","getFreshData","async","cacheResponse","axios","cacheStorageItem","Date","getTime","localStorage","setItem","writeToCache","getCachedData","readFromCache","parse","getItem","getData","cachedData","now"],"sourceRoot":""}