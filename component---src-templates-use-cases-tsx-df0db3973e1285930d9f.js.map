{"version":3,"file":"component---src-templates-use-cases-tsx-df0db3973e1285930d9f.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/BannerNotification/index.tsx","webpack://ethereum-org-website/./src/components/DocLink.tsx","webpack://ethereum-org-website/./src/components/UpgradeStatus.tsx","webpack://ethereum-org-website/./src/components/UpgradeTableOfContents.tsx","webpack://ethereum-org-website/./src/utils/getSummaryPoints.ts"],"sourcesContent":["import React from \"react\"\nimport { Center, FlexProps, useMediaQuery } from \"@chakra-ui/react\"\nimport { lightTheme as oldTheme } from \"../../theme\"\n\nexport interface IProps extends FlexProps {\n  shouldShow?: boolean\n}\n\nconst BannerNotification: React.FC<IProps> = ({\n  children,\n  shouldShow = false,\n  ...props\n}) => {\n  const [isLGScreen] = useMediaQuery(`min-width: ${oldTheme.breakpoints.l}`)\n  return (\n    <>\n      {shouldShow && (\n        <Center\n          maxW={isLGScreen ? oldTheme.variables.maxPageWidth : \"100%\"}\n          w=\"100%\"\n          py=\"4\"\n          px=\"8\"\n          bg=\"primary\"\n          color=\"background\"\n          sx={{\n            a: {\n              color: \"background\",\n            },\n          }}\n          {...props}\n        >\n          {children}\n        </Center>\n      )}\n    </>\n  )\n}\n\nexport default BannerNotification\n","import React from \"react\"\nimport {\n  Icon,\n  Box,\n  Text,\n  Flex,\n  LinkBox,\n  LinkOverlay,\n  useToken,\n} from \"@chakra-ui/react\"\nimport { AiOutlineArrowRight } from \"react-icons/ai\"\nimport Emoji from \"./Emoji\"\nimport Link from \"./Link\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  to: string\n  isExternal?: boolean\n}\n\nconst DocLink: React.FC<IProps> = ({ to, children, isExternal = false }) => {\n  const linkBoxShadowColor = useToken(\"colors\", \"primary\")\n\n  return (\n    <LinkBox\n      padding={4}\n      borderRadius=\"sm\"\n      color=\"text\"\n      border=\"1px\"\n      borderStyle=\"solid\"\n      borderColor=\"border\"\n      _hover={{\n        background: \"tableBackgroundHover\",\n        borderRadius: \"base\",\n        boxShadow: `0 0 1px ${linkBoxShadowColor}`,\n      }}\n    >\n      <Flex\n        zIndex={1}\n        display=\"flex\"\n        flexDirection=\"row\"\n        flex={1}\n        justifyContent=\"space-between\"\n      >\n        <Flex align=\"center\">\n          <Emoji fontSize=\"md\" mr={4} text=\":page_with_curl:\" />\n        </Flex>\n        <Box flex={1} flexDirection=\"column\">\n          <LinkOverlay\n            href={to}\n            as={Link}\n            isExternal={isExternal}\n            textDecoration=\"none\"\n            _hover={{ textDecoration: \"none\" }}\n            hideArrow\n          >\n            <Text color=\"text300\" fontWeight=\"semibold\" margin={0}>\n              {children}\n            </Text>\n          </LinkOverlay>\n        </Box>\n        <Icon\n          as={AiOutlineArrowRight}\n          alignSelf=\"center\"\n          minWidth={8}\n          boxSize={6}\n          marginX={6}\n          _groupHover={{\n            fill: \"primary\",\n            transition: \"transform 0.1s\",\n            transform: \"scale(1.2)\",\n            rotate: isExternal ? \"-45deg\" : \"0\",\n          }}\n        />\n      </Flex>\n    </LinkBox>\n  )\n}\n\nexport default DocLink\n","import React from \"react\"\nimport { TranslationKey } from \"../utils/translations\"\nimport Translation from \"./Translation\"\nimport { Heading, Text, useColorModeValue, VStack } from \"@chakra-ui/react\"\n\nexport interface IStyledContainer {\n  isShipped: boolean\n}\n\nexport interface IProps {\n  children?: React.ReactNode\n  dateKey: TranslationKey\n  isShipped?: boolean\n}\n\nconst UpgradeStatus: React.FC<IProps> = ({\n  dateKey,\n  children,\n  isShipped = false,\n}) => {\n  const border = useColorModeValue(\"none\", \"2px solid\")\n  const darkBorderColor = isShipped ? \"#3fb181\" : \"#a4a4ff\"\n\n  const borderColor = useColorModeValue(undefined, darkBorderColor)\n\n  return (\n    <VStack\n      alignItems=\"start\"\n      bg={\n        isShipped ? \"upgradeStatusShippedBackground\" : \"upgradeStatusBackground\"\n      }\n      border={border}\n      borderColor={borderColor}\n      borderRadius=\"base\"\n      boxShadow={`0px 4px 7px rgba(0, 0, 0, 0.05), 0px 10px 17px rgba(0, 0, 0, 0.03),\n       0px 14px 66px rgba(0, 0, 0, 0.07)`}\n      mb={8}\n      mt={{ base: 8, lg: 0 }}\n      p={6}\n      spacing={6}\n      width=\"100%\"\n    >\n      <Heading\n        fontSize=\"sm\"\n        fontWeight=\"normal\"\n        my={0}\n        textTransform=\"uppercase\"\n      >\n        <Translation id=\"consensus-when-shipping\" />\n      </Heading>\n      <Text fontSize=\"2.5rem\" fontWeight=\"bold\" lineHeight=\"100%\">\n        <Translation id={dateKey} />\n      </Text>\n      <Text fontSize=\"xl\">{children}</Text>\n    </VStack>\n  )\n}\n\nexport default UpgradeStatus\n","import React from \"react\"\nimport { Box, ListItem, UnorderedList } from \"@chakra-ui/react\"\nimport Link from \"../components/Link\"\n\nimport type { Item as ItemTableOfContents } from \"./TableOfContents\"\n\nconst customIdRegEx = /^.+(\\s*\\{#([A-Za-z0-9\\-_]+?)\\}\\s*)$/\n\nconst slugify = (s: string): string =>\n  encodeURIComponent(String(s).trim().toLowerCase().replace(/\\s+/g, \"-\"))\n\nconst getCustomId = (title: string): string => {\n  const match = customIdRegEx.exec(title)\n  if (match) {\n    return match[2].toLowerCase()\n  }\n  console.warn(\"Missing custom ID on header: \", title)\n  return slugify(title)\n}\n\nconst trimmedTitle = (title: string): string => {\n  const match = customIdRegEx.exec(title)\n  return match ? title.replace(match[1], \"\").trim() : title\n}\n\nexport interface Item extends ItemTableOfContents {}\n\ninterface IPropsTableOfContentsLink {\n  depth: number\n  item: Item\n}\n\nconst TableOfContentsLink: React.FC<IPropsTableOfContentsLink> = ({\n  depth,\n  item,\n}: {\n  depth: number\n  item: Item\n}) => {\n  const url = `#${getCustomId(item.title)}`\n  let isActive = false\n  if (typeof window !== `undefined`) {\n    isActive = window.location.hash === url\n  }\n  const isNested: boolean = depth === 2\n  let classes = \"\"\n  if (isActive) {\n    classes += \" active\"\n  }\n  if (isNested) {\n    classes += \" nested\"\n  }\n  return (\n    <Link\n      href={url}\n      className={classes}\n      position=\"relative\"\n      display=\"inline-block\"\n      mb={2}\n      color=\"text300\"\n    >\n      {trimmedTitle(item.title)}\n    </Link>\n  )\n}\n\ninterface IPropsItemsList {\n  items: Array<Item>\n  depth: number\n  maxDepth: number\n}\n\nconst ItemsList: React.FC<IPropsItemsList> = ({\n  items,\n  depth,\n  maxDepth,\n}: {\n  items: Array<Item>\n  depth: number\n  maxDepth: number\n}) => {\n  if (depth > maxDepth || !items) {\n    return null\n  }\n\n  return (\n    <>\n      {items.map((item, index) => (\n        <ListItem margin={0} key={index}>\n          <TableOfContentsLink depth={depth} item={item} />\n        </ListItem>\n      ))}\n    </>\n  )\n}\n\nexport interface IProps {\n  items: Array<Item>\n  maxDepth?: number\n}\n\nconst UpgradeTableOfContents: React.FC<IProps> = ({ items, maxDepth = 1 }) => {\n  if (!items) {\n    return null\n  }\n  // Exclude <h1> from TOC\n  if (items.length === 1) {\n    items = [items[0]]\n  }\n\n  return (\n    <Box\n      as=\"aside\"\n      p={0}\n      mb={8}\n      textAlign=\"end\"\n      overflowY=\"auto\"\n      display={{ base: \"none\", l: \"block\" }}\n    >\n      <UnorderedList\n        m={0}\n        py={0}\n        ps={4}\n        pe={1}\n        fontSize=\"xl\"\n        fontWeight=\"normal\"\n        lineHeight=\"1.6\"\n        styleType=\"none\"\n      >\n        <ItemsList items={items} depth={0} maxDepth={maxDepth} />\n      </UnorderedList>\n    </Box>\n  )\n}\n\nexport default UpgradeTableOfContents\n","export const getSummaryPoints = (\n  frontmatter: Partial<\n    Pick<\n      Queries.Frontmatter,\n      \"summaryPoint1\" | \"summaryPoint2\" | \"summaryPoint3\" | \"summaryPoint4\"\n    >\n  >,\n  count = 4\n): Array<string> => {\n  // Place summary points into an array, guarding for `undefined` values\n  let summaryPoints: Array<string> = []\n  for (let i = 1; i <= count; i++) {\n    // @ts-ignore\n    const summaryPoint = frontmatter[`summaryPoint${i}`] as string\n    if (summaryPoint) {\n      summaryPoints.push(summaryPoint)\n    }\n  }\n  return summaryPoints\n}\n"],"names":["_ref","children","shouldShow","props","isLGScreen","useMediaQuery","oldTheme","___EmotionJSX","Center","maxW","w","py","px","bg","color","sx","a","to","isExternal","linkBoxShadowColor","useToken","LinkBox","padding","borderRadius","border","borderStyle","borderColor","_hover","background","boxShadow","Flex","zIndex","display","flexDirection","flex","justifyContent","align","Emoji","fontSize","mr","text","Box","LinkOverlay","href","as","Link","textDecoration","hideArrow","Text","fontWeight","margin","Icon","AiOutlineArrowRight","alignSelf","minWidth","boxSize","marginX","_groupHover","fill","transition","transform","rotate","dateKey","isShipped","useColorModeValue","darkBorderColor","undefined","VStack","alignItems","mb","mt","base","lg","p","spacing","width","Heading","my","textTransform","Translation","id","lineHeight","customIdRegEx","getCustomId","title","match","exec","toLowerCase","console","warn","encodeURIComponent","String","trim","replace","TableOfContentsLink","depth","item","url","isActive","window","location","hash","classes","className","position","trimmedTitle","ItemsList","_ref2","items","maxDepth","map","index","ListItem","key","_ref3","length","textAlign","overflowY","l","UnorderedList","m","ps","pe","styleType","getSummaryPoints","frontmatter","count","summaryPoints","i","summaryPoint","push"],"sourceRoot":""}