{"version":3,"file":"component---src-pages-upgrades-get-involved-index-tsx-e66537084d90c9dbddc8.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/GitStars.tsx","webpack://ethereum-org-website/./src/components/ProductCard.tsx","webpack://ethereum-org-website/./node_modules/lodash/_arrayMap.js","webpack://ethereum-org-website/./node_modules/lodash/_arrayShuffle.js","webpack://ethereum-org-website/./node_modules/lodash/_baseRandom.js","webpack://ethereum-org-website/./node_modules/lodash/_baseShuffle.js","webpack://ethereum-org-website/./node_modules/lodash/_baseValues.js","webpack://ethereum-org-website/./node_modules/lodash/_shuffleSelf.js","webpack://ethereum-org-website/./node_modules/lodash/shuffle.js","webpack://ethereum-org-website/./node_modules/lodash/values.js"],"sourcesContent":["import React from \"react\"\nimport { Icon, Text, Center, Flex } from \"@chakra-ui/react\"\nimport { FaGithub } from \"react-icons/fa\"\nimport Emoji from \"./Emoji\"\nimport Link from \"./Link\"\n\nexport interface GitHubRepo {\n  stargazerCount: number\n  url: string\n}\n\nexport interface IProps {\n  gitHubRepo: GitHubRepo\n  className?: string\n  hideStars: boolean\n}\n\nconst GitStars: React.FC<IProps> = ({ gitHubRepo, className, hideStars }) => {\n  // Stringify with commas\n  let starsString = gitHubRepo.stargazerCount.toString()\n  const rgx = /(\\d+)(\\d{3})/\n  while (rgx.test(starsString)) {\n    starsString = starsString.replace(rgx, \"$1,$2\")\n  }\n\n  return (\n    <Link className={className} to={gitHubRepo.url} hideArrow={true}>\n      <Flex\n        background=\"lightBorder\"\n        textDecoration=\"none\"\n        border=\"1px solid\"\n        borderColor=\"lightBorder\"\n        borderRadius=\"base\"\n        float=\"right\"\n        color=\"text\"\n        _hover={{\n          boxShadow: \"0 0 1px var(--eth-colors-primary)\",\n          path: { fill: \"primary\" },\n        }}\n      >\n        {hideStars ? (\n          <Icon as={FaGithub} m={1} />\n        ) : (\n          <>\n            <Center\n              w=\"36px\"\n              justifyContent=\"space-between\"\n              fontSize=\"s\"\n              mx=\"0.325rem\"\n            >\n              <Icon as={FaGithub} />\n              <Emoji text=\":star:\" />\n            </Center>\n            <Text\n              fontSize=\"0.8125rem\"\n              px=\"0.325rem\"\n              my=\"0\"\n              background=\"searchBackgroundEmpty\"\n            >\n              {starsString}\n            </Text>\n          </>\n        )}\n      </Flex>\n    </Link>\n  )\n}\n\nexport default GitStars\n","import React, { ReactNode } from \"react\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport { useQuery, gql } from \"@apollo/client\"\nimport {\n  Badge,\n  Box,\n  Center,\n  Flex,\n  Heading,\n  HStack,\n  Img,\n  Text,\n  TextProps,\n} from \"@chakra-ui/react\"\n\nimport GitStars from \"./GitStars\"\nimport ButtonLink from \"./ButtonLink\"\n\nconst REPO_DATA = gql`\n  query RepoData(\n    $repoOwner: String!\n    $repoName: String!\n    $repoLangCount: Int!\n  ) {\n    repository(owner: $repoOwner, name: $repoName) {\n      stargazerCount\n      languages(\n        orderBy: { field: SIZE, direction: DESC }\n        first: $repoLangCount\n      ) {\n        nodes {\n          name\n        }\n      }\n      url\n    }\n  }\n`\n\nconst SubjectBadge: React.FC<{\n  subject: string\n  children: React.ReactNode\n}> = ({ subject, children }) => {\n  const backgroundProp = () => {\n    switch (subject) {\n      case \"Solidity\":\n        return \"tagYellow\"\n      case \"Vyper\":\n        return \"tagBlue\"\n      case \"web3\":\n        return \"tagTurquoise\"\n      case \"JavaScript\":\n        return \"tagRed\"\n      case \"TypeScript\":\n        return \"tagBlue\"\n      case \"Go\":\n        return \"tagTurquoise\"\n      case \"Python\":\n        return \"tagMint\"\n      case \"Rust\":\n        return \"tagOrange\"\n      case \"C#\":\n        return \"tagBlue\"\n      case \"Java\":\n        return \"tagPink\"\n      default:\n        return \"tagGray\"\n    }\n  }\n  return (\n    <Badge size=\"sm\" textTransform=\"unset\" background={backgroundProp()}>\n      {children}\n    </Badge>\n  )\n}\n\nexport interface IProps {\n  children?: React.ReactNode\n  url: string\n  background: string\n  image: IGatsbyImageData | string\n  name: string\n  description?: ReactNode\n  note?: string\n  alt?: string\n  githubUrl?: string\n  repoLangCount?: number\n  subjects?: Array<string>\n  hideStars?: boolean\n}\n\nconst ProductCard: React.FC<IProps> = ({\n  url,\n  background: bgProp,\n  image,\n  name,\n  description,\n  note = \"\",\n  alt = \"\",\n  children,\n  githubUrl = \"\",\n  repoLangCount = 1,\n  subjects,\n  hideStars = false,\n}) => {\n  const split = githubUrl.split(\"/\")\n  const repoOwner = split[split.length - 2]\n  const repoName = split[split.length - 1]\n\n  // TODO add loading state\n  const { error, data } = useQuery(REPO_DATA, {\n    variables: {\n      repoOwner,\n      repoName,\n      repoLangCount,\n    },\n    skip: !githubUrl,\n  })\n\n  const hasRepoData = data && data.repository && !error\n\n  const isImgSrc = typeof image === \"string\"\n\n  const DESCRIPTION_STYLES: TextProps = {\n    opacity: 0.8,\n    fontSize: \"sm\",\n    mb: 2,\n    lineHeight: \"140%\",\n  }\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n      color=\"text\"\n      background=\"searchBackground\"\n      boxShadow=\"0px 14px 66px rgba(0, 0, 0, 0.07)\"\n      borderRadius=\"base\"\n      border=\"1px\"\n      borderColor=\"lightBorder\"\n      textDecoration=\"none\"\n      _hover={{\n        transition: \"transform 0.1s\",\n        transform: \"scale(1.02)\",\n      }}\n    >\n      <Center\n        background={bgProp}\n        boxShadow=\"inset 0px -1px 0px rgba(0, 0, 0, 0.1)\"\n        minH=\"200px\"\n      >\n        {isImgSrc ? (\n          <img src={image} alt={alt} />\n        ) : (\n          <Img\n            as={GatsbyImage}\n            image={image}\n            alt={alt}\n            objectFit=\"contain\"\n            width=\"100%\"\n            alignSelf=\"center\"\n            maxW={{ base: \"311px\", sm: \"372px\" }}\n            maxH=\"257px\"\n          />\n        )}\n      </Center>\n      <Flex flexDirection=\"column\" p={6} textAlign=\"left\" height=\"100%\">\n        {hasRepoData && (\n          <GitStars gitHubRepo={data.repository} hideStars={hideStars} />\n        )}\n        <Heading\n          as=\"h3\"\n          fontSize=\"2xl\"\n          fontWeight={600}\n          mt={!hasRepoData ? 8 : 12}\n          mb={3}\n        >\n          {name}\n        </Heading>\n        {description && <Text {...DESCRIPTION_STYLES}>{description}</Text>}\n        {note.length > 0 && <Text {...DESCRIPTION_STYLES}>Note: {note}</Text>}\n        {children && <Box mt={4}>{children}</Box>}\n      </Flex>\n      <HStack mt={5} mb={2} px={6} spacing={3}>\n        {subjects &&\n          subjects.map((subject, idx) => (\n            <SubjectBadge key={idx} subject={subject}>\n              {subject}\n            </SubjectBadge>\n          ))}\n        {hasRepoData &&\n          data.repository.languages.nodes.map(\n            ({ name }: { name: string }, idx: number) => (\n              <SubjectBadge key={idx} subject={name}>\n                {name.toUpperCase()}\n              </SubjectBadge>\n            )\n          )}\n      </HStack>\n      <ButtonLink to={url} m={4} height={20}>\n        Open {name}\n      </ButtonLink>\n    </Flex>\n  )\n}\n\nexport default ProductCard\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["_ref","gitHubRepo","className","hideStars","starsString","stargazerCount","toString","rgx","test","replace","___EmotionJSX","Link","to","url","hideArrow","Flex","background","textDecoration","border","borderColor","borderRadius","float","color","_hover","boxShadow","path","fill","Icon","as","FaGithub","m","Center","w","justifyContent","fontSize","mx","Emoji","text","Text","px","my","REPO_DATA","gql","SubjectBadge","subject","children","Badge","size","textTransform","backgroundProp","_ref2","bgProp","image","name","description","note","alt","githubUrl","repoLangCount","subjects","split","repoOwner","length","repoName","error","data","useQuery","variables","skip","hasRepoData","repository","isImgSrc","DESCRIPTION_STYLES","opacity","mb","lineHeight","flexDirection","transition","transform","minH","src","Img","GatsbyImage","objectFit","width","alignSelf","maxW","base","sm","maxH","p","textAlign","height","GitStars","Heading","fontWeight","mt","Box","HStack","spacing","map","idx","key","languages","nodes","toUpperCase","ButtonLink","module","exports","array","iteratee","index","result","Array","copyArray","shuffleSelf","nativeFloor","Math","floor","nativeRandom","random","lower","upper","values","collection","arrayMap","object","props","baseRandom","lastIndex","undefined","rand","value","arrayShuffle","baseShuffle","isArray","baseValues","keys"],"sourceRoot":""}