{"version":3,"file":"3a7134306f985a75df1c8130c991f4763ca69532-48573f5840907156d032.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/Contributors.tsx","webpack://ethereum-org-website/./src/components/ExpandableCard.tsx","webpack://ethereum-org-website/./src/components/Logo.tsx","webpack://ethereum-org-website/./node_modules/@chakra-ui/input/dist/index.esm.js","webpack://ethereum-org-website/./src/components/MeetupList.tsx","webpack://ethereum-org-website/./src/components/RandomAppList.tsx","webpack://ethereum-org-website/./src/components/Roadmap.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { shuffle } from \"lodash\"\n\nimport { Box, Flex, Image, LinkBox, LinkOverlay, Text } from \"@chakra-ui/react\"\n\nimport data from \"../data/contributors.json\"\n\nimport Link from \"./Link\"\n\nexport interface IProps {}\n\nexport interface Contributor {\n  login: string\n  name: string\n  avatar_url: string\n  profile: string\n  contributions: Array<string>\n}\n\nconst Contributors: React.FC<IProps> = () => {\n  const [contributorsList, setContributorsList] = useState<Array<Contributor>>(\n    []\n  )\n\n  useEffect(() => {\n    const list = shuffle(data.contributors)\n    setContributorsList(list)\n  }, [])\n\n  return (\n    <>\n      <p>\n        Thanks to our {contributorsList.length} Ethereum community members who\n        have contributed so far!\n      </p>\n\n      <Flex flexWrap=\"wrap\">\n        {contributorsList.map((contributor, idx) => (\n          <LinkBox\n            as=\"div\"\n            maxWidth=\"132px\"\n            margin=\"2\"\n            boxShadow=\"0px 14px 66px rgba(0, 0, 0, 0.07), 0px 10px 17px rgba(0, 0, 0, 0.03), 0px 4px 7px rgba(0, 0, 0, 0.05)\"\n            _hover={{\n              textDecoration: \"none\",\n              borderRadius: \"base\",\n              boxShadow: \"0px 8px 17px rgba(0, 0, 0, 0.15)\",\n              background: \"tableBackgroundHover\",\n              transition: \"transform 0.1s\",\n              transform: \"scale(1.02)\",\n            }}\n            _focus={{\n              textDecoration: \"none\",\n              borderRadius: \"base\",\n              boxShadow: \"0px 8px 17px rgba(0, 0, 0, 0.15)\",\n              background: \"tableBackgroundHover\",\n              transition: \"transform 0.1s\",\n              transform: \"scale(1.02)\",\n            }}\n          >\n            <Image\n              width=\"132px\"\n              height=\"132px\"\n              src={contributor.avatar_url}\n              alt={contributor.name}\n            />\n            <Box padding=\"1rem\">\n              <Text as=\"h3\" fontSize=\"md\" marginTop=\"2\" marginBottom=\"4\">\n                <LinkOverlay\n                  as={Link}\n                  href={contributor.profile}\n                  hideArrow\n                  color=\"text\"\n                  textDecoration=\"none\"\n                  _hover={{ textDecoration: \"none\" }}\n                  isExternal={true}\n                >\n                  {contributor.name}\n                </LinkOverlay>\n              </Text>\n            </Box>\n          </LinkBox>\n        ))}\n      </Flex>\n    </>\n  )\n}\n\nexport default Contributors\n","// Libraries\nimport React, { ComponentType, ReactNode, SVGProps, useState } from \"react\"\n\n// Components\nimport Translation from \"./Translation\"\n\n// Utils\nimport { trackCustomEvent } from \"../utils/matomo\"\nimport {\n  Accordion,\n  AccordionButton,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  Heading,\n  Icon,\n  Text,\n} from \"@chakra-ui/react\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  contentPreview?: ReactNode\n  title: ReactNode\n  svg?: typeof Icon\n  eventCategory?: string\n  eventName?: string\n}\n\nconst ExpandableCard: React.FC<IProps> = ({\n  children,\n  contentPreview,\n  title,\n  svg: Svg,\n  eventCategory = \"\",\n  eventName = \"\",\n}) => {\n  const [isVisible, setIsVisible] = useState(false)\n  const matomo = {\n    eventAction: `Clicked`,\n    eventCategory: `ExpandableCard${eventCategory}`,\n    eventName,\n  }\n  const onClick = () => {\n    // Card will not collapse if clicking on a link or selecting text\n    if (\n      window.getSelection()?.toString().length === 0 &&\n      !(window.event?.target as HTMLDivElement)?.className.includes(\n        \"ExternalLink\"\n      )\n    ) {\n      !isVisible && trackCustomEvent(matomo)\n      setIsVisible(!isVisible)\n    }\n  }\n\n  return (\n    <Accordion\n      border=\"1px solid\"\n      borderColor=\"border\"\n      borderRadius=\"sm\"\n      display=\"flex\"\n      flex-direction=\"column\"\n      marginBottom=\"4\"\n      cursor=\"pointer\"\n      _hover={{\n        backgroundColor: \"ednBackground\",\n      }}\n      borderBottomWidth=\"0\"\n      index={isVisible ? [0] : []}\n    >\n      <AccordionItem borderTopWidth=\"0\" flex=\"1\">\n        <Heading as=\"h3\" m={0}>\n          <AccordionButton\n            width=\"100%\"\n            p={6}\n            flex=\"1\"\n            onClick={onClick}\n            _hover={{\n              backgroundColor: \"ednBackground\",\n            }}\n          >\n            <Box\n              display=\"flex\"\n              width=\"100%\"\n              alignItems=\"center\"\n              flexDir={{ base: \"column\", sm: \"row\" }}\n            >\n              <Box\n                marginBottom={{ base: 2, sm: 0 }}\n                marginRight={{ base: 0, sm: 4 }}\n              >\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  sx={{\n                    svg: { marginRight: \"1.5rem\" },\n                  }}\n                  my=\"4\"\n                >\n                  {!!Svg && <Svg />}\n                  <Text fontSize=\"xl\" fontWeight=\"semibold\" flex=\"1\" m=\"0\">\n                    {title}\n                  </Text>\n                </Box>\n                <Text\n                  fontSize=\"sm\"\n                  color=\"text200\"\n                  marginBottom=\"0\"\n                  width=\"fit-content\"\n                >\n                  {contentPreview}\n                </Text>\n              </Box>\n              <Text\n                fontSize=\"md\"\n                color=\"primary\"\n                ml={{ base: undefined, sm: \"auto\" }}\n                mt=\"auto\"\n                mb=\"auto\"\n              >\n                <Translation id={isVisible ? \"less\" : \"more\"} />\n              </Text>\n            </Box>\n          </AccordionButton>\n        </Heading>\n        <AccordionPanel\n          paddingX=\"6\"\n          paddingBottom=\"6\"\n          paddingTop=\"0\"\n          onClick={onClick}\n        >\n          <Box\n            fontSize=\"md\"\n            color=\"text\"\n            paddingTop=\"6\"\n            borderTop=\"1px solid\"\n            borderColor=\"border\"\n          >\n            {children}\n          </Box>\n        </AccordionPanel>\n      </AccordionItem>\n    </Accordion>\n  )\n}\n\nexport default ExpandableCard\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { useColorMode } from \"@chakra-ui/react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { useIntl } from \"react-intl\"\n\nimport { translateMessageId } from \"../utils/translations\"\nimport { getImage } from \"../utils/image\"\n\nexport interface IProps {}\n\nconst Logo: React.FC<IProps> = () => {\n  const intl = useIntl()\n  const { colorMode } = useColorMode()\n  const isDarkTheme = colorMode === \"dark\"\n  const data = useStaticQuery(graphql`\n    {\n      dark: file(relativePath: { eq: \"ef-logo.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            height: 100\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      light: file(relativePath: { eq: \"ef-logo-white.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            height: 100\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n    }\n  `)\n\n  const image = isDarkTheme ? data.light : data.dark\n  return (\n    <GatsbyImage\n      image={getImage(image)!}\n      alt={translateMessageId(\"ethereum-foundation-logo\", intl)}\n    />\n  )\n}\n\nexport default Logo\n","// ../../react-shim.js\nimport React from \"react\";\n\n// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ React.createElement(chakra.input, {\n    size: htmlSize,\n    ...input,\n    __css: styles.field,\n    ref,\n    className: _className\n  });\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\n// src/input-addon.tsx\nimport { chakra as chakra3, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nimport { cx as cx3 } from \"@chakra-ui/shared-utils\";\n\n// src/input-group.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra as chakra2,\n  forwardRef as forwardRef2,\n  omitThemingProps as omitThemingProps2,\n  useMultiStyleConfig as useMultiStyleConfig2\n} from \"@chakra-ui/system\";\nimport { cx as cx2 } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { cloneElement } from \"react\";\nvar [InputGroupStylesProvider, useInputGroupStyles] = createContext({\n  name: `InputGroupStylesContext`,\n  errorMessage: `useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `\n});\nvar InputGroup = forwardRef2(function InputGroup2(props, ref) {\n  const styles = useMultiStyleConfig2(\"Input\", props);\n  const { children, className, ...rest } = omitThemingProps2(props);\n  const _className = cx2(\"chakra-input__group\", className);\n  const groupStyles = {};\n  const validChildren = getValidChildren(children);\n  const input = styles.field;\n  validChildren.forEach((child) => {\n    if (!styles)\n      return;\n    if (input && child.type.id === \"InputLeftElement\") {\n      groupStyles.paddingStart = input.height ?? input.h;\n    }\n    if (input && child.type.id === \"InputRightElement\") {\n      groupStyles.paddingEnd = input.height ?? input.h;\n    }\n    if (child.type.id === \"InputRightAddon\") {\n      groupStyles.borderEndRadius = 0;\n    }\n    if (child.type.id === \"InputLeftAddon\") {\n      groupStyles.borderStartRadius = 0;\n    }\n  });\n  const clones = validChildren.map((child) => {\n    var _a, _b;\n    const theming = compact({\n      size: ((_a = child.props) == null ? void 0 : _a.size) || props.size,\n      variant: ((_b = child.props) == null ? void 0 : _b.variant) || props.variant\n    });\n    return child.type.id !== \"Input\" ? cloneElement(child, theming) : cloneElement(child, Object.assign(theming, groupStyles, child.props));\n  });\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    className: _className,\n    ref,\n    __css: {\n      width: \"100%\",\n      display: \"flex\",\n      position: \"relative\"\n    },\n    ...rest\n  }, /* @__PURE__ */ React.createElement(InputGroupStylesProvider, {\n    value: styles\n  }, clones));\n});\nInputGroup.displayName = \"InputGroup\";\n\n// src/input-addon.tsx\nvar placements = {\n  left: {\n    marginEnd: \"-1px\",\n    borderEndRadius: 0,\n    borderEndColor: \"transparent\"\n  },\n  right: {\n    marginStart: \"-1px\",\n    borderStartRadius: 0,\n    borderStartColor: \"transparent\"\n  }\n};\nvar StyledAddon = chakra3(\"div\", {\n  baseStyle: {\n    flex: \"0 0 auto\",\n    width: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    whiteSpace: \"nowrap\"\n  }\n});\nvar InputAddon = forwardRef3(function InputAddon2(props, ref) {\n  const { placement = \"left\", ...rest } = props;\n  const placementStyles = placements[placement] ?? {};\n  const styles = useInputGroupStyles();\n  return /* @__PURE__ */ React.createElement(StyledAddon, {\n    ref,\n    ...rest,\n    __css: {\n      ...styles.addon,\n      ...placementStyles\n    }\n  });\n});\nInputAddon.displayName = \"InputAddon\";\nvar InputLeftAddon = forwardRef3(function InputLeftAddon2(props, ref) {\n  return /* @__PURE__ */ React.createElement(InputAddon, {\n    ref,\n    placement: \"left\",\n    ...props,\n    className: cx3(\"chakra-input__left-addon\", props.className)\n  });\n});\nInputLeftAddon.displayName = \"InputLeftAddon\";\nInputLeftAddon.id = \"InputLeftAddon\";\nvar InputRightAddon = forwardRef3(function InputRightAddon2(props, ref) {\n  return /* @__PURE__ */ React.createElement(InputAddon, {\n    ref,\n    placement: \"right\",\n    ...props,\n    className: cx3(\"chakra-input__right-addon\", props.className)\n  });\n});\nInputRightAddon.displayName = \"InputRightAddon\";\nInputRightAddon.id = \"InputRightAddon\";\n\n// src/input-element.tsx\nimport {\n  chakra as chakra4,\n  forwardRef as forwardRef4\n} from \"@chakra-ui/system\";\nimport { cx as cx4 } from \"@chakra-ui/shared-utils\";\nvar StyledInputElement = chakra4(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2\n  }\n});\nvar InputElement = forwardRef4(function InputElement2(props, ref) {\n  const { placement = \"left\", ...rest } = props;\n  const styles = useInputGroupStyles();\n  const input = styles.field;\n  const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\";\n  const elementStyles = {\n    [attr]: \"0\",\n    width: (input == null ? void 0 : input.height) ?? (input == null ? void 0 : input.h),\n    height: (input == null ? void 0 : input.height) ?? (input == null ? void 0 : input.h),\n    fontSize: input == null ? void 0 : input.fontSize,\n    ...styles.element\n  };\n  return /* @__PURE__ */ React.createElement(StyledInputElement, {\n    ref,\n    __css: elementStyles,\n    ...rest\n  });\n});\nInputElement.id = \"InputElement\";\nInputElement.displayName = \"InputElement\";\nvar InputLeftElement = forwardRef4(function InputLeftElement2(props, ref) {\n  const { className, ...rest } = props;\n  const _className = cx4(\"chakra-input__left-element\", className);\n  return /* @__PURE__ */ React.createElement(InputElement, {\n    ref,\n    placement: \"left\",\n    className: _className,\n    ...rest\n  });\n});\nInputLeftElement.id = \"InputLeftElement\";\nInputLeftElement.displayName = \"InputLeftElement\";\nvar InputRightElement = forwardRef4(function InputRightElement2(props, ref) {\n  const { className, ...rest } = props;\n  const _className = cx4(\"chakra-input__right-element\", className);\n  return /* @__PURE__ */ React.createElement(InputElement, {\n    ref,\n    placement: \"right\",\n    className: _className,\n    ...rest\n  });\n});\nInputRightElement.id = \"InputRightElement\";\nInputRightElement.displayName = \"InputRightElement\";\nexport {\n  Input,\n  InputAddon,\n  InputGroup,\n  InputLeftAddon,\n  InputLeftElement,\n  InputRightAddon,\n  InputRightElement,\n  useInputGroupStyles\n};\n","// Libraries\nimport React, { useState } from \"react\"\nimport { sortBy } from \"lodash\"\nimport {\n  Box,\n  Flex,\n  Input,\n  LinkBox,\n  LinkOverlay,\n  Text,\n  useColorMode,\n} from \"@chakra-ui/react\"\n\n// Components\nimport Emoji from \"./Emoji\"\nimport InfoBanner from \"./InfoBanner\"\nimport Link from \"./Link\"\nimport Translation from \"./Translation\"\n\n// Data\nimport meetups from \"../data/community-meetups.json\"\n\nexport interface Meetup {\n  title: string\n  emoji: string\n  location: string\n  link: string\n}\n\nconst filterMeetups = (query: string): Array<Meetup> => {\n  if (!query) return sortedMeetups\n\n  const lowercaseQuery = query.toLowerCase()\n\n  return sortedMeetups.filter((meetup) => {\n    return (\n      meetup.title.toLowerCase().includes(lowercaseQuery) ||\n      meetup.location.toLowerCase().includes(lowercaseQuery)\n    )\n  })\n}\n\n// sort meetups by country and then by city\nconst sortedMeetups: Array<Meetup> = sortBy(meetups, [\"emoji\", \"location\"])\n\nexport interface IProps {}\n\n// TODO create generalized CardList / TableCard\n// TODO prop if ordered list or unordered\nconst MeetupList: React.FC<IProps> = () => {\n  const [searchField, setSearchField] = useState<string>(\"\")\n  const filteredMeetups = filterMeetups(searchField)\n  const { colorMode } = useColorMode()\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>): void =>\n    setSearchField(event.target.value)\n\n  return (\n    <Box>\n      <Input\n        onChange={handleSearch}\n        placeholder={\"Search by meetup title or location\"}\n        display=\"block\"\n        mr=\"auto\"\n        ml=\"auto\"\n        mb={6}\n        border=\"1px solid\"\n        borderColor=\"searchBorder\"\n        color=\"text\"\n        bg=\"searchBackground\"\n        p={2}\n        borderRadius=\"base\"\n        w=\"100%\"\n        _focus={{ outline: \"auto 1px\" }}\n        _placeholder={{ color: \"text200\" }}\n      />\n      <Box\n        boxShadow={colorMode === \"dark\" ? \"tableBox.dark\" : \"tableBox.light\"}\n      >\n        {filteredMeetups.length ? (\n          filteredMeetups.map((meetup, idx) => (\n            <LinkBox\n              key={idx}\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              boxShadow={\n                colorMode === \"dark\"\n                  ? \"tableItemBox.dark\"\n                  : \"tableItemBox.light\"\n              }\n              mb={0.25}\n              p={4}\n              w=\"100%\"\n              _hover={{\n                textDecoration: \"none\",\n                borderRadius: \"base\",\n                boxShadow: \"0 0 1px primary\",\n                bg: \"tableBackgroundHover\",\n              }}\n            >\n              <Flex flex=\"1 1 75%\" mr={4}>\n                <Box mr={4} opacity=\"0.4\">\n                  {idx + 1}\n                </Box>\n                <Box>\n                  <LinkOverlay\n                    as={Link}\n                    href={meetup.link}\n                    textDecor=\"none\"\n                    color=\"text\"\n                    hideArrow\n                  >\n                    {meetup.title}\n                  </LinkOverlay>\n                </Box>\n              </Flex>\n              <Flex\n                textAlign=\"right\"\n                alignContent=\"flex-start\"\n                flex=\"1 1 25%\"\n                mr={4}\n                flexWrap=\"wrap\"\n              >\n                <Emoji text={meetup.emoji} boxSize={4} mr={2} />\n                <Text mb={0} opacity={\"0.6\"}>\n                  {meetup.location}\n                </Text>\n              </Flex>\n              <Box\n                as=\"span\"\n                _after={{\n                  content: '\"↗\"',\n                  ml: 0.5,\n                  mr: 1.5,\n                }}\n              ></Box>\n            </LinkBox>\n          ))\n        ) : (\n          <InfoBanner emoji=\":information_source:\">\n            <Translation id=\"page-community-meetuplist-no-meetups\" />{\" \"}\n            <Link to=\"https://github.com/ethereum/ethereum-org-website/blob/dev/src/data/community-meetups.json\">\n              <Translation id=\"page-community-please-add-to-page\" />\n            </Link>\n          </InfoBanner>\n        )}\n      </Box>\n    </Box>\n  )\n}\n\nexport default MeetupList\n","import React, { useEffect, useState } from \"react\"\nimport { shuffle } from \"lodash\"\n\nimport Link from \"./Link\"\nimport Translation from \"./Translation\"\nimport { TranslationKey } from \"../utils/translations\"\n\ninterface App {\n  name: string\n  url: string\n  description: TranslationKey\n}\n\nconst appList: Array<App> = [\n  {\n    name: \"Gitcoin\",\n    url: \"https://gitcoin.co\",\n    description: \"page-dapps-dapp-description-gitcoin\",\n  },\n  {\n    name: \"Cent\",\n    url: \"https://beta.cent.co\",\n    description: \"page-dapps-dapp-description-cent\",\n  },\n  {\n    name: \"Gods Unchained\",\n    url: \"https://godsunchained.com/\",\n    description: \"page-dapps-dapp-description-gods-unchained\",\n  },\n  {\n    name: \"DAI\",\n    url: \"https://makerdao.com/en/\",\n    description: \"page-stablecoins-accordion-earn-project-2-description\",\n  },\n  {\n    name: \"Decentraland\",\n    url: \"https://decentraland.org/\",\n    description: \"page-dapps-dapp-description-decentraland\",\n  },\n  {\n    name: \"Augur\",\n    url: \"https://www.augur.net/\",\n    description: \"page-dapps-dapp-description-augur\",\n  },\n  {\n    name: \"Ethereum Name Service\",\n    url: \"http://ens.domains/\",\n    description: \"page-dapps-dapp-description-ens\",\n  },\n]\n\nexport interface IProps {}\n\nconst RandomAppList: React.FC<IProps> = () => {\n  const [randomAppList, setRandomAppList] = useState<Array<App>>([])\n\n  useEffect(() => {\n    const list = shuffle(appList)\n    setRandomAppList(list)\n  }, [])\n\n  return (\n    <ul>\n      {randomAppList.map((item, idx) => (\n        <li key={idx}>\n          <Link to={item.url}>{item.name}</Link>\n          , <Translation id={item.description} />\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default RandomAppList\n","import React, { useState, useEffect } from \"react\"\nimport { useIntl } from \"react-intl\"\nimport axios from \"axios\"\n\nimport Translation from \"./Translation\"\nimport Link from \"./Link\"\n\nimport { translateMessageId } from \"../utils/translations\"\n\nimport { GATSBY_FUNCTIONS_PATH } from \"../constants\"\nimport {\n  Box,\n  Flex,\n  Heading,\n  LinkBox,\n  LinkOverlay,\n  ListItem,\n  Text,\n  UnorderedList,\n  useToken,\n} from \"@chakra-ui/react\"\n\nexport interface Label {\n  name: string\n}\n\nexport interface Issue {\n  html_url?: string\n  title: string\n  errorMsg?: string\n  labels: Array<Label>\n  state?: string\n  user?: {\n    login: string\n  }\n  pull_request?: string\n}\n\nexport interface IPropsIssueSection {\n  issues: Array<Issue>\n}\n\nconst IssueSection: React.FC<IPropsIssueSection> = ({ issues }) => {\n  const [cardBoxShadow] = useToken(\"colors\", [\"cardBoxShadow\"])\n\n  if (!issues) {\n    return null\n  }\n  return (\n    <Flex flexWrap=\"wrap\" my={8} width=\"full\" gap={4}>\n      {issues.map((issue, idx) => {\n        const url = issue.html_url ? issue.html_url : \"#\"\n        return (\n          <LinkBox\n            key={idx}\n            flex={{ base: \"1 1 240px\", sm: \"0 1 240px\" }}\n            w=\"100%\"\n            p={4}\n            color=\"text\"\n            borderRadius=\"2px\"\n            border=\"1px solid\"\n            borderColor=\"lightBorder\"\n            transition=\"all 0.5s cubic-bezier(0.25, 0.8, 0.25, 1)\"\n            cursor=\"pointer\"\n            _hover={{\n              boxShadow: cardBoxShadow,\n              border: \"1px solid\",\n              borderColor: \"black300\",\n            }}\n          >\n            <Box>{issue.title}</Box>\n            {issue.errorMsg && (\n              <Text color=\"fail\" mb={0}>\n                {issue.errorMsg}\n              </Text>\n            )}\n            <Box>\n              {issue.html_url && (\n                <LinkOverlay as={Link} href={url}>\n                  Discuss\n                </LinkOverlay>\n              )}\n            </Box>\n          </LinkBox>\n        )\n      })}\n    </Flex>\n  )\n}\n\nexport interface IProps {}\n\nconst Roadmap: React.FC<IProps> = () => {\n  const intl = useIntl()\n  const issue: Issue = {\n    title: translateMessageId(\"loading\", intl),\n    labels: [],\n  }\n  const blankIssues: Array<Issue> = Array(6).fill(issue)\n  const [issues, setIssues] = useState<{ [status: string]: Array<Issue> }>({\n    inProgress: blankIssues,\n    planned: blankIssues,\n    implemented: blankIssues,\n  })\n\n  // Checks if any of the label objects in the array of labels associated with an issue have the spam label\n  const issueIsSpam = (issue: Issue) =>\n    issue.labels.some((label) => label.name === \"Type: Spam\")\n\n  const issueIsAbandoned = (issue: Issue) =>\n    issue.labels.some((label) => label.name === \"Status: Abandoned\")\n\n  // TODO update to pull PRs & issues separately\n  useEffect(() => {\n    axios\n      .get(`${GATSBY_FUNCTIONS_PATH}/roadmap`)\n      .then((response) => {\n        let issues: Array<Issue> = []\n        if (response.data && response.data.data) {\n          issues = response.data.data\n          const planned = issues\n            .filter((issue) => {\n              for (const label of issue.labels) {\n                if (label.name === \"Status: Up Next\") {\n                  return issue.state === \"open\"\n                }\n              }\n              return false\n            })\n            .slice(0, 6)\n\n          const inProgress = issues\n            .filter((issue) => {\n              // if is an open PR\n              if (!!issue.pull_request) {\n                return issue.state === \"open\"\n              }\n\n              // if issue is in progress\n              for (const label of issue.labels) {\n                if (label.name === \"Status: In Progress\") {\n                  return issue.state === \"open\"\n                }\n              }\n              return false\n            })\n            .slice(0, 6)\n\n          const implemented = issues\n            .filter(\n              (issue) =>\n                issue.state === \"closed\" &&\n                !!issue.user &&\n                \"allcontributors[bot]\" !== issue.user.login &&\n                !!issue.pull_request &&\n                !issueIsSpam(issue) &&\n                !issueIsAbandoned(issue)\n            )\n            .slice(0, 6)\n          setIssues({\n            planned,\n            inProgress,\n            implemented,\n          })\n        }\n      })\n      .catch((error) => {\n        console.error(error)\n        const errorIssue: Issue = {\n          title: translateMessageId(\"loading-error\", intl),\n          errorMsg: translateMessageId(\"refresh\", intl),\n          labels: [],\n        }\n        const errorIssues: Array<Issue> = Array(3).fill(errorIssue)\n        setIssues({\n          planned: errorIssues,\n          inProgress: errorIssues,\n          implemented: errorIssues,\n        })\n      })\n  }, [intl])\n\n  return (\n    <Box>\n      <Text>\n        <Translation id=\"page-about-p-1\" />\n      </Text>\n      <Text>\n        <Link to=\"https://github.com/ethereum/ethereum-org-website/blob/master/LICENSE\">\n          <Translation id=\"page-about-link-1\" />\n        </Link>\n        .\n      </Text>\n      <Text>\n        <Translation id=\"page-about-p-2\" />{\" \"}\n        <Link to=\"https://github.com/ethereum/ethereum-org-website\">\n          <Translation id=\"page-about-link-2\" />\n        </Link>\n        <Translation id=\"page-about-p-3\" />\n      </Text>\n      <UnorderedList>\n        <ListItem>\n          <Translation id=\"page-about-li-1\" />\n        </ListItem>\n        <ListItem>\n          <Translation id=\"page-about-li-2\" />\n        </ListItem>\n        <ListItem>\n          <Translation id=\"page-about-li-3\" />\n        </ListItem>\n      </UnorderedList>\n      <Text>\n        <Translation id=\"page-about-p-4\" />\n      </Text>\n      <Heading as=\"h3\">\n        <Translation id=\"page-about-h3\" />\n      </Heading>\n      <Text>\n        <Translation id=\"page-about-p-5\" />{\" \"}\n        <Link to=\"https://github.com/ethereum/ethereum-org-website/labels/Status%3A%20In%20Progress\">\n          <Translation id=\"page-about-link-3\" />{\" \"}\n        </Link>\n        .\n      </Text>\n      <IssueSection issues={issues.inProgress} />\n      <Heading as=\"h3\">\n        <Translation id=\"page-about-h3-2\" />\n      </Heading>\n      <Text>\n        <Translation id=\"page-about-p-6\" />{\" \"}\n        <Link to=\"https://github.com/ethereum/ethereum-org-website/issues?q=is%3Aissue+is%3Aopen+label%3A%22Status%3A+Up+Next%22\">\n          <Translation id=\"page-about-link-3\" />\n        </Link>\n        .\n      </Text>\n      <IssueSection issues={issues.planned} />\n      <Heading as=\"h3\">\n        <Translation id=\"page-about-h3-1\" />\n      </Heading>\n      <Text>\n        <Translation id=\"page-about-p-7\" />{\" \"}\n        <Link to=\"https://github.com/ethereum/ethereum-org-website/issues?q=is%3Aissue+is%3Aclosed\">\n          <Translation id=\"page-about-link-6\" />{\" \"}\n        </Link>\n        .\n      </Text>\n      <IssueSection issues={issues.implemented} />\n      <Heading as=\"h2\">\n        <Translation id=\"page-about-h2\" />\n      </Heading>\n      <Text>\n        <Translation id=\"page-about-p-8\" />\n      </Text>\n      <UnorderedList>\n        <ListItem>\n          <Link to=\"https://discord.gg/bTCfS8C\">\n            <Translation id=\"page-about-link-4\" />\n          </Link>\n        </ListItem>\n        <ListItem>\n          <Link to=\"https://github.com/ethereum/ethereum-org-website/issues/new/choose\">\n            <Translation id=\"page-about-link-7\" />\n          </Link>\n        </ListItem>\n        <ListItem>\n          <Link to=\"https://twitter.com/ethdotorg\">\n            <Translation id=\"page-about-link-5\" />\n          </Link>\n        </ListItem>\n      </UnorderedList>\n    </Box>\n  )\n}\n\nexport default Roadmap\n"],"names":["contributorsList","setContributorsList","useState","useEffect","list","_shuffle","data","___EmotionJSX","length","Flex","flexWrap","map","contributor","idx","LinkBox","as","maxWidth","margin","boxShadow","_hover","textDecoration","borderRadius","background","transition","transform","_focus","Image","width","height","src","avatar_url","alt","name","Box","padding","Text","fontSize","marginTop","marginBottom","LinkOverlay","Link","href","profile","hideArrow","color","isExternal","_ref","children","contentPreview","title","svg","Svg","eventCategory","eventName","isVisible","setIsVisible","matomo","eventAction","onClick","window","getSelection","_window$getSelection","toString","event","_window$event","target","_window$event$target","className","includes","trackCustomEvent","Accordion","border","borderColor","display","cursor","backgroundColor","borderBottomWidth","index","AccordionItem","borderTopWidth","flex","Heading","m","AccordionButton","p","alignItems","flexDir","base","sm","marginRight","sx","my","fontWeight","ml","undefined","mt","mb","Translation","id","AccordionPanel","paddingX","paddingBottom","paddingTop","borderTop","intl","useIntl","colorMode","useColorMode","isDarkTheme","useStaticQuery","image","light","dark","GatsbyImage","getImage","translateMessageId","Input","props","ref","htmlSize","rest","styles","ownProps","input","_className","cx","size","__css","field","displayName","InputGroupStylesProvider","useInputGroupStyles","errorMessage","groupStyles","validChildren","forEach","child","type","paddingStart","h","paddingEnd","borderEndRadius","borderStartRadius","clones","_a","_b","theming","variant","cloneElement","Object","assign","position","value","placements","left","marginEnd","borderEndColor","right","marginStart","borderStartColor","StyledAddon","baseStyle","whiteSpace","InputAddon","placement","placementStyles","addon","InputLeftAddon","InputRightAddon","StyledInputElement","justifyContent","top","zIndex","InputElement","elementStyles","element","InputLeftElement","InputRightElement","sortedMeetups","_sortBy","meetups","searchField","setSearchField","filteredMeetups","query","lowercaseQuery","toLowerCase","filter","meetup","location","filterMeetups","onChange","placeholder","mr","bg","w","outline","_placeholder","key","opacity","link","textDecor","textAlign","alignContent","Emoji","text","emoji","boxSize","_after","content","InfoBanner","to","appList","url","description","randomAppList","setRandomAppList","item","IssueSection","issues","cardBoxShadow","useToken","gap","issue","html_url","errorMsg","labels","blankIssues","Array","fill","setIssues","inProgress","planned","implemented","axios","GATSBY_FUNCTIONS_PATH","then","response","label","state","slice","pull_request","user","login","some","issueIsSpam","issueIsAbandoned","catch","error","console","errorIssue","errorIssues","UnorderedList","ListItem"],"sourceRoot":""}