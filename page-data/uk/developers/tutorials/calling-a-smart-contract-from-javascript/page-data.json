{"componentChunkName":"component---src-templates-tutorial-tsx","path":"/uk/developers/tutorials/calling-a-smart-contract-from-javascript/","result":{"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/tutorials/calling-a-smart-contract-from-javascript/","readingTime":{"minutes":3.265}},"frontmatter":{"title":"Calling a smart contract from JavaScript","description":"How to call a smart contract function from JavaScript using a Dai token example","lang":"en","tags":["transactions","frontend","JavaScript","web3.js"],"author":"jdourlens","source":"EthereumDev","sourceUrl":"https://ethereumdev.io/calling-a-smart-contract-from-javascript/","skill":"beginner","published":"2020-04-19T00:00:00.000Z","sidebarDepth":null,"address":"0x19dE91Af973F404EDF5B4c093983a7c6E3EC8ccE","isOutdated":null,"postMergeBannerTranslation":null,"hideEditButton":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Calling a smart contract from JavaScript\",\n  \"description\": \"How to call a smart contract function from JavaScript using a Dai token example\",\n  \"author\": \"jdourlens\",\n  \"tags\": [\"transactions\", \"frontend\", \"JavaScript\", \"web3.js\"],\n  \"skill\": \"beginner\",\n  \"lang\": \"en\",\n  \"published\": \"2020-04-19T00:00:00.000Z\",\n  \"source\": \"EthereumDev\",\n  \"sourceUrl\": \"https://ethereumdev.io/calling-a-smart-contract-from-javascript/\",\n  \"address\": \"0x19dE91Af973F404EDF5B4c093983a7c6E3EC8ccE\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this tutorial we\\u2019ll see how to call a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/smart-contracts/\"\n  }, \"smart contract\"), \" function from JavaScript. First is reading the state of a smart contract (e.g. the balance of an ERC20 holder), then we\\u2019ll modify the state of the blockchain by making a token transfer. You should be already be familiar with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/tutorials/set-up-web3js-to-use-ethereum-in-javascript/\"\n  }, \"setting up a JS environment to interact with the blockchain\"), \".\"), mdx(\"p\", null, \"For this example we\\u2019ll play with the DAI token, for testing purpose we\\u2019ll fork the blockchain using ganache-cli and unlock an address that already has a lot of DAI:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"ganache-cli -f https://mainnet.infura.io/v3/[YOUR INFURA KEY] -d -i 66 1 --unlock 0x4d10ae710Bd8D1C31bd7465c8CBC3add6F279E81\\n\")), mdx(\"p\", null, \"To interact with a smart contract we\\u2019ll need its address and ABI:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const ERC20TransferABI = [\\n  {\\n    constant: false,\\n    inputs: [\\n      {\\n        name: \\\"_to\\\",\\n        type: \\\"address\\\",\\n      },\\n      {\\n        name: \\\"_value\\\",\\n        type: \\\"uint256\\\",\\n      },\\n    ],\\n    name: \\\"transfer\\\",\\n    outputs: [\\n      {\\n        name: \\\"\\\",\\n        type: \\\"bool\\\",\\n      },\\n    ],\\n    payable: false,\\n    stateMutability: \\\"nonpayable\\\",\\n    type: \\\"function\\\",\\n  },\\n  {\\n    constant: true,\\n    inputs: [\\n      {\\n        name: \\\"_owner\\\",\\n        type: \\\"address\\\",\\n      },\\n    ],\\n    name: \\\"balanceOf\\\",\\n    outputs: [\\n      {\\n        name: \\\"balance\\\",\\n        type: \\\"uint256\\\",\\n      },\\n    ],\\n    payable: false,\\n    stateMutability: \\\"view\\\",\\n    type: \\\"function\\\",\\n  },\\n]\\n\\nconst DAI_ADDRESS = \\\"0x6b175474e89094c44da98b954eedeac495271d0f\\\"\\n\")), mdx(\"p\", null, \"For this project we stripped the complete ERC20 ABI to just keep the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balanceOf\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"transfer\"), \" function but you can find \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereumdev.io/abi-for-erc20-contract-on-ethereum/\"\n  }, \"the full ERC20 ABI here\"), \".\"), mdx(\"p\", null, \"We then need to instantiate our smart contract:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const web3 = new Web3(\\\"http://localhost:8545\\\")\\n\\nconst daiToken = new web3.eth.Contract(ERC20TransferABI, DAI_ADDRESS)\\n\")), mdx(\"p\", null, \"We\\u2019ll also set up two addresses:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the one who will receive the transfer and\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the one we already unlocked that will send it:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const senderAddress = \\\"0x4d10ae710Bd8D1C31bd7465c8CBC3add6F279E81\\\"\\nconst receiverAddress = \\\"0x19dE91Af973F404EDF5B4c093983a7c6E3EC8ccE\\\"\\n\")), mdx(\"p\", null, \"In the next part we\\u2019ll call the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balanceOf\"), \" function to retrieve the current amount of tokens both addresses hold.\"), mdx(\"h2\", {\n    \"id\": \"call-reading-value-from-a-smart-contract\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#call-reading-value-from-a-smart-contract\",\n    \"aria-label\": \"call reading value from a smart contract permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Call: Reading value from a smart contract\"), mdx(\"p\", null, \"The first example will call a \\u201Cconstant\\u201D method and execute its smart contract method in the EVM without sending any transaction. For this we\\u2019ll read the ERC20 balance of an address. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/tutorials/understand-the-erc-20-token-smart-contract/\"\n  }, \"Read our article about ERC20 tokens\"), \".\"), mdx(\"p\", null, \"You can access an instantiated smart contract methods that you provided the ABI for as follows: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yourContract.methods.methodname\"), \". By using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"call\"), \" function you\\u2019ll receive the result of executing the function.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"daiToken.methods.balanceOf(senderAddress).call(function (err, res) {\\n  if (err) {\\n    console.log(\\\"An error occurred\\\", err)\\n    return\\n  }\\n  console.log(\\\"The balance is: \\\", res)\\n})\\n\")), mdx(\"p\", null, \"Remember that DAI ERC20 has 18 decimals which means you need to remove 18 zeros to get the correct amount. uint256 are returned as strings as JavaScript does not handle big numeric values. If you\\u2019re not sure \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereumdev.io/how-to-deal-with-big-numbers-in-javascript/\"\n  }, \"how to deal with big numbers in JS check our tutorial about bignumber.js\"), \".\"), mdx(\"h2\", {\n    \"id\": \"send-sending-a-transaction-to-a-smart-contract-function\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#send-sending-a-transaction-to-a-smart-contract-function\",\n    \"aria-label\": \"send sending a transaction to a smart contract function permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Send: Sending a transaction to a smart contract function\"), mdx(\"p\", null, \"For the second example we\\u2019ll call the transfer function of the DAI smart contract to send 10 DAI to our second address. The transfer function accepts two parameters: the recipient address and the amount of token to transfers:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"daiToken.methods\\n  .transfer(receiverAddress, \\\"100000000000000000000\\\")\\n  .send({ from: senderAddress }, function (err, res) {\\n    if (err) {\\n      console.log(\\\"An error occurred\\\", err)\\n      return\\n    }\\n    console.log(\\\"Hash of the transaction: \\\" + res)\\n  })\\n\")), mdx(\"p\", null, \"The call function returns the hash of the transaction that will be mined into the blockchain. On Ethereum, transaction hashes are predictable - that\\u2019s how we can get the hash of the transaction before it is executed (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum.stackexchange.com/questions/45648/how-to-calculate-the-assigned-txhash-of-a-transaction\"\n  }, \"learn how hashes are calculated here\"), \").\"), mdx(\"p\", null, \"As the function only submits the transaction to the blockchain, we can\\u2019t see the result until we know when it is mined and included in the blockchain. In the next tutorial we\\u2019ll learn \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereumdev.io/waiting-for-a-transaction-to-be-mined-on-ethereum-with-js/\"\n  }, \"how to wait for a transaction to be executed on the blockchain by knowing its hash\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#call-reading-value-from-a-smart-contract-call-reading-value-from-a-smart-contract","title":"Call: Reading value from a smart contract {#call-reading-value-from-a-smart-contract}"},{"url":"#send-sending-a-transaction-to-a-smart-contract-function-send-sending-a-transaction-to-a-smart-contract-function","title":"Send: Sending a transaction to a smart contract function {#send-sending-a-transaction-to-a-smart-contract-function}"}]}}},"pageContext":{"language":"uk","slug":"/uk/developers/tutorials/calling-a-smart-contract-from-javascript/","ignoreTranslationBanner":false,"isLegal":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/tutorials/calling-a-smart-contract-from-javascript/index.md","locale":"uk","hrefLang":"uk","originalPath":"/developers/tutorials/calling-a-smart-contract-from-javascript/","dateFormat":"MM/DD/YYYY"}},"staticQueryHashes":["1239077767","3003422828","3280999885","446219633"],"slicesMap":{}}