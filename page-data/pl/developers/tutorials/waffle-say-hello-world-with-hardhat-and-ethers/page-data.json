{"componentChunkName":"component---src-templates-tutorial-tsx","path":"/pl/developers/tutorials/waffle-say-hello-world-with-hardhat-and-ethers/","result":{"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/tutorials/waffle-say-hello-world-with-hardhat-and-ethers/","readingTime":{"minutes":3.895}},"frontmatter":{"title":"Waffle say hello world tutorial with hardhat and ethers","description":"Make your first Waffle project with hardhat and ethers.js","lang":"en","tags":["waffle","smart contracts","solidity","testing","hardhat","ethers.js"],"author":"MiZiet","source":null,"sourceUrl":null,"skill":"basic","published":"2020-10-16T00:00:00.000Z","sidebarDepth":null,"address":null,"isOutdated":null,"postMergeBannerTranslation":null,"hideEditButton":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Waffle say hello world tutorial with hardhat and ethers\",\n  \"description\": \"Make your first Waffle project with hardhat and ethers.js\",\n  \"author\": \"MiZiet\",\n  \"tags\": [\"waffle\", \"smart contracts\", \"solidity\", \"testing\", \"hardhat\", \"ethers.js\"],\n  \"skill\": \"basic\",\n  \"lang\": \"en\",\n  \"published\": \"2020-10-16T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Emoji = makeShortcode(\"Emoji\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In this \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io\"\n  }, \"Waffle\"), \" tutorial, we will learn how to set up a simple \\\"Hello world\\\" smart contract project, using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://hardhat.org/\"\n  }, \"hardhat\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.ethers.io/v5/\"\n  }, \"ethers.js\"), \". Then we will learn how to add a new functionality to our smart contract and how to test it with Waffle.\"), mdx(\"p\", null, \"Let's start with creating new project:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"yarn init\\n\")), mdx(\"p\", null, \"or\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm init\\n\")), mdx(\"p\", null, \"and installing required packages:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"yarn add -D hardhat @nomiclabs/hardhat-ethers ethers @nomiclabs/hardhat-waffle ethereum-waffle chai\\n\")), mdx(\"p\", null, \"or\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm install -D hardhat @nomiclabs/hardhat-ethers ethers @nomiclabs/hardhat-waffle ethereum-waffle chai\\n\")), mdx(\"p\", null, \"Next step is creating a sample hardhat project by running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npx hardhat\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"888    888                      888 888               888\\n888    888                      888 888               888\\n888    888                      888 888               888\\n8888888888  8888b.  888d888 .d88888 88888b.   8888b.  888888\\n888    888     \\\"88b 888P\\\"  d88\\\" 888 888 \\\"88b     \\\"88b 888\\n888    888 .d888888 888    888  888 888  888 .d888888 888\\n888    888 888  888 888    Y88b 888 888  888 888  888 Y88b.\\n888    888 \\\"Y888888 888     \\\"Y88888 888  888 \\\"Y888888  \\\"Y888\\n\\n\\uD83D\\uDC77 Welcome to Hardhat v2.0.3 \\uD83D\\uDC77\\u200D\\n\\n? What do you want to do? \\u2026\\n\\u276F Create a sample project\\nCreate an empty hardhat.config.js\\nQuit\\n\")), mdx(\"p\", null, \"Select \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Create a sample project\")), mdx(\"p\", null, \"Our project's structure should look like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"MyWaffleProject\\n\\u251C\\u2500\\u2500 contracts\\n\\u2502   \\u2514\\u2500\\u2500 Greeter.sol\\n\\u251C\\u2500\\u2500 node_modules\\n\\u251C\\u2500\\u2500 scripts\\n\\u2502   \\u2514\\u2500\\u2500 sample-script.js\\n\\u251C\\u2500\\u2500 test\\n\\u2502   \\u2514\\u2500\\u2500 sample-test.js\\n\\u251C\\u2500\\u2500 .gitattributs\\n\\u251C\\u2500\\u2500 .gitignore\\n\\u251C\\u2500\\u2500 hardhat.config.js\\n\\u2514\\u2500\\u2500 package.json\\n\")), mdx(\"h3\", {\n    \"id\": \"now-lets-talk\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#now-lets-talk\",\n    \"aria-label\": \"now lets talk permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Now let's talk about some of these files:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Greeter.sol - our smart contract written in solidity;\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"contract Greeter {\\nstring greeting;\\n\\nconstructor(string memory _greeting) public {\\nconsole.log(\\\"Deploying a Greeter with greeting:\\\", _greeting);\\ngreeting = _greeting;\\n}\\n\\nfunction greet() public view returns (string memory) {\\nreturn greeting;\\n}\\n\\nfunction setGreeting(string memory _greeting) public {\\nconsole.log(\\\"Changing greeting from '%s' to '%s'\\\", greeting, _greeting);\\ngreeting = _greeting;\\n}\\n}\\n\")), mdx(\"p\", null, \"Our smart contract can be divided into three parts:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"constructor - where we declare a string type variable called \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"greeting\"), \",\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"function greet - a function that will return the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"greeting\"), \" when called,\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"function setGreeting - a function that allows us to change the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"greeting\"), \" value.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sample-test.js - our tests file\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"describe(\\\"Greeter\\\", function () {\\n  it(\\\"Should return the new greeting once it's changed\\\", async function () {\\n    const Greeter = await ethers.getContractFactory(\\\"Greeter\\\")\\n    const greeter = await Greeter.deploy(\\\"Hello, world!\\\")\\n\\n    await greeter.deployed()\\n    expect(await greeter.greet()).to.equal(\\\"Hello, world!\\\")\\n\\n    await greeter.setGreeting(\\\"Hola, mundo!\\\")\\n    expect(await greeter.greet()).to.equal(\\\"Hola, mundo!\\\")\\n  })\\n})\\n\")), mdx(\"h3\", {\n    \"id\": \"compiling-and-testing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#compiling-and-testing\",\n    \"aria-label\": \"compiling and testing permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Next step consists of compiling our contract and running tests:\"), mdx(\"p\", null, \"Waffle tests use Mocha (a test framework) with Chai (an assertion library). All you have to do is run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npx hardhat test\"), \" and wait for the following message to appear.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"\\u2713 Should return the new greeting once it's changed\\n\")), mdx(\"h3\", {\n    \"id\": \"adding-complexity\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#adding-complexity\",\n    \"aria-label\": \"adding complexity permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Everything looks great so far, let's add some more complexity to our project \", mdx(Emoji, {\n    text: \":slightly_smiling_face:\",\n    size: 1,\n    mdxType: \"Emoji\"\n  })), mdx(\"p\", null, \"Imagine a situation where someone adds an empty string as a greeting. It wouldn't be a warm greeting, right?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Let's make sure that doesn't happen:\"), mdx(\"p\", null, \"We want to use solidity's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"revert\"), \" when someone passes an empty string. A good thing is that we can easily test this functionality with Waffle's chai matcher \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"to.be.revertedWith()\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"it(\\\"Should revert when passing an empty string\\\", async () => {\\n  const Greeter = await ethers.getContractFactory(\\\"Greeter\\\")\\n  const greeter = await Greeter.deploy(\\\"Hello, world!\\\")\\n\\n  await greeter.deployed()\\n  await expect(greeter.setGreeting(\\\"\\\")).to.be.revertedWith(\\n    \\\"Greeting should not be empty\\\"\\n  )\\n})\\n\")), mdx(\"p\", null, \"Looks like our new test didn't pass:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"Deploying a Greeter with greeting: Hello, world!\\nChanging greeting from 'Hello, world!' to 'Hola, mundo!'\\n    \\u2713 Should return the new greeting once it's changed (1514ms)\\nDeploying a Greeter with greeting: Hello, world!\\nChanging greeting from 'Hello, world!' to ''\\n    1) Should revert when passing an empty string\\n\\n\\n  1 passing (2s)\\n  1 failing\\n\")), mdx(\"p\", null, \"Let's implement this functionality into our smart contract:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"require(bytes(_greeting).length > 0, \\\"Greeting should not be empty\\\");\\n\")), mdx(\"p\", null, \"Now, our setGreeting function looks like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"function setGreeting(string memory _greeting) public {\\nrequire(bytes(_greeting).length > 0, \\\"Greeting should not be empty\\\");\\nconsole.log(\\\"Changing greeting from '%s' to '%s'\\\", greeting, _greeting);\\ngreeting = _greeting;\\n}\\n\")), mdx(\"p\", null, \"Let's run tests again:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"\\u2713 Should return the new greeting once it's changed (1467ms)\\n\\u2713 Should revert when passing an empty string (276ms)\\n\\n2 passing (2s)\\n\")), mdx(\"p\", null, \"Congrats! You made it :)\"), mdx(\"h3\", {\n    \"id\": \"conclusion\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#conclusion\",\n    \"aria-label\": \"conclusion permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Conclusion\"), mdx(\"p\", null, \"We made a simple project with Waffle, Hardhat and ethers.js. We learned how to set up a project, add a test and implement new functionality.\"), mdx(\"p\", null, \"For more great chai matchers to test your smart contracts, check \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum-waffle.readthedocs.io/en/latest/matchers.html\"\n  }, \"official Waffle's docs\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#now-lets-talk-about-some-of-these-files-now-lets-talk","title":"Now let's talk about some of these files: {#now-lets-talk}"},{"url":"#next-step-consists-of-compiling-our-contract-and-running-tests-compiling-and-testing","title":"Next step consists of compiling our contract and running tests: {#compiling-and-testing}"},{"url":"#everything-looks-great-so-far-lets-add-some-more-complexity-to-our-project-emoji-textslightly_smiling_face-size1-adding-complexity","title":"Everything looks great so far, let's add some more complexity to our project <Emoji text=\":slightly_smiling_face:\" size={1}/> {#adding-complexity}"},{"url":"#conclusion-conclusion","title":"Conclusion {#conclusion}"}]}}},"pageContext":{"language":"pl","slug":"/pl/developers/tutorials/waffle-say-hello-world-with-hardhat-and-ethers/","ignoreTranslationBanner":false,"isLegal":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/tutorials/waffle-say-hello-world-with-hardhat-and-ethers/index.md","locale":"pl","hrefLang":"pl","originalPath":"/developers/tutorials/waffle-say-hello-world-with-hardhat-and-ethers/","dateFormat":"MM/DD/YYYY"}},"staticQueryHashes":["1239077767","3003422828","3280999885","446219633"],"slicesMap":{}}