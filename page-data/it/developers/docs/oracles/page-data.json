{"componentChunkName":"component---src-templates-docs-tsx","path":"/it/developers/docs/oracles/","result":{"data":{"siteData":{"siteMetadata":{"editContentUrl":"https://github.com/ethereum/ethereum-org-website/tree/dev/"}},"pageData":{"fields":{"slug":"/en/developers/docs/oracles/"},"frontmatter":{"title":"Oracles","description":"Oracles provide Ethereum smart contracts with access to real-world data, unlocking more use-cases and greater value for users.","lang":"en","incomplete":null,"sidebarDepth":null,"isOutdated":null,"hideEditButton":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Oracles\",\n  \"description\": \"Oracles provide Ethereum smart contracts with access to real-world data, unlocking more use-cases and greater value for users.\",\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Oracles are data feeds that bring data from off the blockchain (off-chain) data sources and puts it on the blockchain (on-chain) for smart contracts to use. This is necessary because smart contracts running on Ethereum cannot access information stored outside the blockchain network.\"), mdx(\"p\", null, \"Giving smart contracts the ability to execute using off-chain data inputs extends decentralized applications' value. For instance, decentralized prediction markets rely on oracles to provide information about outcomes with which they can validate user predictions. Suppose Alice bets 20 ETH on who will become the next U.S. President. In that case, the prediction-market dapp needs an oracle to confirm election results and determine if Alice is eligible for a payout.\"), mdx(\"h2\", {\n    \"id\": \"prerequisites\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Prerequisites\"), mdx(\"p\", null, \"This page assumes the reader is familiar with Ethereum fundamentals, including \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/nodes-and-clients/\"\n  }, \"nodes\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/consensus-mechanisms/\"\n  }, \"consensus mechanisms\"), \", and the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/evm/\"\n  }, \"EVM\"), \". You should also have a good grasp of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/smart-contracts/\"\n  }, \"smart contracts\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/smart-contracts/anatomy/\"\n  }, \"smart contract anatomy\"), \", especially \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/glossary/#events\"\n  }, \"events\"), \".\"), mdx(\"h2\", {\n    \"id\": \"what-is-a-blockchain-oracle\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#what-is-a-blockchain-oracle\",\n    \"aria-label\": \"what is a blockchain oracle permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"What is a blockchain oracle?\"), mdx(\"p\", null, \"Oracles are applications that source, verify, and transmit external information (i.e. information stored off-chain) to smart contracts running on the blockchain. Besides \\u201Cpulling\\u201D off-chain data and broadcasting it on Ethereum, oracles can also \\u201Cpush\\u201D information from the blockchain to external systems. An example of the latter could be an oracle that unlocks a smart lock once the user sends the fee via an Ethereum transaction.\"), mdx(\"p\", null, \"Oracles act as a \\u201Cbridge\\u201D connecting smart contracts on blockchains to off-chain data providers. Without oracles, smart contract applications would only be able to access on-chain data. An oracle provides a mechanism for triggering smart contract functions using off-chain data.\"), mdx(\"p\", null, \"Oracles differ based on the source of data (one or multiple sources), trust models (centralized or decentralized), and system architecture (immediate-read, publish-subscribe, and request-response). We can also distinguish between oracles based on whether they retrieve external data for use by on-chain contracts (input oracles), send information from the blockchain to the off-chain applications (output oracles), or perform computational tasks off-chain (computational oracles).\"), mdx(\"h2\", {\n    \"id\": \"why-do-smart-contracts-need-oracles\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#why-do-smart-contracts-need-oracles\",\n    \"aria-label\": \"why do smart contracts need oracles permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Why do smart contracts need oracles?\"), mdx(\"p\", null, \"Most developers see smart contracts as simply pieces of code running at specific addresses on the blockchain. However, a more \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/smart-contracts/\"\n  }, \"general view of smart contracts\"), \" is that they are self-executing software programs capable of enforcing agreements between parties once specific conditions are met\\u2014which explains the term, \\u201Csmart contracts.\\u201D\"), mdx(\"p\", null, \"But using smart contracts to enforce agreements between people isn't straightforward, given that Ethereum is deterministic. A \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Deterministic_algorithm\"\n  }, \"deterministic system\"), \" is one that always produces the same results given an initial state and a particular input\\u2014there is no randomness or variation in the process of computing outputs from inputs.\"), mdx(\"p\", null, \"To achieve deterministic execution, blockchains limit nodes to reaching consensus on simple binary (true/false) questions using \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"only\"), \" data stored on the blockchain itself. Examples of such questions include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u201CDid the account owner (identified by a public key) sign this transaction with the paired private key?\\u201D\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u201CDoes this account have enough funds to cover the transaction?\\u201D\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u201CIs this transaction valid in the context of this smart contract?\\u201D, etc.\")), mdx(\"p\", null, \"If blockchains received information from external sources (i.e., from the real world), determinism would be impossible to achieve, preventing nodes from agreeing on the validity of changes to the blockchain\\u2019s state. Take for example a smart contract that executes a transaction based on the current ETH-USD exchange rate obtained from a traditional price API. This figure would likely change frequently (not to mention that the API could get deprecated or hacked), meaning nodes executing the same contract code would arrive at different results.\"), mdx(\"p\", null, \"For a public blockchain, like Ethereum, with thousands of nodes around the world processing transactions, determinism is critical. With no central authority serving as a source of truth, it is expected that nodes should arrive at the same state after applying the same transactions. A case whereby node A executes a smart contract\\u2019s code and gets \\\"3\\\" as a result, while node B gets \\\"7\\\" after running the same transaction would cause consensus to break down and eliminate Ethereum\\u2019s value as a decentralized computing platform.\"), mdx(\"p\", null, \"The scenario described earlier also highlights the problem with designing blockchains to pull information from external sources. Oracles, however, solve this problem by taking information from off-chain sources and storing it on the blockchain for smart contracts to consume. Since information stored on-chain is unalterable and publicly available, Ethereum nodes can safely use the oracle imported off-chain data to compute state changes without breaking consensus.\"), mdx(\"p\", null, \"To do this, an oracle is typically made up of a smart contract running on-chain and some off-chain components. The on-chain contract receives requests for data from other smart contracts, which it passes to the off-chain component (called an oracle node). This oracle node can query data sources\\u2014using application programming interfaces (APIs), for example\\u2014and send transactions to store the requested data in the smart contract's storage.\"), mdx(\"p\", null, \"Essentially, a blockchain oracle bridges the information gap between the blockchain and the external environment, creating \\u201Chybrid smart contracts\\u201D. A hybrid smart contract is one that functions based on a combination of on-chain contract code and off-chain infrastructure. Decentralized prediction markets, described in the introduction, are an excellent example of hybrid smart contracts. Other examples might include crop insurance smart contracts that pay out when a set of oracles determine that certain weather phenomena have taken place.\"), mdx(\"h2\", {\n    \"id\": \"the-oracle-problem\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#the-oracle-problem\",\n    \"aria-label\": \"the oracle problem permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"What is the oracle problem?\"), mdx(\"p\", null, \"It is easy to give smart contracts access to off-chain data by relying on an entity (or multiple entities) to introduce extrinsic information to the blockchain by storing it in the data payload of a transaction. But this brings up new problems:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"How do we verify that the injected information was extracted from the correct source or hasn\\u2019t been tampered with?\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"How do we ensure that this data is always available and updated regularly?\"))), mdx(\"p\", null, \"The so-called \\u201Coracle problem\\u201D demonstrates the issues that come with using blockchain oracles to send inputs to smart contracts. It is critical to make sure that data from an oracle is correct or smart contract execution will produce erroneous results. Also important is the need for trustlessness\\u2014having to \\u2018trust\\u2019 oracle operators to reliably provide accurate information robs smart contracts of their most defining qualities.\"), mdx(\"p\", null, \"Different oracles differ in their approach to solving the oracle problem, and we explore these approaches later. While no oracle is perfect, an oracle\\u2019s merits should be measured based on how it handles the following challenges:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Correctness\"), \": An oracle should not cause smart contracts to trigger state changes based on invalid off-chain data. For this reason, an oracle must guarantee \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"authenticity\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"integrity\"), \" of data\\u2014authenticity means the data was gotten from the correct source, while integrity means the data remained intact (i.e., it wasn\\u2019t altered) before being sent on-chain.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Availability\"), \": An oracle should not delay or prevent smart contracts from executing actions and triggering state changes. This quality requires that data from an oracle be \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"available on request\"), \" without interruption.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Incentive compatibility\"), \": An oracle should incentivize off-chain data providers to submit correct information to smart contracts. Incentive compatibility involves \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"attributability\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"accountability\"), \". Attributability allows for correlating a piece of external information to its provider, while accountability bonds data providers to the information they give, such that they can be rewarded or penalized based on the quality of information provided.\"))), mdx(\"h2\", {\n    \"id\": \"how-does-a-blockchain-oracle-service-work\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#how-does-a-blockchain-oracle-service-work\",\n    \"aria-label\": \"how does a blockchain oracle service work permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"How does a blockchain oracle service work?\"), mdx(\"h3\", {\n    \"id\": \"users\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#users\",\n    \"aria-label\": \"users permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Users\"), mdx(\"p\", null, \"Users are entities (i.e., smart contracts) that need information external to the blockchain to complete specific actions. The basic workflow of an oracle service starts with the user sending a data request to the oracle contract. Data requests will usually answer some or all of the following questions:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"What sources can off-chain nodes consult for the requested information?\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"How do reporters process information from data sources and extract useful data points?\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"How many oracle nodes can participate in retrieving the data?\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"How should discrepancies in oracle reports be managed?\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"What method should be implemented in filtering submissions and aggregating reports into a single value?\"))), mdx(\"h3\", {\n    \"id\": \"oracle-contract\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#oracle-contract\",\n    \"aria-label\": \"oracle contract permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Oracle contract\"), mdx(\"p\", null, \"The oracle contract is the on-chain component for the oracle service: it listens for data requests from other contracts, relays data queries to oracle nodes, and broadcasts returned data to client contracts. This contract may also perform some computation on the returned data points to produce an aggregate value that it sends to the requesting contract.\"), mdx(\"p\", null, \"The oracle contract exposes some functions which client contracts call when making a data request. Upon receiving a new query, the smart contract will emit a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/developers/docs/smart-contracts/anatomy/#events-and-logs\"\n  }, \"log event\"), \" with details of the data request. This notifies off-chain nodes subscribed to the log (usually using something like the JSON-RPC \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"eth_subscribe\"), \" command), who proceed to retrieve data defined in the log event.\"), mdx(\"p\", null, \"Below is an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://medium.com/@pedrodc/implementing-a-blockchain-oracle-on-ethereum-cedc7e26b49e\"\n  }, \"example oracle contract\"), \" by Pedro Costa. This is a simple oracle service that can query off-chain APIs upon request by other smart contracts and store the requested information on the blockchain:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity >=0.4.21 <0.6.0;\\n\\ncontract Oracle {\\n  Request[] requests; //list of requests made to the contract\\n  uint currentId = 0; //increasing request id\\n  uint minQuorum = 2; //minimum number of responses to receive before declaring final result\\n  uint totalOracleCount = 3; // Hardcoded oracle count\\n\\n  // defines a general api request\\n  struct Request {\\n    uint id;                            //request id\\n    string urlToQuery;                  //API url\\n    string attributeToFetch;            //json attribute (key) to retrieve in the response\\n    string agreedValue;                 //value from key\\n    mapping(uint => string) answers;     //answers provided by the oracles\\n    mapping(address => uint) quorum;    //oracles which will query the answer (1=oracle hasn't voted, 2=oracle has voted)\\n  }\\n\\n  //event that triggers oracle outside of the blockchain\\n  event NewRequest (\\n    uint id,\\n    string urlToQuery,\\n    string attributeToFetch\\n  );\\n\\n  //triggered when there's a consensus on the final result\\n  event UpdatedRequest (\\n    uint id,\\n    string urlToQuery,\\n    string attributeToFetch,\\n    string agreedValue\\n  );\\n\\n  function createRequest (\\n    string memory _urlToQuery,\\n    string memory _attributeToFetch\\n  )\\n  public\\n  {\\n    uint length = requests.push(Request(currentId, _urlToQuery, _attributeToFetch, \\\"\\\"));\\n    Request storage r = requests[length-1];\\n\\n    // Hardcoded oracles address\\n    r.quorum[address(0x6c2339b46F41a06f09CA0051ddAD54D1e582bA77)] = 1;\\n    r.quorum[address(0xb5346CF224c02186606e5f89EACC21eC25398077)] = 1;\\n    r.quorum[address(0xa2997F1CA363D11a0a35bB1Ac0Ff7849bc13e914)] = 1;\\n\\n    // launch an event to be detected by oracle outside of blockchain\\n    emit NewRequest (\\n      currentId,\\n      _urlToQuery,\\n      _attributeToFetch\\n    );\\n\\n    // increase request id\\n    currentId++;\\n  }\\n\\n  //called by the oracle to record its answer\\n  function updateRequest (\\n    uint _id,\\n    string memory _valueRetrieved\\n  ) public {\\n\\n    Request storage currRequest = requests[_id];\\n\\n    //check if oracle is in the list of trusted oracles\\n    //and if the oracle hasn't voted yet\\n    if(currRequest.quorum[address(msg.sender)] == 1){\\n\\n      //marking that this address has voted\\n      currRequest.quorum[msg.sender] = 2;\\n\\n      //iterate through \\\"array\\\" of answers until a position if free and save the retrieved value\\n      uint tmpI = 0;\\n      bool found = false;\\n      while(!found) {\\n        //find first empty slot\\n        if(bytes(currRequest.answers[tmpI]).length == 0){\\n          found = true;\\n          currRequest.answers[tmpI] = _valueRetrieved;\\n        }\\n        tmpI++;\\n      }\\n\\n      uint currentQuorum = 0;\\n\\n      //iterate through oracle list and check if enough oracles(minimum quorum)\\n      //have voted the same answer has the current one\\n      for(uint i = 0; i < totalOracleCount; i++){\\n        bytes memory a = bytes(currRequest.answers[i]);\\n        bytes memory b = bytes(_valueRetrieved);\\n\\n        if(keccak256(a) == keccak256(b)){\\n          currentQuorum++;\\n          if(currentQuorum >= minQuorum){\\n            currRequest.agreedValue = _valueRetrieved;\\n            emit UpdatedRequest (\\n              currRequest.id,\\n              currRequest.urlToQuery,\\n              currRequest.attributeToFetch,\\n              currRequest.agreedValue\\n            );\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"oracle-nodes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#oracle-nodes\",\n    \"aria-label\": \"oracle nodes permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Oracle nodes\"), mdx(\"p\", null, \"The oracle node is the off-chain component of the oracle service: it extracts information from external sources, such as APIs hosted on third-party servers, and puts it on-chain for consumption by smart contracts. Oracle nodes listen for events from the on-chain oracle contract and proceed to complete the task described in the log.\"), mdx(\"p\", null, \"A common task for oracle nodes is sending a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.w3schools.com/tags/ref_httpmethods.asp\"\n  }, \"HTTP GET\"), \" request to an API service, parsing the response to extract relevant data, formatting into a blockchain-readable output, and sending it on-chain by including it in a transaction to the oracle contract. The oracle node may also be required to attest to the validity and integrity of submitted information using \\u201Cauthenticity proofs\\u201D, which we explore later.\"), mdx(\"p\", null, \"Computational oracles also rely on off-chain nodes to perform intensive computational tasks, which would be impractical to execute on-chain, given gas costs and block size limits. For example, the oracle node may be tasked with generating a verifiably random figure (e.g., for blockchain-based games).\"), mdx(\"h2\", {\n    \"id\": \"oracle-design-patterns\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#oracle-design-patterns\",\n    \"aria-label\": \"oracle design patterns permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Oracle design patterns\"), mdx(\"p\", null, \"Oracles come in different types, including \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"immediate-read\"), \", \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"publish-subscribe\"), \", and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"request-response\"), \", with the latter two being the most popular among Ethereum smart contracts. Below is a brief description of the two types of oracle services:\"), mdx(\"h3\", {\n    \"id\": \"publish-subscribe-oracles\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#publish-subscribe-oracles\",\n    \"aria-label\": \"publish subscribe oracles permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Publish-subscribe oracles\"), mdx(\"p\", null, \"An oracle service based on a publish-subscribe mechanism exposes a \\u201Cdata feed\\u201D which other contracts can regularly read for information. The data in this case is expected to change frequently, so client contracts must listen for updates to the data in the oracle\\u2019s storage. An excellent example is an oracle that provides information on the latest ETH-USD price to users.\"), mdx(\"h3\", {\n    \"id\": \"request-response-oracles\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#request-response-oracles\",\n    \"aria-label\": \"request response oracles permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Request-response oracles\"), mdx(\"p\", null, \"A request-response setup allows the client contract to request arbitrary data other than that provided by a publish-subscribe oracle. Request-response oracles are ideal in the following conditions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The dataset is too large to be stored in a smart contract\\u2019s storage\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Users will only need a small part of the data at any point in time\"))), mdx(\"p\", null, \"Although more complex than publish-subscribe models, request-response oracles are basically what we described in the previous section. The oracle will have an on-chain component that receives a data request and passes it to an off-chain node for processing.\"), mdx(\"p\", null, \"Users initiating data queries must cover the cost of retrieving information from the off-chain source. The client contract must also provide funds to cover gas costs incurred by the oracle contract in returning the response via the callback function specified in the request.\"), mdx(\"h2\", {\n    \"id\": \"types-of-oracles\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#types-of-oracles\",\n    \"aria-label\": \"types of oracles permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Types of oracles\"), mdx(\"h3\", {\n    \"id\": \"centralized-oracles\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#centralized-oracles\",\n    \"aria-label\": \"centralized oracles permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Centralized oracles\"), mdx(\"p\", null, \"A centralized oracle is controlled by a single entity responsible for aggregating off-chain information and updating the oracle contract's data as requested. Centralized oracles are efficient since they rely on a single source of truth. They might even be preferable in cases where proprietary datasets are published directly by the owner with a widely accepted signature. However, using a centralized oracle comes with various problems.\"), mdx(\"h4\", {\n    \"id\": \"low-correctness-guarantees\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#low-correctness-guarantees\",\n    \"aria-label\": \"low correctness guarantees permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Low correctness guarantees\"), mdx(\"p\", null, \"With centralized oracles, there's no way to confirm if the information provided is correct or not. The oracle provider may be \\\"reputable\\\", but that doesn't eliminate the possibility of someone going rogue or a hacker tampering with the system. If the oracle becomes corrupt, smart contracts will execute based on bad data.\"), mdx(\"h4\", {\n    \"id\": \"poor-availability\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#poor-availability\",\n    \"aria-label\": \"poor availability permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Poor availability\"), mdx(\"p\", null, \"Centralized oracles aren't guaranteed to always make off-chain data available to other smart contracts. If the provider decides to turn off the service or a hacker hijacks the oracle's off-chain component, your smart contract is at risk of a denial of service (DoS) attack.\"), mdx(\"h4\", {\n    \"id\": \"poor-incentive-compatibility\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#poor-incentive-compatibility\",\n    \"aria-label\": \"poor incentive compatibility permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Poor incentive compatibility\"), mdx(\"p\", null, \"Centralized oracles often have poorly designed or non-existent incentives for the data provider to send accurate/unaltered information. Paying the oracle for their services may encourage honest behavior, but this may not be enough. With smart contracts controlling enormous amounts of value, the payoff from manipulating oracle data is greater than ever.\"), mdx(\"h3\", {\n    \"id\": \"decentralized-oracles\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#decentralized-oracles\",\n    \"aria-label\": \"decentralized oracles permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Decentralized oracles\"), mdx(\"p\", null, \"Decentralized oracles are designed to overcome the limitations of centralized oracles by eliminating single points of failure. A decentralized oracle service comprises multiple participants in a peer-to-peer network that form consensus on off-chain data before sending it to a smart contract.\"), mdx(\"p\", null, \"A decentralized oracle should (ideally) be permissionless, trustless, and free from administration by a central party; in reality, decentralization among oracles is on a spectrum. There are semi-decentralized oracle networks where anyone can participate, but with an \\u201Cowner\\u201D that approves and removes nodes based on historical performance. Fully decentralized oracle networks also exist: these usually run as standalone blockchains and have defined consensus mechanisms for coordinating nodes and punishing misbehavior.\"), mdx(\"p\", null, \"Using decentralized oracles comes with the following benefits:\"), mdx(\"h3\", {\n    \"id\": \"high-correctness-guarantees\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#high-correctness-guarantees\",\n    \"aria-label\": \"high correctness guarantees permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"High correctness guarantees\"), mdx(\"p\", null, \"Decentralized oracles attempt to achieve correctness of data using different approaches. This includes using proofs attesting to the authenticity and integrity of the returned information and requiring multiple entities to collectively agree on the validity of off-chain data.\"), mdx(\"h4\", {\n    \"id\": \"authenticity-proofs\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#authenticity-proofs\",\n    \"aria-label\": \"authenticity proofs permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Authenticity proofs\"), mdx(\"p\", null, \"Authenticity proofs are cryptographic mechanisms that enable independent verification of information retrieved from external sources. These proofs can validate the source of the information and detect possible alterations to the data after retrieval.\"), mdx(\"p\", null, \"Examples of authenticity proofs include:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Transport Layer Security (TLS) proofs\"), \": Oracle nodes often retrieve data from external sources using a secure HTTP connection based on the Transport Layer Security (TLS) protocol. Some decentralized oracles use authenticity proofs to verify TLS sessions (i.e., confirm the exchange of information between a node and a specific server) and confirm that the contents of the session were not altered.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Trusted Execution Environment (TEE) attestations\"), \": A \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Trusted_execution_environment\"\n  }, \"trusted execution environment\"), \" (TEE) is a sandboxed computational environment that is isolated from the operational processes of its host system. TEEs ensure that whatever application code or data stored/used in the computation environment retains integrity, confidentiality, and immutability. Users can also generate an attestation to prove an application instance is running within the trusted execution environment.\"), mdx(\"p\", null, \"Certain classes of decentralized oracles require oracle node operators to provide TEE attestations. This confirms to a user that the node operator is running an instance of oracle client in a trusted execution environment. TEEs prevent external processes from altering or reading an application\\u2019s code and data, hence, those attestations prove that the oracle node has kept the information intact and confidential.\"), mdx(\"h4\", {\n    \"id\": \"consensus-based-validation-of-information\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#consensus-based-validation-of-information\",\n    \"aria-label\": \"consensus based validation of information permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Consensus-based validation of information\"), mdx(\"p\", null, \"Centralized oracles rely on a single source of truth when providing data to smart contracts, which introduces the possibility of publishing inaccurate information. Decentralized oracles solve this problem by relying on multiple oracle nodes to query off-chain information. By comparing data from multiple sources, decentralized oracles reduce the risk of passing invalid information to on-chain contracts.\"), mdx(\"p\", null, \"Decentralized oracles, however, must deal with discrepancies in information retrieved from multiple off-chain sources. To minimize differences in information and ensure the data passed to the oracle contract reflects the collective opinion of oracle nodes, decentralized oracles use the following mechanisms:\"), mdx(\"h5\", null, \"Voting/staking on accuracy of data\"), mdx(\"p\", null, \"Some decentralized oracle networks require participants to vote or stake on the accuracy of answers to data queries (e.g., \\\"Who won the 2020 US election?\\\") using the network\\u2019s native token. An aggregation protocol then aggregates the votes and stakes and takes the answer supported by the majority as the valid one.\"), mdx(\"p\", null, \"Nodes whose answers deviate from the majority answer are penalized by having their tokens distributed to others who provide more correct values. Forcing nodes to provide a bond before providing data incentivizes honest responses since they are assumed to be rational economic actors intent on maximizing returns.\"), mdx(\"p\", null, \"Staking/voting also protects decentralized oracles from \\u201CSybil attacks\\u201D where malicious actors create multiple identities to game the consensus system. However, staking cannot prevent \\u201Cfreeloading\\u201D (oracle nodes copying information from others) and \\u201Clazy validation\\u201D (oracle nodes following the majority without verifying the information themselves).\"), mdx(\"h5\", null, \"Schelling point mechanisms\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Focal_point_(game_theory)\"\n  }, \"Schelling point\"), \" is a game-theory concept that assumes multiple entities will always default to a common solution to a problem in absence of any communication. Schelling-point mechanisms are often used in decentralized oracle networks to enable nodes reach consensus on answers to data requests.\"), mdx(\"p\", null, \"An early example is \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.ethereum.org/2014/03/28/schellingcoin-a-minimal-trust-universal-data-feed/\"\n  }, \"SchellingCoin\"), \", a proposed data feed where participants submit responses to \\\"scalar\\\" questions (questions whose answers are described by magnitude, e.g., \\\"what is the price of ETH?\\\", along with a deposit. Users who provide values between the 25th and 75th \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Percentile\"\n  }, \"percentile\"), \" are rewarded, while those whose values deviate largely from the median value are penalized.\"), mdx(\"p\", null, \"While SchellingCoin doesn\\u2019t exist today, a number of decentralized oracles\\u2014notably \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.makerdao.com/smart-contract-modules/oracle-module\"\n  }, \"Maker Protocol\\u2019s Oracles\"), \"\\u2014use the schelling-point mechanism to improve accuracy of oracle data. Each Maker Oracle consists of an off-chain P2P network of nodes (\\\"relayers\\\" and \\\"feeds\\\") who submit market prices for collateral assets and an on-chain \\u201CMedianizer\\u201D contract that calculates the median of all provided values. Once the specified delay period is over, this median value becomes the new reference price for the associated asset.\"), mdx(\"p\", null, \"Other examples of oracles that use Schelling point mechanisms include \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.chain.link/docs/off-chain-reporting/\"\n  }, \"Chainlink Off-Chain Reporting\"), \" and Witnet. In both systems, responses from oracle nodes in the peer-to-peer network are aggregated into a single aggregate value, such as a mean or median. Nodes are rewarded or punished according to the extent to which their responses align with or deviate from the aggregate value.\"), mdx(\"p\", null, \"Schelling point mechanisms are attractive because they minimize on-chain footprint (only one transaction needs to be sent) while guaranteeing decentralization. The latter is possible because nodes must sign off on the list of submitted responses before it is fed into the algorithm that produces the mean/median value.\"), mdx(\"h3\", {\n    \"id\": \"availability\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#availability\",\n    \"aria-label\": \"availability permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Availability\"), mdx(\"p\", null, \"Decentralized oracle services ensure high availability of off-chain data to smart contracts. This is achieved by decentralizing both the source of off-chain information and nodes responsible for transferring the information on-chain.\"), mdx(\"p\", null, \"This ensures fault-tolerance since the oracle contract can rely on multiple nodes (who also rely on multiple data sources) to execute queries from other contracts. Decentralization at the source \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"and\"), \" node-operator level is crucial\\u2014a network of oracle nodes serving information retrieved from the same source will run into the same problem as a centralized oracle.\"), mdx(\"p\", null, \"It is also possible for stake-based oracles can slash node operators who fail to respond quickly to data requests. This significantly incentivizes oracle nodes to invest in fault-tolerant infrastructure and provide data in timely fashion.\"), mdx(\"h3\", {\n    \"id\": \"good-incentive-compatibility\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#good-incentive-compatibility\",\n    \"aria-label\": \"good incentive compatibility permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Good incentive compatibility\"), mdx(\"p\", null, \"Decentralized oracles implement various incentive designs to prevent \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Byzantine_fault\"\n  }, \"Byzantine\"), \" behavior among oracle nodes. Specifically, they achieve \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"attributability\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"accountability\"), \":\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Decentralized oracle nodes are often required to sign the data they provide in response to data requests. This information helps with evaluating the historical performance of oracle nodes, such that users can filter out unreliable oracle nodes when making data requests. An example is Chainlink\\u2019s \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://oracle.reputation.link/\"\n  }, \"Oracle Reputation\"), \" or Witnet\\u2019s \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.witnet.io/intro/about/architecture#algorithmic-reputation-system\"\n  }, \"Algorithmic Reputation System\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Decentralized oracles\\u2014as explained earlier\\u2014may require nodes to place a stake on their confidence in the truth of data they submit. If the claim checks out, this stake can be returned along with rewards for honest service. But it can also be slashed in case the information is incorrect, which provides some measure of accountability.\"))), mdx(\"h2\", {\n    \"id\": \"applications-of-oracles-in-smart-contracts\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#applications-of-oracles-in-smart-contracts\",\n    \"aria-label\": \"applications of oracles in smart contracts permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Applications of oracles in smart contracts\"), mdx(\"p\", null, \"The following are common use-cases for oracles in Ethereum:\"), mdx(\"h3\", {\n    \"id\": \"retrieving-financial-data\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#retrieving-financial-data\",\n    \"aria-label\": \"retrieving financial data permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Retrieving financial data\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/defi/\"\n  }, \"Decentralized finance\"), \" (DeFi) applications allow for peer-to-peer lending, borrowing, and trading of assets. This often requires getting different financial-related information, including exchange rate data (for calculating the fiat value of cryptocurrencies or comparing prices of two tokens) and capital markets data (for calculating the value of tokenized assets, such as gold or the US dollar).\"), mdx(\"p\", null, \"If you plan to build a DeFi lending protocol, for example, you\\u2019ll need to query current market prices for assets (e.g., ETH) deposited as collateral. This is so your smart contract can determine the value of collateral assets and determine how much they can borrow from the system.\"), mdx(\"p\", null, \"Popular \\u201Cprice oracles\\u201D (as they are often called) in DeFi include Chainlink Price Feeds, Compound Protocol\\u2019s \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://compound.finance/docs/prices\"\n  }, \"Open Price Feed\"), \", Uniswap\\u2019s \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.uniswap.org/protocol/V2/concepts/core-concepts/oracles\"\n  }, \"Time-Weighted Average Prices (TWAPs)\"), \", and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.makerdao.com/smart-contract-modules/oracle-module\"\n  }, \"Maker Oracles\"), \". It is advisable to understand the caveats that come with these price oracles before integrating them into your project. This \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.openzeppelin.com/secure-smart-contract-guidelines-the-dangers-of-price-oracles/\"\n  }, \"article\"), \" provides a detailed analysis of what to consider when planning to use any of the price oracles mentioned.\"), mdx(\"p\", null, \"Below is an example of how you can retrieve the latest ETH price in your smart contract using a Chainlink price feed:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-solidity\"\n  }, \"pragma solidity ^0.6.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract PriceConsumerV3 {\\n\\n    AggregatorV3Interface internal priceFeed;\\n\\n    /**\\n     * Network: Kovan\\n     * Aggregator: ETH/USD\\n     * Address: 0x9326BFA02ADD2366b30bacB125260Af641031331\\n     */\\n    constructor() public {\\n        priceFeed = AggregatorV3Interface(0x9326BFA02ADD2366b30bacB125260Af641031331);\\n    }\\n\\n    /**\\n     * Returns the latest price\\n     */\\n    function getLatestPrice() public view returns (int) {\\n        (\\n            uint80 roundID,\\n            int price,\\n            uint startedAt,\\n            uint timeStamp,\\n            uint80 answeredInRound\\n        ) = priceFeed.latestRoundData();\\n        return price;\\n    }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"generating-verifiable-randomness\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#generating-verifiable-randomness\",\n    \"aria-label\": \"generating verifiable randomness permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Generating verifiable randomness\"), mdx(\"p\", null, \"Certain blockchain applications, such as blockchain-based games or lottery schemes, require a high level of unpredictability and randomness to work effectively. However, the deterministic execution of blockchains eliminates any source of randomness.\"), mdx(\"p\", null, \"The usual approach is to use pseudorandom cryptographic functions, such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blockhash\"), \", but this is amenable to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ethereum.stackexchange.com/questions/3140/risk-of-using-blockhash-other-miners-preventing-attack#:~:text=So%20while%20the%20miners%20can,to%20one%20of%20the%20players.\"\n  }, \"manipulation by other actors\"), \", namely miners solving the proof-of-work algorithm. Also, Ethereum\\u2019s \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/upgrades/merge/\"\n  }, \"switch to proof-of-stake\"), \" means developers can no longer rely on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blockhash\"), \" for on-chain randomness (the Beacon Chain\\u2019s \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eth2book.info/altair/part2/building_blocks/randomness\"\n  }, \"RANDAO mechanism\"), \" provides an alternative source of randomness, though).\"), mdx(\"p\", null, \"It is possible to generate the random value off-chain and send it on-chain, but doing so imposes high trust requirements on users. They must believe the value was truly generated via unpredictable mechanisms and wasn\\u2019t altered in transit.\"), mdx(\"p\", null, \"Oracles designed for off-chain computation solve this problem by securely generating random outcomes off-chain that they broadcast on-chain along with cryptographic proofs attesting to the unpredictability of the process. An example is \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.chain.link/docs/chainlink-vrf/\"\n  }, \"Chainlink VRF\"), \" (Verifiable Random Function), which is a provably fair and tamper-proof random number generator (RNG) useful for building reliable smart contracts for applications that rely on unpredictable outcomes.\"), mdx(\"h3\", {\n    \"id\": \"getting-outcomes-for-events\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#getting-outcomes-for-events\",\n    \"aria-label\": \"getting outcomes for events permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Getting outcomes for events\"), mdx(\"p\", null, \"With oracles, creating smart contracts that respond to real-world events is easy. Oracle services make this possible by allowing contracts to connect to external APIs through off-chain components and consume information from those data sources. For example, the prediction dapp mentioned earlier may request an oracle to return election results from a trusted off-chain source (e.g., the Associated Press).\"), mdx(\"p\", null, \"Using oracles to retrieve data based on real-world outcomes enables other novel use-cases, including decentralized insurance applications. A insurance smart contract that pays users will need accurate information (e.g., weather data, disaster reports, etc.) to work effectively.\"), mdx(\"h3\", {\n    \"id\": \"automating-smart-contracts\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#automating-smart-contracts\",\n    \"aria-label\": \"automating smart contracts permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Automating smart contracts\"), mdx(\"p\", null, \"Contrary to popular descriptions, smart contracts don\\u2019t run automatically\\u2014an externally owned account (EOA), or another contract account, must trigger the right functions to execute the contract\\u2019s code. In most cases, the bulk of the contract\\u2019s functions are public and can be invoked by EOAs and other contracts.\"), mdx(\"p\", null, \"But there are also \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"private functions\"), \" within a contract that are inaccessible to others; these are usually critical to the overall functionality of the dapp. Potential examples include a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mintERC721Token()\"), \" function that periodically mints new NFTs for users, a function for awarding payouts in a prediction market, or a function for unlocking staked tokens in a DEX.\"), mdx(\"p\", null, \"Developers will need to trigger such functions at intervals to keep the application running smoothly. However, this might lead to more hours lost on mundane tasks for developers, which is why automating execution of smart contracts is attractive.\"), mdx(\"p\", null, \"Some decentralized oracle networks offer automation services, which allow off-chain oracle nodes to trigger smart contract functions according to parameters defined by the user. Typically, this requires \\u201Cregistering\\u201D the target contract with the oracle service, providing funds to pay the oracle operator, and specifying the conditions or times to trigger the contract.\"), mdx(\"p\", null, \"An example is Chainlink\\u2019s \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://chain.link/keepers\"\n  }, \"Keeper Network\"), \", which provides options for smart contracts to outsource regular maintenance tasks in a trust minimized and decentralized manner. Read the official \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.chain.link/docs/chainlink-keepers/introduction/\"\n  }, \"Keepers documentation\"), \" for information on making your contract Keeper-compatible and using the Upkeep service.\"), mdx(\"h2\", {\n    \"id\": \"use-blockchain-oracles\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#use-blockchain-oracles\",\n    \"aria-label\": \"use blockchain oracles permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Use blockchain oracles\"), mdx(\"p\", null, \"There are multiple oracle applications you can integrate into your Ethereum dapp:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://chain.link/\"\n  }, \"Chainlink\")), \" - \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Chainlink decentralized oracle networks provide tamper-proof inputs, outputs, and computations to support advanced smart contracts on any blockchain.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://witnet.io/\"\n  }, \"Witnet\")), \" - \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Witnet is a permissionless, decentralized, and censorship-resistant oracle helping smart contracts to react to real world events with strong crypto-economic guarantees.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://umaproject.org/products/optimistic-oracle\"\n  }, \"UMA Oracle\")), \" - \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"UMA's optimistic oracle allows smart contracts to quickly and receive any kind of data for different applications, including insurance, financial derivatives, and prediction market.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://tellor.io/\"\n  }, \"Tellor\")), \" - \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Tellor is a transparent and permissionless oracle protocol for your smart contract to easily get any data whenever it needs it.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://bandprotocol.com/\"\n  }, \"Band Protocol\")), \" - \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Band Protocol is a cross-chain data oracle platform that aggregates and connects real-world data and APIs to smart contracts.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://provable.xyz/\"\n  }, \"Provable\")), \" - \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Provable connects blockchain dapps with any external Web API and leverages TLSNotary proofs, Trusted Execution Environments (TEEs), and secure cryptographic primitives to guarantee data authenticity.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://paralink.network/\"\n  }, \"Paralink\")), \" - \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Paralink provides an open source and decentralized oracle platform for smart contracts running on Ethereum and other popular blockchains.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://dos.network/\"\n  }, \"Dos.Network\")), \" - \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"DOS Network is a decentralized oracle service network to boost blockchain usability with real-world data and computation power.\")), mdx(\"h2\", {\n    \"id\": \"further-reading\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#further-reading\",\n    \"aria-label\": \"further reading permalink\",\n    \"className\": \"header-anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Further reading\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Articles\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://chain.link/education/blockchain-oracles\"\n  }, \"What Is a Blockchain Oracle?\"), \" \\u2014 \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Chainlink\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://betterprogramming.pub/what-is-a-blockchain-oracle-f5ccab8dbd72\"\n  }, \"What is a Blockchain Oracle?\"), \" \\u2014 \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Patrick Collins\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://medium.com/fabric-ventures/decentralised-oracles-a-comprehensive-overview-d3168b9a8841\"\n  }, \"Decentralised Oracles: a comprehensive overview\"), \" \\u2014 \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Julien Thevenard\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://medium.com/@pedrodc/implementing-a-blockchain-oracle-on-ethereum-cedc7e26b49e\"\n  }, \"Implementing a Blockchain Oracle on Ethereum\"), \" \\u2013 \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Pedro Costa\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ethereum.stackexchange.com/questions/301/why-cant-contracts-make-api-calls\"\n  }, \"Why can't smart contracts make API calls?\"), \" \\u2014 \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"StackExchange\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://newsletter.banklesshq.com/p/why-we-need-decentralized-oracles\"\n  }, \"Why we need decentralized oracles\"), \" \\u2014 \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Bankless\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://samczsun.com/so-you-want-to-use-a-price-oracle/\"\n  }, \"So you want to use a price oracle\"), \" \\u2014 \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"samczsun\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Videos\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://youtu.be/BVUZpWa8vpw\"\n  }, \"Oracles and the Expansion of Blockchain Utility\"), \" \\u2014 \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Real Vision Finance\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tutorials\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://blog.chain.link/fetch-current-crypto-price-data-solidity/\"\n  }, \"How to Fetch the Current Price of Ethereum in Solidity\"), \" \\u2014 \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Chainlink\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example projects\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/hackbg/chainlink-fullstack\"\n  }, \"Full Chainlink starter project for Ethereum in Solidity\"), \" \\u2014 \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"HackBG\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#prerequisites-prerequisites","title":"Prerequisites {#prerequisites}"},{"url":"#what-is-a-blockchain-oracle-what-is-a-blockchain-oracle","title":"What is a blockchain oracle? {#what-is-a-blockchain-oracle}"},{"url":"#why-do-smart-contracts-need-oracles-why-do-smart-contracts-need-oracles","title":"Why do smart contracts need oracles? {#why-do-smart-contracts-need-oracles}"},{"url":"#what-is-the-oracle-problem-the-oracle-problem","title":"What is the oracle problem? {#the-oracle-problem}"},{"url":"#how-does-a-blockchain-oracle-service-work-how-does-a-blockchain-oracle-service-work","title":"How does a blockchain oracle service work? {#how-does-a-blockchain-oracle-service-work}","items":[{"url":"#users-users","title":"Users {#users}"},{"url":"#oracle-contract-oracle-contract","title":"Oracle contract {#oracle-contract}"},{"url":"#oracle-nodes-oracle-nodes","title":"Oracle nodes {#oracle-nodes}"}]},{"url":"#oracle-design-patterns-oracle-design-patterns","title":"Oracle design patterns {#oracle-design-patterns}","items":[{"url":"#publish-subscribe-oracles-publish-subscribe-oracles","title":"Publish-subscribe oracles {#publish-subscribe-oracles}"},{"url":"#request-response-oracles-request-response-oracles","title":"Request-response oracles {#request-response-oracles}"}]},{"url":"#types-of-oracles-types-of-oracles","title":"Types of oracles {#types-of-oracles}","items":[{"url":"#centralized-oracles-centralized-oracles","title":"Centralized oracles {#centralized-oracles}","items":[{"url":"#low-correctness-guarantees-low-correctness-guarantees","title":"Low correctness guarantees {#low-correctness-guarantees}"},{"url":"#poor-availability-poor-availability","title":"Poor availability {#poor-availability}"},{"url":"#poor-incentive-compatibility-poor-incentive-compatibility","title":"Poor incentive compatibility {#poor-incentive-compatibility}"}]},{"url":"#decentralized-oracles-decentralized-oracles","title":"Decentralized oracles {#decentralized-oracles}"},{"url":"#high-correctness-guarantees-high-correctness-guarantees","title":"High correctness guarantees {#high-correctness-guarantees}","items":[{"url":"#authenticity-proofs-authenticity-proofs","title":"Authenticity proofs {#authenticity-proofs}"},{"url":"#consensus-based-validation-of-information-consensus-based-validation-of-information","title":"Consensus-based validation of information {#consensus-based-validation-of-information}","items":[{"url":"#votingstaking-on-accuracy-of-data","title":"Voting/staking on accuracy of data"},{"url":"#schelling-point-mechanisms","title":"Schelling point mechanisms"}]}]},{"url":"#availability-availability","title":"Availability {#availability}"},{"url":"#good-incentive-compatibility-good-incentive-compatibility","title":"Good incentive compatibility {#good-incentive-compatibility}"}]},{"url":"#applications-of-oracles-in-smart-contracts-applications-of-oracles-in-smart-contracts","title":"Applications of oracles in smart contracts {#applications-of-oracles-in-smart-contracts}","items":[{"url":"#retrieving-financial-data-retrieving-financial-data","title":"Retrieving financial data {#retrieving-financial-data}"},{"url":"#generating-verifiable-randomness-generating-verifiable-randomness","title":"Generating verifiable randomness {#generating-verifiable-randomness}"},{"url":"#getting-outcomes-for-events-getting-outcomes-for-events","title":"Getting outcomes for events {#getting-outcomes-for-events}"},{"url":"#automating-smart-contracts-automating-smart-contracts","title":"Automating smart contracts {#automating-smart-contracts}"}]},{"url":"#use-blockchain-oracles-use-blockchain-oracles","title":"Use blockchain oracles {#use-blockchain-oracles}"},{"url":"#further-reading-further-reading","title":"Further reading {#further-reading}"}]}}},"pageContext":{"language":"it","slug":"/it/developers/docs/oracles/","ignoreTranslationBanner":false,"isLegal":false,"isOutdated":false,"isContentEnglish":true,"relativePath":"src/content/developers/docs/oracles/index.md","locale":"it","hrefLang":"it","originalPath":"/developers/docs/oracles/","dateFormat":"MM/DD/YYYY"}},"staticQueryHashes":["1239077767","3003422828","3280999885","446219633"],"slicesMap":{}}