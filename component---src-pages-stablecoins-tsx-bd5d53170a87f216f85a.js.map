{"version":3,"file":"component---src-pages-stablecoins-tsx-bd5d53170a87f216f85a.js","mappings":"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","sources":["webpack://ethereum-org-website/./node_modules/@chakra-ui/accordion/dist/index.esm.js","webpack://ethereum-org-website/./node_modules/@chakra-ui/descendant/dist/index.esm.js","webpack://ethereum-org-website/./node_modules/@chakra-ui/image/dist/index.esm.js","webpack://ethereum-org-website/./node_modules/@chakra-ui/react-use-controllable-state/dist/index.esm.js","webpack://ethereum-org-website/./node_modules/@chakra-ui/table/dist/index.esm.js","webpack://ethereum-org-website/./src/components/Button/index.tsx","webpack://ethereum-org-website/./src/components/CardList.tsx","webpack://ethereum-org-website/./src/components/DataProductCard.tsx","webpack://ethereum-org-website/./src/components/FeedbackCard.tsx","webpack://ethereum-org-website/./src/components/GhostCard.tsx","webpack://ethereum-org-website/./src/components/HorizontalCard.tsx","webpack://ethereum-org-website/./src/components/InfoBanner.tsx","webpack://ethereum-org-website/./src/components/PageHero.tsx","webpack://ethereum-org-website/./src/components/ProductList.tsx","webpack://ethereum-org-website/./src/components/SimpleTable.tsx","webpack://ethereum-org-website/./src/components/Pill.tsx","webpack://ethereum-org-website/./src/components/StablecoinAccordion/utils.ts","webpack://ethereum-org-website/./src/components/StablecoinAccordion/AccordionCustomItem.tsx","webpack://ethereum-org-website/./src/components/StablecoinAccordion/useStablecoinAccordion.ts","webpack://ethereum-org-website/./src/components/StablecoinAccordion/index.tsx","webpack://ethereum-org-website/./src/components/StablecoinBoxGrid.tsx","webpack://ethereum-org-website/./src/components/Tooltip.tsx","webpack://ethereum-org-website/./src/utils/cache.ts"],"sourcesContent":["// ../../react-shim.js\nimport React from \"react\";\n\n// src/accordion-button.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nfunction isDev() {\n  return process.env.NODE_ENV !== \"production\";\n}\nvar warn = (options) => {\n  const { condition, message } = options;\n  if (condition && isDev()) {\n    console.warn(message);\n  }\n};\nfunction callAllHandlers(...fns) {\n  return function func(event) {\n    fns.some((fn) => {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\n\n// src/accordion-context.ts\nimport { createDescendantContext } from \"@chakra-ui/descendant\";\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [AccordionStylesProvider, useAccordionStyles] = createContext({\n  name: \"AccordionStylesContext\",\n  hookName: \"useAccordionStyles\",\n  providerName: \"<Accordion />\"\n});\nvar [AccordionItemProvider, useAccordionItemContext] = createContext({\n  name: \"AccordionItemContext\",\n  hookName: \"useAccordionItemContext\",\n  providerName: \"<AccordionItem />\"\n});\nvar [\n  AccordionDescendantsProvider,\n  useAccordionDescendantsContext,\n  useAccordionDescendants,\n  useAccordionDescendant\n] = createDescendantContext();\n\n// src/accordion-button.tsx\nvar AccordionButton = forwardRef(function AccordionButton2(props, ref) {\n  const { getButtonProps } = useAccordionItemContext();\n  const buttonProps = getButtonProps(props, ref);\n  const styles = useAccordionStyles();\n  const buttonStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    outline: 0,\n    ...styles.button\n  };\n  return /* @__PURE__ */ React.createElement(chakra.button, {\n    ...buttonProps,\n    className: cx(\"chakra-accordion__button\", props.className),\n    __css: buttonStyles\n  });\n});\nAccordionButton.displayName = \"AccordionButton\";\n\n// src/accordion-icon.tsx\nimport { Icon } from \"@chakra-ui/icon\";\n\n// src/use-accordion.ts\nimport { createContext as createContext2 } from \"@chakra-ui/react-context\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useCallback, useEffect, useId, useRef, useState } from \"react\";\nfunction useAccordion(props) {\n  const {\n    onChange,\n    defaultIndex,\n    index: indexProp,\n    allowMultiple,\n    allowToggle,\n    ...htmlProps\n  } = props;\n  allowMultipleWarning(props);\n  allowMultipleAndAllowToggleWarning(props);\n  const descendants = useAccordionDescendants();\n  const [focusedIndex, setFocusedIndex] = useState(-1);\n  useEffect(() => {\n    return () => {\n      setFocusedIndex(-1);\n    };\n  }, []);\n  const [index, setIndex] = useControllableState({\n    value: indexProp,\n    defaultValue() {\n      if (allowMultiple)\n        return defaultIndex ?? [];\n      return defaultIndex ?? -1;\n    },\n    onChange\n  });\n  const getAccordionItemProps = (idx) => {\n    let isOpen = false;\n    if (idx !== null) {\n      isOpen = Array.isArray(index) ? index.includes(idx) : index === idx;\n    }\n    const onChange2 = (isOpen2) => {\n      if (idx === null)\n        return;\n      if (allowMultiple && Array.isArray(index)) {\n        const nextState = isOpen2 ? index.concat(idx) : index.filter((i) => i !== idx);\n        setIndex(nextState);\n      } else if (isOpen2) {\n        setIndex(idx);\n      } else if (allowToggle) {\n        setIndex(-1);\n      }\n    };\n    return { isOpen, onChange: onChange2 };\n  };\n  return {\n    index,\n    setIndex,\n    htmlProps,\n    getAccordionItemProps,\n    focusedIndex,\n    setFocusedIndex,\n    descendants\n  };\n}\nvar [AccordionProvider, useAccordionContext] = createContext2({\n  name: \"AccordionContext\",\n  hookName: \"useAccordionContext\",\n  providerName: \"Accordion\"\n});\nfunction useAccordionItem(props) {\n  const { isDisabled, isFocusable, id, ...htmlProps } = props;\n  const { getAccordionItemProps, setFocusedIndex } = useAccordionContext();\n  const buttonRef = useRef(null);\n  const reactId = useId();\n  const uid = id ?? reactId;\n  const buttonId = `accordion-button-${uid}`;\n  const panelId = `accordion-panel-${uid}`;\n  focusableNotDisabledWarning(props);\n  const { register, index, descendants } = useAccordionDescendant({\n    disabled: isDisabled && !isFocusable\n  });\n  const { isOpen, onChange } = getAccordionItemProps(index === -1 ? null : index);\n  warnIfOpenAndDisabled({ isOpen, isDisabled });\n  const onOpen = () => {\n    onChange == null ? void 0 : onChange(true);\n  };\n  const onClose = () => {\n    onChange == null ? void 0 : onChange(false);\n  };\n  const onClick = useCallback(() => {\n    onChange == null ? void 0 : onChange(!isOpen);\n    setFocusedIndex(index);\n  }, [index, setFocusedIndex, isOpen, onChange]);\n  const onKeyDown = useCallback((event) => {\n    const keyMap = {\n      ArrowDown: () => {\n        const next = descendants.nextEnabled(index);\n        next == null ? void 0 : next.node.focus();\n      },\n      ArrowUp: () => {\n        const prev = descendants.prevEnabled(index);\n        prev == null ? void 0 : prev.node.focus();\n      },\n      Home: () => {\n        const first = descendants.firstEnabled();\n        first == null ? void 0 : first.node.focus();\n      },\n      End: () => {\n        const last = descendants.lastEnabled();\n        last == null ? void 0 : last.node.focus();\n      }\n    };\n    const action = keyMap[event.key];\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [descendants, index]);\n  const onFocus = useCallback(() => {\n    setFocusedIndex(index);\n  }, [setFocusedIndex, index]);\n  const getButtonProps = useCallback(function getButtonProps2(props2 = {}, ref = null) {\n    return {\n      ...props2,\n      type: \"button\",\n      ref: mergeRefs(register, buttonRef, ref),\n      id: buttonId,\n      disabled: !!isDisabled,\n      \"aria-expanded\": !!isOpen,\n      \"aria-controls\": panelId,\n      onClick: callAllHandlers(props2.onClick, onClick),\n      onFocus: callAllHandlers(props2.onFocus, onFocus),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown)\n    };\n  }, [\n    buttonId,\n    isDisabled,\n    isOpen,\n    onClick,\n    onFocus,\n    onKeyDown,\n    panelId,\n    register\n  ]);\n  const getPanelProps = useCallback(function getPanelProps2(props2 = {}, ref = null) {\n    return {\n      ...props2,\n      ref,\n      role: \"region\",\n      id: panelId,\n      \"aria-labelledby\": buttonId,\n      hidden: !isOpen\n    };\n  }, [buttonId, isOpen, panelId]);\n  return {\n    isOpen,\n    isDisabled,\n    isFocusable,\n    onOpen,\n    onClose,\n    getButtonProps,\n    getPanelProps,\n    htmlProps\n  };\n}\nfunction allowMultipleWarning(props) {\n  const index = props.index || props.defaultIndex;\n  const condition = index == null && !Array.isArray(index) && props.allowMultiple;\n  warn({\n    condition: !!condition,\n    message: `If 'allowMultiple' is passed, then 'index' or 'defaultIndex' must be an array. You passed: ${typeof index},`\n  });\n}\nfunction allowMultipleAndAllowToggleWarning(props) {\n  warn({\n    condition: !!(props.allowMultiple && props.allowToggle),\n    message: `If 'allowMultiple' is passed, 'allowToggle' will be ignored. Either remove 'allowToggle' or 'allowMultiple' depending on whether you want multiple accordions visible or not`\n  });\n}\nfunction focusableNotDisabledWarning(props) {\n  warn({\n    condition: !!(props.isFocusable && !props.isDisabled),\n    message: `Using only 'isFocusable', this prop is reserved for situations where you pass 'isDisabled' but you still want the element to receive focus (A11y). Either remove it or pass 'isDisabled' as well.\n    `\n  });\n}\nfunction warnIfOpenAndDisabled(props) {\n  warn({\n    condition: props.isOpen && !!props.isDisabled,\n    message: \"Cannot open a disabled accordion item\"\n  });\n}\n\n// src/accordion-icon.tsx\nfunction AccordionIcon(props) {\n  const { isOpen, isDisabled } = useAccordionItemContext();\n  const { reduceMotion } = useAccordionContext();\n  const _className = cx(\"chakra-accordion__icon\", props.className);\n  const styles = useAccordionStyles();\n  const iconStyles = {\n    opacity: isDisabled ? 0.4 : 1,\n    transform: isOpen ? \"rotate(-180deg)\" : void 0,\n    transition: reduceMotion ? void 0 : \"transform 0.2s\",\n    transformOrigin: \"center\",\n    ...styles.icon\n  };\n  return /* @__PURE__ */ React.createElement(Icon, {\n    viewBox: \"0 0 24 24\",\n    \"aria-hidden\": true,\n    className: _className,\n    __css: iconStyles,\n    ...props\n  }, /* @__PURE__ */ React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n  }));\n}\nAccordionIcon.displayName = \"AccordionIcon\";\n\n// src/accordion-item.tsx\nimport {\n  chakra as chakra2,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nvar AccordionItem = forwardRef2(function AccordionItem2(props, ref) {\n  const { children, className } = props;\n  const { htmlProps, ...context } = useAccordionItem(props);\n  const styles = useAccordionStyles();\n  const containerStyles = {\n    ...styles.container,\n    overflowAnchor: \"none\"\n  };\n  const ctx = useMemo(() => context, [context]);\n  return /* @__PURE__ */ React.createElement(AccordionItemProvider, {\n    value: ctx\n  }, /* @__PURE__ */ React.createElement(chakra2.div, {\n    ref,\n    ...htmlProps,\n    className: cx(\"chakra-accordion__item\", className),\n    __css: containerStyles\n  }, typeof children === \"function\" ? children({\n    isExpanded: !!context.isOpen,\n    isDisabled: !!context.isDisabled\n  }) : children));\n});\nAccordionItem.displayName = \"AccordionItem\";\n\n// src/accordion-panel.tsx\nimport { chakra as chakra3, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nimport { Collapse } from \"@chakra-ui/transition\";\nvar AccordionPanel = forwardRef3(function AccordionPanel2(props, ref) {\n  const { reduceMotion } = useAccordionContext();\n  const { getPanelProps, isOpen } = useAccordionItemContext();\n  const panelProps = getPanelProps(props, ref);\n  const _className = cx(\"chakra-accordion__panel\", props.className);\n  const styles = useAccordionStyles();\n  if (!reduceMotion) {\n    delete panelProps.hidden;\n  }\n  const child = /* @__PURE__ */ React.createElement(chakra3.div, {\n    ...panelProps,\n    __css: styles.panel,\n    className: _className\n  });\n  if (!reduceMotion) {\n    return /* @__PURE__ */ React.createElement(Collapse, {\n      in: isOpen\n    }, child);\n  }\n  return child;\n});\nAccordionPanel.displayName = \"AccordionPanel\";\n\n// src/accordion.tsx\nimport {\n  chakra as chakra4,\n  forwardRef as forwardRef4,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { useMemo as useMemo2 } from \"react\";\nvar Accordion = forwardRef4(function Accordion2({ children, reduceMotion, ...props }, ref) {\n  const styles = useMultiStyleConfig(\"Accordion\", props);\n  const ownProps = omitThemingProps(props);\n  const { htmlProps, descendants, ...context } = useAccordion(ownProps);\n  const ctx = useMemo2(() => ({ ...context, reduceMotion: !!reduceMotion }), [context, reduceMotion]);\n  return /* @__PURE__ */ React.createElement(AccordionDescendantsProvider, {\n    value: descendants\n  }, /* @__PURE__ */ React.createElement(AccordionProvider, {\n    value: ctx\n  }, /* @__PURE__ */ React.createElement(AccordionStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(chakra4.div, {\n    ref,\n    ...htmlProps,\n    className: cx(\"chakra-accordion\", props.className),\n    __css: styles.root\n  }, children))));\n});\nAccordion.displayName = \"Accordion\";\n\n// src/use-accordiont-item-state.ts\nfunction useAccordionItemState() {\n  const { isOpen, isDisabled, onClose, onOpen } = useAccordionItemContext();\n  return { isOpen, onClose, isDisabled, onOpen };\n}\nexport {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  AccordionProvider,\n  useAccordion,\n  useAccordionContext,\n  useAccordionItem,\n  useAccordionItemState,\n  useAccordionStyles\n};\n","// src/use-descendant.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useRef, useState } from \"react\";\n\n// src/utils.ts\nimport { useEffect, useLayoutEffect } from \"react\";\nfunction sortNodes(nodes) {\n  return nodes.sort((a, b) => {\n    const compare = a.compareDocumentPosition(b);\n    if (compare & Node.DOCUMENT_POSITION_FOLLOWING || compare & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n      return -1;\n    }\n    if (compare & Node.DOCUMENT_POSITION_PRECEDING || compare & Node.DOCUMENT_POSITION_CONTAINS) {\n      return 1;\n    }\n    if (compare & Node.DOCUMENT_POSITION_DISCONNECTED || compare & Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC) {\n      throw Error(\"Cannot sort the given nodes.\");\n    } else {\n      return 0;\n    }\n  });\n}\nvar isElement = (el) => typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\nfunction getNextIndex(current, max, loop) {\n  let next = current + 1;\n  if (loop && next >= max)\n    next = 0;\n  return next;\n}\nfunction getPrevIndex(current, max, loop) {\n  let next = current - 1;\n  if (loop && next < 0)\n    next = max;\n  return next;\n}\nvar useSafeLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\nvar cast = (value) => value;\n\n// src/descendant.ts\nvar DescendantsManager = class {\n  descendants = /* @__PURE__ */ new Map();\n  register = (nodeOrOptions) => {\n    if (nodeOrOptions == null)\n      return;\n    if (isElement(nodeOrOptions)) {\n      return this.registerNode(nodeOrOptions);\n    }\n    return (node) => {\n      this.registerNode(node, nodeOrOptions);\n    };\n  };\n  unregister = (node) => {\n    this.descendants.delete(node);\n    const sorted = sortNodes(Array.from(this.descendants.keys()));\n    this.assignIndex(sorted);\n  };\n  destroy = () => {\n    this.descendants.clear();\n  };\n  assignIndex = (descendants) => {\n    this.descendants.forEach((descendant) => {\n      const index = descendants.indexOf(descendant.node);\n      descendant.index = index;\n      descendant.node.dataset[\"index\"] = descendant.index.toString();\n    });\n  };\n  count = () => this.descendants.size;\n  enabledCount = () => this.enabledValues().length;\n  values = () => {\n    const values = Array.from(this.descendants.values());\n    return values.sort((a, b) => a.index - b.index);\n  };\n  enabledValues = () => {\n    return this.values().filter((descendant) => !descendant.disabled);\n  };\n  item = (index) => {\n    if (this.count() === 0)\n      return void 0;\n    return this.values()[index];\n  };\n  enabledItem = (index) => {\n    if (this.enabledCount() === 0)\n      return void 0;\n    return this.enabledValues()[index];\n  };\n  first = () => this.item(0);\n  firstEnabled = () => this.enabledItem(0);\n  last = () => this.item(this.descendants.size - 1);\n  lastEnabled = () => {\n    const lastIndex = this.enabledValues().length - 1;\n    return this.enabledItem(lastIndex);\n  };\n  indexOf = (node) => {\n    var _a;\n    if (!node)\n      return -1;\n    return ((_a = this.descendants.get(node)) == null ? void 0 : _a.index) ?? -1;\n  };\n  enabledIndexOf = (node) => {\n    if (node == null)\n      return -1;\n    return this.enabledValues().findIndex((i) => i.node.isSameNode(node));\n  };\n  next = (index, loop = true) => {\n    const next = getNextIndex(index, this.count(), loop);\n    return this.item(next);\n  };\n  nextEnabled = (index, loop = true) => {\n    const item = this.item(index);\n    if (!item)\n      return;\n    const enabledIndex = this.enabledIndexOf(item.node);\n    const nextEnabledIndex = getNextIndex(enabledIndex, this.enabledCount(), loop);\n    return this.enabledItem(nextEnabledIndex);\n  };\n  prev = (index, loop = true) => {\n    const prev = getPrevIndex(index, this.count() - 1, loop);\n    return this.item(prev);\n  };\n  prevEnabled = (index, loop = true) => {\n    const item = this.item(index);\n    if (!item)\n      return;\n    const enabledIndex = this.enabledIndexOf(item.node);\n    const prevEnabledIndex = getPrevIndex(enabledIndex, this.enabledCount() - 1, loop);\n    return this.enabledItem(prevEnabledIndex);\n  };\n  registerNode = (node, options) => {\n    if (!node || this.descendants.has(node))\n      return;\n    const keys = Array.from(this.descendants.keys()).concat(node);\n    const sorted = sortNodes(keys);\n    if (options == null ? void 0 : options.disabled) {\n      options.disabled = !!options.disabled;\n    }\n    const descendant = { node, index: -1, ...options };\n    this.descendants.set(node, descendant);\n    this.assignIndex(sorted);\n  };\n};\n\n// src/use-descendant.ts\nfunction useDescendants() {\n  const descendants = useRef(new DescendantsManager());\n  useSafeLayoutEffect(() => {\n    return () => descendants.current.destroy();\n  });\n  return descendants.current;\n}\nvar [DescendantsContextProvider, useDescendantsContext] = createContext({\n  name: \"DescendantsProvider\",\n  errorMessage: \"useDescendantsContext must be used within DescendantsProvider\"\n});\nfunction useDescendant(options) {\n  const descendants = useDescendantsContext();\n  const [index, setIndex] = useState(-1);\n  const ref = useRef(null);\n  useSafeLayoutEffect(() => {\n    return () => {\n      if (!ref.current)\n        return;\n      descendants.unregister(ref.current);\n    };\n  }, []);\n  useSafeLayoutEffect(() => {\n    if (!ref.current)\n      return;\n    const dataIndex = Number(ref.current.dataset[\"index\"]);\n    if (index != dataIndex && !Number.isNaN(dataIndex)) {\n      setIndex(dataIndex);\n    }\n  });\n  const refCallback = options ? cast(descendants.register(options)) : cast(descendants.register);\n  return {\n    descendants,\n    index,\n    enabledIndex: descendants.enabledIndexOf(ref.current),\n    register: mergeRefs(refCallback, ref)\n  };\n}\nfunction createDescendantContext() {\n  const ContextProvider = cast(DescendantsContextProvider);\n  const _useDescendantsContext = () => cast(useDescendantsContext());\n  const _useDescendant = (options) => useDescendant(options);\n  const _useDescendants = () => useDescendants();\n  return [\n    ContextProvider,\n    _useDescendantsContext,\n    _useDescendants,\n    _useDescendant\n  ];\n}\nexport {\n  createDescendantContext,\n  createDescendantContext as default\n};\n","// ../../react-shim.js\nimport React from \"react\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/dist/index.esm.js\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(\"img\", {\n    width: htmlWidth,\n    height: htmlHeight,\n    ref,\n    alt,\n    ...rest\n  });\n});\nNativeImage.displayName = \"NativeImage\";\n\n// src/image.tsx\nvar Image2 = forwardRef2(function Image3(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ React.createElement(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage2.displayName = \"Image\";\n\n// src/img.tsx\nimport { chakra as chakra2, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar Img = forwardRef3((props, ref) => /* @__PURE__ */ React.createElement(chakra2.img, {\n  ref,\n  as: NativeImage,\n  className: \"chakra-image\",\n  ...props\n}));\nexport {\n  Image2 as Image,\n  Img,\n  shouldShowFallbackImage,\n  useImage\n};\n","// src/index.ts\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nfunction useControllableProp(prop, state) {\n  const controlled = typeof prop !== \"undefined\";\n  const value = controlled ? prop : state;\n  return useMemo(() => [controlled, value], [controlled, value]);\n}\nfunction useControllableState(props) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    shouldUpdate = (prev, next) => prev !== next\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const shouldUpdateProp = useCallbackRef(shouldUpdate);\n  const [uncontrolledState, setUncontrolledState] = useState(defaultValue);\n  const controlled = valueProp !== void 0;\n  const value = controlled ? valueProp : uncontrolledState;\n  const setValue = useCallback((next) => {\n    const setter = next;\n    const nextValue = typeof next === \"function\" ? setter(value) : next;\n    if (!shouldUpdateProp(value, nextValue)) {\n      return;\n    }\n    if (!controlled) {\n      setUncontrolledState(nextValue);\n    }\n    onChangeProp(nextValue);\n  }, [controlled, onChangeProp, value, shouldUpdateProp]);\n  return [value, setValue];\n}\nexport {\n  useControllableProp,\n  useControllableState\n};\n","// ../../react-shim.js\nimport React from \"react\";\n\n// src/table.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\n// src/table.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [TableStylesProvider, useTableStyles] = createContext({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `\n});\nvar Table = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props);\n  const { className, ...tableProps } = omitThemingProps(props);\n  return /* @__PURE__ */ React.createElement(TableStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(chakra.table, {\n    role: \"table\",\n    ref,\n    __css: styles.table,\n    className: cx(\"chakra-table\", className),\n    ...tableProps\n  }));\n});\nTable.displayName = \"Table\";\n\n// src/table-container.tsx\nimport { chakra as chakra2, forwardRef as forwardRef2 } from \"@chakra-ui/system\";\nvar TableContainer = forwardRef2((props, ref) => {\n  const { overflow, overflowX, className, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    ref,\n    className: cx(\"chakra-table__container\", className),\n    ...rest,\n    __css: {\n      display: \"block\",\n      whiteSpace: \"nowrap\",\n      WebkitOverflowScrolling: \"touch\",\n      overflowX: overflow ?? overflowX ?? \"auto\",\n      overflowY: \"hidden\",\n      maxWidth: \"100%\"\n    }\n  });\n});\n\n// src/table-caption.tsx\nimport { chakra as chakra3, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar TableCaption = forwardRef3((props, ref) => {\n  const { placement = \"bottom\", ...rest } = props;\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra3.caption, {\n    ...rest,\n    ref,\n    __css: {\n      ...styles.caption,\n      captionSide: placement\n    }\n  });\n});\nTableCaption.displayName = \"TableCaption\";\n\n// src/thead.tsx\nimport { chakra as chakra4, forwardRef as forwardRef4 } from \"@chakra-ui/system\";\nvar Thead = forwardRef4((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra4.thead, {\n    ...props,\n    ref,\n    __css: styles.thead\n  });\n});\n\n// src/tbody.tsx\nimport { chakra as chakra5, forwardRef as forwardRef5 } from \"@chakra-ui/system\";\nvar Tbody = forwardRef5((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra5.tbody, {\n    ...props,\n    ref,\n    __css: styles.tbody\n  });\n});\n\n// src/tfooter.tsx\nimport { chakra as chakra6, forwardRef as forwardRef6 } from \"@chakra-ui/system\";\nvar Tfoot = forwardRef6((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra6.tfoot, {\n    ...props,\n    ref,\n    __css: styles.tfoot\n  });\n});\n\n// src/th.tsx\nimport { chakra as chakra7, forwardRef as forwardRef7 } from \"@chakra-ui/system\";\nvar Th = forwardRef7(({ isNumeric, ...rest }, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra7.th, {\n    ...rest,\n    ref,\n    __css: styles.th,\n    \"data-is-numeric\": isNumeric\n  });\n});\n\n// src/tr.tsx\nimport { chakra as chakra8, forwardRef as forwardRef8 } from \"@chakra-ui/system\";\nvar Tr = forwardRef8((props, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra8.tr, {\n    role: \"row\",\n    ...props,\n    ref,\n    __css: styles.tr\n  });\n});\n\n// src/td.tsx\nimport { chakra as chakra9, forwardRef as forwardRef9 } from \"@chakra-ui/system\";\nvar Td = forwardRef9(({ isNumeric, ...rest }, ref) => {\n  const styles = useTableStyles();\n  return /* @__PURE__ */ React.createElement(chakra9.td, {\n    role: \"gridcell\",\n    ...rest,\n    ref,\n    __css: styles.td,\n    \"data-is-numeric\": isNumeric\n  });\n});\nexport {\n  Table,\n  TableCaption,\n  TableContainer,\n  Tbody,\n  Td,\n  Tfoot,\n  Th,\n  Thead,\n  Tr,\n  useTableStyles\n};\n","import React from \"react\"\nimport { Button as ChakraButton, ButtonProps } from \"@chakra-ui/react\"\n\nimport { scrollIntoView } from \"../../utils/scrollIntoView\"\n\nexport interface IProps extends ButtonProps {\n  toId?: string\n}\n\nconst Button: React.FC<IProps> = ({ toId, children, ...props }) => {\n  const handleOnClick = () => {\n    if (!toId) {\n      return\n    }\n\n    scrollIntoView(toId)\n  }\n\n  return (\n    <ChakraButton onClick={handleOnClick} {...props}>\n      {children}\n    </ChakraButton>\n  )\n}\n\nexport default Button\n","import React, { ReactNode } from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport {\n  Box,\n  Flex,\n  HStack,\n  LinkBox,\n  LinkOverlay,\n  StackProps,\n  useColorModeValue,\n} from \"@chakra-ui/react\"\n\nimport { ImageProp } from \"../types\"\nimport * as url from \"../utils/url\"\nimport Link from \"./Link\"\n\nexport type CardListItem = {\n  title?: ReactNode\n  description?: ReactNode\n  caption?: ReactNode\n  link?: string\n  id?: string\n} & ImageProp\n\nexport interface IProps {\n  content: Array<CardListItem>\n  clickHandler?: (idx: string | number) => void\n}\n\nconst CardContainer = (props: StackProps) => {\n  return (\n    <HStack\n      spacing={4}\n      p={4}\n      color=\"text\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      _hover={{\n        borderRadius: \"base\",\n        boxShadow: \"0 0 1px var(--eth-colors-primary)\",\n        background: \"tableBackgroundHover\",\n      }}\n      {...props}\n    />\n  )\n}\n\nconst Card = (props: CardListItem & Omit<StackProps, \"title\" | \"id\">) => {\n  const { title, description, caption, link, image, alt, ...rest } = props\n\n  const isLink = !!link\n  const isExternal = url.isExternal(link || \"\")\n\n  const descriptionColor = useColorModeValue(\"gray.500\", \"gray.400\")\n\n  return (\n    <CardContainer {...rest}>\n      {image && <Box as={GatsbyImage} image={image} alt={alt} minW=\"20px\" />}\n      <Flex flex=\"1 1 75%\" direction=\"column\">\n        {isLink ? (\n          <LinkOverlay\n            as={Link}\n            href={link}\n            hideArrow\n            color=\"text\"\n            textDecoration=\"none\"\n            _hover={{ textDecoration: \"none\" }}\n          >\n            {title}\n          </LinkOverlay>\n        ) : (\n          <Box>{title}</Box>\n        )}\n\n        <Box fontSize=\"sm\" mb={0} color={descriptionColor}>\n          {description}\n        </Box>\n      </Flex>\n      {caption && (\n        <Flex flex=\"1 0 25%\" align=\"center\" wrap=\"wrap\" mr={4}>\n          <Box fontSize=\"sm\" mb={0} opacity={0.6}>\n            {caption}\n          </Box>\n        </Flex>\n      )}\n      {isExternal && <Box>↗</Box>}\n    </CardContainer>\n  )\n}\n\nconst CardList: React.FC<IProps> = ({ content, clickHandler = () => null }) => (\n  <Box bg=\"background\" width=\"full\">\n    {content.map((listItem, idx) => {\n      const { link, id } = listItem\n      const isLink = !!link\n\n      return isLink ? (\n        <LinkBox key={id || idx}>\n          <Card {...listItem} />\n        </LinkBox>\n      ) : (\n        <Card\n          key={idx}\n          onClick={() => clickHandler(idx)}\n          mb={4}\n          {...listItem}\n        />\n      )\n    })}\n  </Box>\n)\n\nexport default CardList\n","import React from \"react\"\n\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport {\n  Box,\n  Flex,\n  Heading,\n  Image,\n  Text,\n  LinkOverlay,\n  LinkBox,\n  useColorModeValue,\n} from \"@chakra-ui/react\"\n\nexport interface DataRow {\n  logo: IGatsbyImageData\n  coin: string\n  apy: string\n}\n\nexport interface IProps {\n  url: string\n  background: string\n  image: IGatsbyImageData\n  alt?: string\n  name: string\n  description?: string\n  data?: Array<DataRow>\n}\n\nconst DataProductCard: React.FC<IProps> = ({\n  url,\n  background,\n  image,\n  alt,\n  name,\n  description,\n  data,\n}) => {\n  const boxShadow = useColorModeValue(\"tableBox.light\", \"tableBox.dark\")\n\n  return (\n    <LinkBox\n      color=\"text\"\n      background=\"searchBackground\"\n      border=\"1px solid\"\n      borderColor=\"lightBorder\"\n      borderRadius=\"base\"\n      overflow=\"hidden\"\n      boxShadow={boxShadow}\n      display=\"flex\"\n      flexDirection=\"column\"\n      _hover={{\n        background: \"tableBackgroundHover\",\n        boxShadow: boxShadow,\n        transition: \"transform 0.1s ease 0s\",\n        transform: \"scale(1.02)\",\n      }}\n    >\n      <Flex\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        boxShadow=\"rgb(0 0 0 / 10%) 0px -1px 0px inset;\"\n        minH=\"200px\"\n        bg={background}\n      >\n        <Image\n          as={GatsbyImage}\n          image={image}\n          objectFit=\"cover\"\n          alt={alt ? alt : `${name} logo`}\n          width=\"100%\"\n          alignSelf=\"center\"\n          maxWidth={{ base: \"311px\", sm: \"372px\" }}\n          maxHeight=\"257px\"\n        />\n      </Flex>\n      <Flex\n        textAlign=\"left\"\n        flexDirection=\"column\"\n        justifyContent=\"space-between\"\n      >\n        <Box>\n          <Heading\n            as=\"h3\"\n            size=\"lg\"\n            fontSize=\"2xl\"\n            fontWeight=\"600\"\n            lineHeight=\"1.4\"\n            my={8}\n            mx={4}\n            mb={4}\n          >\n            <LinkOverlay href={url} isExternal>\n              {name}\n            </LinkOverlay>\n          </Heading>\n          <Text fontSize=\"sm\" opacity=\"0.8\" mx={4} mb={4} lineHeight=\"140%\">\n            {description}\n          </Text>\n        </Box>\n        {data && (\n          <Box\n            overflowY=\"scroll\"\n            maxHeight=\"160px\"\n            mb={4}\n            borderTop=\"1px solid\"\n            borderColor=\"lightBorder\"\n          >\n            {data.map(({ logo, coin, apy }, idx) => (\n              <Flex\n                key={idx}\n                color=\"text300\"\n                fontSize=\"sm\"\n                justify=\"space-between\"\n                p={4}\n                textTransform=\"uppercase\"\n                border=\"1px solid\"\n                borderColor=\"lightBorder\"\n                borderLeft=\"0\"\n                borderRight=\"0\"\n              >\n                <Flex alignItems=\"center\">\n                  {logo && (\n                    <Image\n                      as={GatsbyImage}\n                      image={logo}\n                      objectFit=\"cover\"\n                      alt=\"\"\n                      minWidth=\"24px\"\n                      marginRight=\"0.5rem\"\n                    />\n                  )}\n                  {coin}\n                </Flex>\n                <Flex alignItems=\"center\">{apy}% APY</Flex>\n              </Flex>\n            ))}\n          </Box>\n        )}\n      </Flex>\n    </LinkBox>\n  )\n}\n\nexport default DataProductCard\n","// Library imports\nimport React, { ReactNode, useState } from \"react\"\nimport { Flex, FlexProps, Heading } from \"@chakra-ui/react\"\n// Component imports\nimport Button from \"./Button\"\nimport Translation from \"./Translation\"\n// SVG imports\nimport { FeedbackThumbsUpIcon } from \"./icons\"\n// Utility imports\nimport { trackCustomEvent } from \"../utils/matomo\"\n// Hook imports\nimport { useSurvey } from \"../hooks/useSurvey\"\n\nexport interface IProps extends FlexProps {\n  prompt?: string\n  isArticle?: boolean\n}\n\nconst FeedbackCard: React.FC<IProps> = ({\n  prompt,\n  isArticle = false,\n  ...props\n}) => {\n  const [feedbackSubmitted, setFeedbackSubmitted] = useState(false)\n  const surveyUrl = useSurvey(feedbackSubmitted)\n\n  const location = typeof window !== \"undefined\" ? window.location.href : \"\"\n  const isTutorial = location.includes(\"tutorials\")\n\n  const getTitle = (feedbackSubmitted: boolean): ReactNode => {\n    if (!feedbackSubmitted) {\n      if (prompt) return prompt\n      if (isTutorial) return <Translation id=\"feedback-card-prompt-tutorial\" />\n      if (isArticle) return <Translation id=\"feedback-card-prompt-article\" />\n      return <Translation id=\"feedback-card-prompt-page\" />\n    }\n    return <Translation id=\"feedback-widget-thank-you-title\" />\n  }\n\n  const handleSubmit = (choice: boolean): void => {\n    trackCustomEvent({\n      eventCategory: `Page is helpful feedback`,\n      eventAction: `Clicked`,\n      eventName: String(choice),\n    })\n    setFeedbackSubmitted(true)\n  }\n  const handleSurveyOpen = (): void => {\n    trackCustomEvent({\n      eventCategory: `Feedback survey opened`,\n      eventAction: `Clicked`,\n      eventName: \"Feedback survey opened\",\n    })\n    window && surveyUrl && window.open(surveyUrl, \"_blank\")\n  }\n  return (\n    <Flex\n      border=\"1px\"\n      borderColor=\"border\"\n      bg=\"feedbackGradient\"\n      borderRadius=\"base\"\n      p={6}\n      direction=\"column\"\n      mb={4}\n      mt={8}\n      w=\"full\"\n      {...props}\n    >\n      <Flex direction=\"column\" gap={4}>\n        <Heading as=\"h3\" m={0} mb={2} fontSize=\"1.375rem\" fontWeight=\"bold\">\n          {getTitle(feedbackSubmitted)}\n        </Heading>\n        {feedbackSubmitted && (\n          <p>\n            <Translation id=\"feedback-widget-thank-you-subtitle\" />{\" \"}\n            <Translation id=\"feedback-widget-thank-you-subtitle-ext\" />\n          </p>\n        )}\n        <Flex gap={4}>\n          {!feedbackSubmitted ? (\n            <>\n              <Button\n                variant=\"outline-color\"\n                leftIcon={<FeedbackThumbsUpIcon />}\n                onClick={() => handleSubmit(true)}\n              >\n                <Translation id=\"yes\" />\n              </Button>\n              <Button\n                variant=\"outline-color\"\n                leftIcon={<FeedbackThumbsUpIcon transform=\"scaleY(-1)\" />}\n                onClick={() => handleSubmit(false)}\n              >\n                <Translation id=\"no\" />\n              </Button>\n            </>\n          ) : (\n            <Button variant=\"outline-color\" onClick={handleSurveyOpen}>\n              <Translation id=\"feedback-widget-thank-you-cta\" />\n            </Button>\n          )}\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default FeedbackCard\n","import React from \"react\"\nimport { Box } from \"@chakra-ui/react\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  className?: string\n}\n\nconst GhostCard: React.FC<IProps> = ({ children, className }) => (\n  <Box position=\"relative\" mt=\"2\" alignSelf=\"stretch\" className={className}>\n    <Box\n      zIndex=\"hide\"\n      position=\"absolute\"\n      backgroundColor=\"ghostCardGhost\"\n      bottom=\"2\"\n      left=\"2\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      borderRadius=\"2px\"\n      height=\"full\"\n      width=\"full\"\n    />\n    <Box\n      className=\"ghost-card-base\"\n      height=\"full\"\n      width=\"full\"\n      borderRadius=\"2px\"\n      zIndex={2}\n      padding=\"6\"\n      background=\"ghostCardBackground\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      textAlign=\"left\"\n    >\n      {children}\n    </Box>\n  </Box>\n)\n\nexport default GhostCard\n","import React, { ReactNode } from \"react\"\nimport Emoji from \"./Emoji\"\nimport { Text, Box, Flex } from \"@chakra-ui/react\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  emoji: string\n  title?: ReactNode\n  description: ReactNode\n  className?: string\n  emojiSize?: number\n}\n\nconst HorizontalCard: React.FC<IProps> = ({\n  emoji,\n  title,\n  description,\n  children,\n  className,\n  emojiSize,\n}) => (\n  <Flex borderRadius=\"base\" className={className}>\n    <Emoji fontSize={`${emojiSize}rem`} text={emoji} />\n    <Box flexGrow=\"0\" flexShrink=\"1\" flexBasis=\"75%\" ml=\"8\">\n      <Text fontSize=\"lg\">{title}</Text>\n      <Text opacity=\"0.8\" mt=\"-4\" mb=\"2\">\n        {description}\n      </Text>\n      {children}\n    </Box>\n  </Flex>\n)\n\nexport default HorizontalCard\n","import React from \"react\"\nimport { Flex } from \"@chakra-ui/react\"\nimport Emoji from \"./Emoji\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  className?: string\n  emoji?: string\n  isWarning?: boolean\n  shouldCenter?: boolean\n  shouldSpaceBetween?: boolean\n}\n\nconst InfoBanner: React.FC<IProps> = ({\n  children,\n  className,\n  emoji,\n  isWarning = false,\n  shouldCenter = false,\n  shouldSpaceBetween = false,\n  ...props\n}) => {\n  const banner = (\n    <Flex\n      align=\"center\"\n      p={6}\n      borderRadius={\"sm\"}\n      maxW={shouldCenter ? \"55rem\" : \"100%\"}\n      color=\"black300\"\n      bg={isWarning ? \"warning\" : \"infoBanner\"}\n      direction={{ base: \"column\", sm: \"row\" }}\n      {...props}\n    >\n      {emoji && (\n        <Emoji\n          flexGrow=\"0\"\n          flexShrink=\"0\"\n          mr={{ base: 0, sm: 6 }}\n          mb={{ base: 2, sm: 0 }}\n          alignSelf={{ base: \"flex-start\", sm: \"auto\" }}\n          text={emoji}\n          fontSize=\"4xl\"\n        />\n      )}\n      <Flex\n        display={{ base: \"block\", sm: shouldSpaceBetween ? \"flex\" : \"block\" }}\n        align={shouldSpaceBetween ? \"center\" : \"auto\"}\n        w={shouldSpaceBetween ? \"100%\" : \"auto\"}\n        justify={shouldSpaceBetween ? \"space-between\" : \"auto\"}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  )\n  return shouldCenter ? <Flex justify=\"center\">{banner}</Flex> : banner\n}\n\nexport default InfoBanner\n","import React, { ReactNode } from \"react\"\nimport { Box, Flex, Heading, Wrap, WrapItem } from \"@chakra-ui/react\"\n\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\n\nimport ButtonLink, { IProps as IButtonLinkProps } from \"./ButtonLink\"\nimport Button, { IProps as IButtonProps } from \"./Button\"\n\nexport interface IButtonLink extends IButtonLinkProps {\n  content: ReactNode\n}\n\nexport interface IButton extends IButtonProps {\n  content: ReactNode\n}\n\nexport interface IContent {\n  buttons?: Array<IButtonLink | IButton>\n  title: ReactNode\n  header: ReactNode\n  subtitle: ReactNode\n  image: IGatsbyImageData\n  alt: string\n}\n\nexport interface IProps {\n  content: IContent\n  isReverse?: boolean\n  children?: ReactNode\n  className?: string\n}\n\nfunction isButtonLink(button: IButton | IButtonLink): button is IButtonLink {\n  return (button as IButtonLink).to !== undefined\n}\n\nconst PageHero: React.FC<IProps> = ({\n  content,\n  isReverse = false,\n  children,\n  className,\n}) => {\n  const { buttons, title, header, subtitle, image, alt } = content\n  return (\n    <Box py={4} px={8} width=\"full\">\n      <Flex\n        justifyContent=\"space-between\"\n        mt={8}\n        px={{ base: 0, lg: 16 }}\n        direction={{ base: isReverse ? \"column\" : \"column-reverse\", lg: \"row\" }}\n        className={className}\n      >\n        <Box\n          maxW={{ base: \"full\", lg: \"container.sm\" }}\n          py={{ base: 16, lg: 32 }}\n          pl={{ base: 0, lg: 8 }}\n          mr={4}\n        >\n          <Heading\n            as=\"h1\"\n            textTransform=\"uppercase\"\n            fontSize=\"md\"\n            fontWeight=\"normal\"\n            mb={4}\n            color=\"text300\"\n            lineHeight={1.4}\n          >\n            {title}\n          </Heading>\n          <Heading\n            as=\"h2\"\n            fontWeight=\"bold\"\n            fontSize={{ base: \"2.5rem\", lg: \"5xl\" }}\n            maxW=\"full\"\n            mb={0}\n            color=\"text00\"\n            lineHeight={1.4}\n          >\n            {header}\n          </Heading>\n          <Box\n            fontSize={{ base: \"xl\", lg: \"2xl\" }}\n            lineHeight={1.4}\n            color=\"text200\"\n            mt={4}\n            mb={8}\n          >\n            {subtitle}\n          </Box>\n          {buttons && (\n            <Wrap spacing={2}>\n              {buttons.map((button, idx) => {\n                if (isButtonLink(button)) {\n                  return (\n                    <WrapItem>\n                      <ButtonLink\n                        key={idx}\n                        variant={button.variant}\n                        to={button.to}\n                      >\n                        {button.content}\n                      </ButtonLink>\n                    </WrapItem>\n                  )\n                }\n\n                if (button.toId) {\n                  return (\n                    <WrapItem>\n                      <Button\n                        key={idx}\n                        variant={button.variant}\n                        toId={button.toId}\n                      >\n                        {button.content}\n                      </Button>\n                    </WrapItem>\n                  )\n                }\n              })}\n            </Wrap>\n          )}\n          {children}\n        </Box>\n        <Box\n          as={GatsbyImage}\n          flex=\"1 1 50%\"\n          alignSelf=\"center\"\n          mt={{ base: 0, lg: 12 }}\n          ml={{ base: 0, lg: 12 }}\n          w=\"full\"\n          maxWidth={{ base: \"560px\", lg: \"624px\" }}\n          image={image}\n          imgStyle={{\n            objectFit: \"contain\",\n          }}\n          alt={alt}\n          loading=\"eager\"\n        />\n      </Flex>\n    </Box>\n  )\n}\n\nexport default PageHero\n","import React from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { Box, Flex, Heading, Image, useColorModeValue } from \"@chakra-ui/react\"\n\nimport ButtonLink from \"./ButtonLink\"\nimport Translation from \"./Translation\"\n\nexport interface Content {\n  title: string\n  description: string\n  link?: string\n  image?: any\n  alt: string\n  id?: string\n}\n\nexport interface IProps {\n  content: Array<Content>\n  category: string\n}\n\nconst ProductList: React.FC<IProps> = ({ content, category }) => {\n  const shadow = useColorModeValue(\"tableBox.light\", \"tableBox.dark\")\n\n  return (\n    <Box width=\"full\">\n      <Heading\n        as=\"h3\"\n        fontSize=\"2xl\"\n        borderBottom=\"2px solid\"\n        borderColor=\"border\"\n        paddingBottom={4}\n        marginBottom={0}\n      >\n        {category}\n      </Heading>\n      {content.map(({ title, description, link, image, alt, id }, idx) => (\n        <Flex\n          key={id || idx}\n          color=\"text\"\n          marginBottom=\"px\"\n          marginTop={8}\n          alignItems={{ sm: \"flex-start\" }}\n        >\n          <Box width=\"5rem\">\n            {image && (\n              <Image\n                as={GatsbyImage}\n                image={image}\n                alt={alt}\n                boxShadow={shadow}\n                borderRadius=\"sm\"\n              />\n            )}\n          </Box>\n          <Flex\n            paddingBottom={4}\n            width=\"full\"\n            alignItems={{ base: \"flex-start\", sm: \"center\" }}\n            marginLeft={{ base: 4, sm: 6 }}\n            justifyContent=\"space-between\"\n            borderBottom=\"1px solid\"\n            borderColor=\"border\"\n            flexDir={{ base: \"column\", sm: \"row\" }}\n          >\n            <Box flexDir=\"column\">\n              <Box>{title}</Box>\n              <Box fontSize=\"sm\" marginBottom={0} opacity=\"0.6\">\n                {description}\n              </Box>\n            </Box>\n            {link && (\n              <ButtonLink\n                variant=\"outline\"\n                to={link}\n                marginLeft={{ base: 0, sm: 8 }}\n                paddingY={1}\n                paddingX={6}\n                borderRadius=\"sm\"\n                marginTop={{ base: 4, sm: 0 }}\n              >\n                <Translation id=\"page-dapps-ready-button\" />\n              </ButtonLink>\n            )}\n          </Flex>\n        </Flex>\n      ))}\n    </Box>\n  )\n}\n\nexport default ProductList\n","import React from \"react\"\n\nimport Translation from \"./Translation\"\nimport {\n  Flex,\n  Image,\n  LinkBox,\n  LinkOverlay,\n  Table,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n  useToken,\n} from \"@chakra-ui/react\"\nimport Link from \"./Link\"\n\nexport interface TableRow {\n  name: string\n  marketCap: string\n  image?: string\n  type: string\n  url?: string\n}\n\nexport interface IProps {\n  columns: Array<string>\n  content: Array<TableRow>\n  hasError: boolean\n}\n\n// TODO generalize this component - currently tailored for stablecoin market caps\nconst SimpleTable: React.FC<IProps> = ({ columns, content, hasError }) => {\n  const [textColor] = useToken(\"colors\", [\"text\"])\n\n  return (\n    <Table\n      variant=\"unstyled\"\n      my={8}\n      borderRadius=\"sm\"\n      border={`1px solid ${textColor}`}\n      bg=\"background\"\n      mb={8}\n      minW=\"720px\"\n    >\n      <Thead bg=\"ednBackground\" color=\"text200\">\n        <Tr boxShadow={`0 1px 1px ${textColor}`} mb=\"1px\">\n          {columns.map((column, idx) => (\n            <Th\n              key={idx}\n              py={5}\n              fontSize=\"md\"\n              fontWeight=\"normal\"\n              letterSpacing=\"normal\"\n            >\n              {column}\n            </Th>\n          ))}\n\n          {content && content[0]?.url && (\n            <Th p={5} fontSize=\"md\" fontWeight=\"normal\" textAlign=\"end\">\n              ↗\n            </Th>\n          )}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {hasError && (\n          <Tr p={4}>\n            <Td colSpan={4}>\n              <Translation id=\"page-stablecoins-table-error\" />\n            </Td>\n          </Tr>\n        )}\n        {!hasError && content.length === 0 && (\n          <Tr p={4}>\n            <Td colSpan={4}>\n              <Translation id=\"page-stablecoins-table-loading\" />\n            </Td>\n          </Tr>\n        )}\n\n        {content.map(({ name, marketCap, image, type, url }, idx) => (\n          <LinkBox\n            as={Tr}\n            key={idx}\n            color=\"text\"\n            boxShadow={`0 1px 1px ${textColor}`}\n            _hover={{\n              textDecoration: \"none\",\n              boxShadow: `0 0 1px ${textColor}`,\n              bg: \"primary200\",\n              color: \"black300\",\n              cursor: url ? \"pointer\" : \"default\",\n            }}\n            _focus={{\n              boxShadow: `0 0 1px ${textColor}`,\n              bg: \"primary200\",\n              color: \"black300\",\n            }}\n          >\n            <Td>\n              <Flex align=\"center\">\n                {image && <Image src={image} alt=\"\" mr={4} boxSize={6} />}\n                {url ? (\n                  <LinkOverlay\n                    as={Link}\n                    hideArrow\n                    to={url}\n                    color=\"inherit\"\n                    textDecoration=\"inherit\"\n                    _hover={{\n                      textDecoration: \"inherit\",\n                    }}\n                    isExternal\n                  >\n                    {name}\n                  </LinkOverlay>\n                ) : (\n                  <>{name}</>\n                )}\n              </Flex>\n            </Td>\n            <Td>\n              <Flex align=\"center\">{marketCap}</Flex>\n            </Td>\n            <Td>\n              <Flex align=\"center\">{type}</Flex>\n            </Td>\n            {url && (\n              <Td color=\"primary\">\n                <Flex align=\"center\" justify=\"flex-end\">\n                  ↗\n                </Flex>\n              </Td>\n            )}\n          </LinkBox>\n        ))}\n      </Tbody>\n    </Table>\n  )\n}\nexport default SimpleTable\n","import React from \"react\"\nimport { Flex, FlexProps } from \"@chakra-ui/react\"\n\nexport interface IProps extends FlexProps {\n  children?: React.ReactNode\n  className?: string\n  isSecondary?: boolean\n  color?: string\n}\n\nconst Pill: React.FC<IProps> = ({\n  children,\n  className,\n  isSecondary,\n  background,\n  ...rest\n}) => {\n  return isSecondary ? (\n    <Flex\n      border=\"1px\"\n      borderStyle=\"solid\"\n      borderColor=\"primary100\"\n      color=\"text\"\n      textTransform=\"uppercase\"\n      textAlign=\"center\"\n      display=\"inline-block\"\n      py={1}\n      px={2}\n      borderRadius=\"base\"\n      fontSize=\"xs\"\n      className={className}\n      {...rest}\n    >\n      {children}\n    </Flex>\n  ) : (\n    <Flex\n      background={background ?? \"primary100\"}\n      display=\"inline-block\"\n      color=\"black300\"\n      textTransform=\"uppercase\"\n      textAlign=\"center\"\n      py={1}\n      px={2}\n      mr={2}\n      fontSize=\"xs\"\n      borderRadius=\"base\"\n      className={className}\n      {...rest}\n    >\n      {children}\n    </Flex>\n  )\n}\n\nexport default Pill\n","import { TranslationKey } from \"../../utils/translations\"\n\nexport type CategoryNameType = \"dapps\" | \"buy\" | \"earn\" | \"generate\"\n\ntype AccordionButtonContentType = {\n  emoji: string\n  title: TranslationKey\n  pill?: {\n    color: string\n    name: TranslationKey\n  }\n  textPreview: TranslationKey\n}\n\nexport const accordionButtonContent: {\n  [key in CategoryNameType]: AccordionButtonContentType\n} = {\n  dapps: {\n    emoji: \":twisted_rightwards_arrows:\",\n    title: \"page-stablecoins-accordion-swap-title\",\n    pill: {\n      color: \"success100\",\n      name: \"page-stablecoins-accordion-swap-pill\",\n    },\n    textPreview: \"page-stablecoins-accordion-swap-text-preview\",\n  },\n  buy: {\n    emoji: \":shopping_bags:\",\n    title: \"page-stablecoins-accordion-buy-title\",\n    textPreview: \"page-stablecoins-accordion-buy-text-preview\",\n  },\n  earn: {\n    emoji: \":money_bag:\",\n    title: \"page-stablecoins-accordion-earn-title\",\n    textPreview: \"page-stablecoins-accordion-earn-text-preview\",\n  },\n  generate: {\n    emoji: \":handshake:\",\n    title: \"page-stablecoins-accordion-borrow-title\",\n    pill: {\n      color: \"warning\",\n      name: \"page-stablecoins-accordion-borrow-pill\",\n    },\n    textPreview: \"page-stablecoins-accordion-borrow-text-preview\",\n  },\n}\n","import React, { ReactNode } from \"react\"\nimport {\n  AccordionButton,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  BoxProps,\n  Flex,\n  Heading,\n  Text,\n} from \"@chakra-ui/react\"\nimport Emoji from \"../Emoji\"\nimport Pill from \"../Pill\"\nimport Translation from \"../Translation\"\nimport { ChildOnlyType } from \".\"\nimport { accordionButtonContent, CategoryNameType } from \"./utils\"\n\nexport const LeftColumnPanel = (props: ChildOnlyType & Partial<BoxProps>) => (\n  <Box flex=\"0 0 50%\" maxW={{ lg: \"75%\" }} mr={{ lg: 16 }} {...props} />\n)\n\nexport const RightColumnPanel = (props: ChildOnlyType) => (\n  <LeftColumnPanel mr={0} flex=\"0 1 50%\" mt={{ base: 12, lg: 0 }} {...props} />\n)\n\nconst MoreOrLessLink = ({ isOpen }: { isOpen: boolean }) => {\n  return (\n    <Box mr={6} color=\"primary\">\n      {isOpen ? (\n        <Translation id=\"page-stablecoins-accordion-less\" />\n      ) : (\n        <Translation id=\"page-stablecoins-accordion-more\" />\n      )}\n    </Box>\n  )\n}\n\ninterface AccordionCustomItemProps {\n  /**\n   * The category name of each accordion section\n   */\n  category: CategoryNameType\n  children: ReactNode\n}\n\nexport const AccordionCustomItem = (props: AccordionCustomItemProps) => {\n  const { category, children } = props\n\n  const contentObj = accordionButtonContent[category]\n\n  return (\n    <AccordionItem border=\"1px\" borderColor=\"border !important\">\n      {({ isExpanded }) => (\n        <>\n          <AccordionButton\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            p={0}\n            _hover={{ background: \"ednBackground\" }}\n          >\n            <Flex\n              alignItems={{ base: \"flex-start\", lg: \"center\" }}\n              flexDirection={{ base: \"column\", md: \"row\" }}\n              m={6}\n              me={4}\n              {...props}\n            >\n              <Emoji\n                text={contentObj.emoji}\n                me={6}\n                mb={{ base: 2, md: 0 }}\n                fontSize={{ base: \"3rem\", md: \"4rem\" }}\n              />\n              <Box>\n                <Flex alignItems=\"center\" mb={2}>\n                  <Heading\n                    as=\"h3\"\n                    fontSize={{ base: \"1.25rem\", md: \"1.5rem\" }}\n                    lineHeight={1.4}\n                    my={0}\n                  >\n                    <Translation id={contentObj.title} />\n                  </Heading>\n                  {!!contentObj.pill && (\n                    <Pill ml={4} background={contentObj.pill.color}>\n                      <Translation id={contentObj.pill.name} />\n                    </Pill>\n                  )}\n                </Flex>\n                <Text color=\"text200\" mb={0} textAlign=\"start\">\n                  <Translation id={contentObj.textPreview} />\n                </Text>\n              </Box>\n            </Flex>\n            <MoreOrLessLink isOpen={isExpanded} />\n          </AccordionButton>\n          <AccordionPanel\n            background=\"ednBackground\"\n            border=\"1px\"\n            borderColor=\"border\"\n            mb=\"-1px\"\n            mx=\"-1px\"\n            p={0}\n          >\n            <Flex\n              p={8}\n              justifyContent=\"space-between\"\n              flexDirection={{ base: \"column\", lg: \"row\" }}\n            >\n              {children}\n            </Flex>\n          </AccordionPanel>\n        </>\n      )}\n    </AccordionItem>\n  )\n}\n","import { useStaticQuery, graphql } from \"gatsby\"\nimport { getImage } from \"gatsby-plugin-image\"\nimport { useIntl } from \"react-intl\"\nimport { CardListItem } from \"../CardList\"\nimport { translateMessageId } from \"../../utils/translations\"\n\nexport const useStablecoinAccordion = () => {\n  const intl = useIntl()\n  const data = useStaticQuery(graphql`\n    {\n      uniswap: file(relativePath: { eq: \"dapps/uni.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      compound: file(relativePath: { eq: \"dapps/compound.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      aave: file(relativePath: { eq: \"dapps/aave.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      oasis: file(relativePath: { eq: \"dapps/stabledai.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      gitcoin: file(relativePath: { eq: \"dapps/gitcoin.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      maker: file(relativePath: { eq: \"stablecoins/maker.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      eth: file(relativePath: { eq: \"favicon.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      oneinch: file(relativePath: { eq: \"exchanges/1inch.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      loopring: file(relativePath: { eq: \"dapps/loopring.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      matcha: file(relativePath: { eq: \"dapps/matcha.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      coinbase: file(relativePath: { eq: \"exchanges/coinbase.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      kraken: file(relativePath: { eq: \"exchanges/kraken.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      coinmama: file(relativePath: { eq: \"exchanges/coinmama.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      gemini: file(relativePath: { eq: \"exchanges/gemini.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      binance: file(relativePath: { eq: \"exchanges/binance.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n      bittrex: file(relativePath: { eq: \"exchanges/bittrex.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 24\n            layout: FIXED\n            placeholder: BLURRED\n            quality: 100\n          )\n        }\n      }\n    }\n  `)\n\n  const dapps: Array<CardListItem> = [\n    {\n      title: \"Uniswap\",\n      image: getImage(data.uniswap)!,\n      link: \"https://uniswap.org\",\n      alt: translateMessageId(\"uniswap-logo\", intl),\n    },\n    {\n      title: \"Loopring\",\n      image: getImage(data.loopring)!,\n      link: \"https://loopring.org\",\n      alt: translateMessageId(\"loopring-logo\", intl),\n    },\n    {\n      title: \"1inch\",\n      image: getImage(data.oneinch)!,\n      link: \"https://app.1inch.io\",\n      alt: translateMessageId(\"1inch-logo\", intl),\n    },\n    {\n      title: \"Matcha\",\n      image: getImage(data.matcha)!,\n      link: \"https://matcha.xyz\",\n      alt: translateMessageId(\"matcha-logo\", intl),\n    },\n  ]\n\n  const borrow: Array<CardListItem> = [\n    {\n      title: \"Compound\",\n      image: getImage(data.compound)!,\n      link: \"https://compound.finance\",\n      alt: translateMessageId(\"compound-logo\", intl),\n    },\n    {\n      title: \"Aave\",\n      image: getImage(data.aave)!,\n      link: \"https://aave.com\",\n      alt: translateMessageId(\"aave-logo\", intl),\n    },\n    {\n      title: \"Oasis\",\n      image: getImage(data.oasis)!,\n      link: \"https://oasis.app\",\n      alt: translateMessageId(\"oasis-logo\", intl),\n    },\n  ]\n\n  const earn: Array<CardListItem> = [\n    {\n      title: translateMessageId(\n        \"page-stablecoins-accordion-earn-project-bounties\",\n        intl\n      ),\n      image: getImage(data.gitcoin)!,\n      link: \"https://gitcoin.co/explorer\",\n      description: translateMessageId(\n        \"page-stablecoins-accordion-earn-project-1-description\",\n        intl\n      ),\n      alt: translateMessageId(\"gitcoin-logo\", intl),\n    },\n    {\n      title: translateMessageId(\n        \"page-stablecoins-accordion-earn-project-community\",\n        intl\n      ),\n      image: getImage(data.maker)!,\n      link: \"https://makerdao.world/en/resources/\",\n      description: translateMessageId(\n        \"page-stablecoins-accordion-earn-project-2-description\",\n        intl\n      ),\n      alt: translateMessageId(\"makerdao-logo\", intl),\n    },\n    {\n      title: translateMessageId(\n        \"page-stablecoins-accordion-earn-project-bug-bounties\",\n        intl\n      ),\n      image: getImage(data.eth)!,\n      link: \"/bug-bounty/\",\n      description: translateMessageId(\n        \"page-stablecoins-accordion-earn-project-3-description\",\n        intl\n      ),\n      alt: translateMessageId(\"ethereum-logo\", intl),\n    },\n  ]\n\n  const exchanges: Array<CardListItem> = [\n    {\n      title: \"Coinbase\",\n      image: getImage(data.coinbase)!,\n      link: \"https://coinbase.com\",\n      alt: translateMessageId(\"coinbase-logo\", intl),\n    },\n    {\n      title: \"Gemini\",\n      image: getImage(data.gemini)!,\n      link: \"https://gemini.com\",\n      alt: translateMessageId(\"gemini-logo\", intl),\n    },\n    {\n      title: \"Kraken\",\n      image: getImage(data.kraken)!,\n      link: \"https://kraken.com\",\n      alt: translateMessageId(\"kraken-logo\", intl),\n    },\n    {\n      title: \"Coinmama\",\n      image: getImage(data.coinmama)!,\n      link: \"https://coinmama.com\",\n      alt: translateMessageId(\"coinmama-logo\", intl),\n    },\n    {\n      title: \"Bittrex\",\n      image: getImage(data.bittrex)!,\n      link: \"https://global.bittrex.com\",\n      alt: translateMessageId(\"bittrex-logo\", intl),\n    },\n    {\n      title: \"Binance\",\n      image: getImage(data.binance)!,\n      link: \"https://binance.com\",\n      alt: translateMessageId(\"binance-logo\", intl),\n    },\n  ]\n\n  return {\n    cardListGroups: {\n      dapps,\n      borrow,\n      earn,\n      exchanges,\n    },\n  }\n}\n","import React, { ReactNode } from \"react\"\nimport {\n  Accordion,\n  Box,\n  Flex,\n  Heading,\n  Icon,\n  LinkBox,\n  LinkOverlay,\n  Text,\n} from \"@chakra-ui/react\"\nimport { MdArrowForward } from \"react-icons/md\"\nimport ButtonLink from \"../ButtonLink\"\nimport CardList from \"../CardList\"\nimport InfoBanner from \"../InfoBanner\"\nimport Link from \"../Link\"\nimport Translation from \"../Translation\"\nimport {\n  AccordionCustomItem,\n  LeftColumnPanel,\n  RightColumnPanel,\n} from \"./AccordionCustomItem\"\nimport { useStablecoinAccordion } from \"./useStablecoinAccordion\"\nimport { TranslationKey } from \"../../utils/translations\"\n\nexport type ChildOnlyType = {\n  children: ReactNode\n}\n\nconst SectionTitle = (props: ChildOnlyType) => (\n  <Heading\n    as=\"h4\"\n    fontSize=\"1.25rem\"\n    fontWeight={700}\n    lineHeight=\"22px\"\n    textAlign=\"left\"\n    mt={0}\n    {...props}\n  />\n)\n\nconst StepBoxContainer = (props: ChildOnlyType) => (\n  <Box mt={4} mb={8} {...props} />\n)\n\nconst StepBox = (\n  props: { to: string } & Record<\"titleId\" | \"descId\", TranslationKey>\n) => (\n  <Flex\n    as={LinkBox}\n    alignItems={{ base: \"flex-start\", md: \"normal\" }}\n    background=\"background\"\n    border=\"1px\"\n    borderColor=\"border\"\n    color=\"text\"\n    flexDirection={{ base: \"column\", md: \"row\" }}\n    p={4}\n    sx={{\n      \"&:not(:first-of-type)\": {\n        mt: \"-1px\",\n      },\n    }}\n    _hover={{\n      background: \"ednBackground\",\n      transition: \"transform 0.2s\",\n      transform: \"scale(1.05)\",\n    }}\n  >\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\n      <Box>\n        <LinkOverlay\n          as={Link}\n          color=\"inherit\"\n          textDecoration=\"inherit\"\n          to={props.to}\n          fontWeight={700}\n          textAlign=\"left\"\n          _hover={{\n            textDecoration: \"inherit\",\n          }}\n        >\n          <Translation id={props.titleId} />\n        </LinkOverlay>\n        <Text mb={0}>\n          <Translation id={props.descId} />\n        </Text>\n      </Box>\n      <Icon as={MdArrowForward} ml={4} minW={6} />\n    </Flex>\n  </Flex>\n)\n\nconst H4 = (props: ChildOnlyType) => (\n  <Heading fontSize=\"1.25rem\" fontWeight={700} mt={0} mb={4} {...props} />\n)\n\nexport interface IProps {}\n\nconst StablecoinAccordion: React.FC<IProps> = () => {\n  const { cardListGroups } = useStablecoinAccordion()\n\n  return (\n    <Accordion\n      borderRadius=\"base\"\n      mt={12}\n      width=\"full\"\n      allowToggle\n      reduceMotion\n    >\n      <AccordionCustomItem category=\"dapps\">\n        <LeftColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-requirements\" />\n          </SectionTitle>\n          <StepBoxContainer>\n            <StepBox\n              to=\"/wallets/\"\n              titleId=\"page-stablecoins-accordion-swap-requirement-1\"\n              descId=\"page-stablecoins-accordion-swap-requirement-1-description\"\n            />\n            <StepBox\n              to=\"/get-eth/\"\n              titleId=\"page-stablecoins-accordion-swap-requirement-2\"\n              descId=\"page-stablecoins-accordion-swap-requirement-2-description\"\n            />\n          </StepBoxContainer>\n          <InfoBanner emoji=\":light_bulb:\">\n            <H4>\n              <Translation id=\"page-stablecoins-accordion-swap-editors-tip\" />\n            </H4>\n            <Text>\n              <Translation id=\"page-stablecoins-accordion-swap-editors-tip-copy\" />\n            </Text>\n            <ButtonLink to=\"/wallets/find-wallet/?filters=has_card_deposits,has_dex_integrations\">\n              <Translation id=\"page-stablecoins-accordion-swap-editors-tip-button\" />\n            </ButtonLink>\n          </InfoBanner>\n        </LeftColumnPanel>\n        <RightColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-swap-dapp-title\" />\n          </SectionTitle>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-swap-dapp-intro\" />{\" \"}\n            <Link to=\"/get-eth/#dex\">\n              <Translation id=\"page-stablecoins-accordion-swap-dapp-link\" />\n            </Link>\n          </p>\n          <CardList content={cardListGroups.dapps} />\n        </RightColumnPanel>\n      </AccordionCustomItem>\n      <AccordionCustomItem category=\"buy\">\n        <LeftColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-requirements\" />\n          </SectionTitle>\n          <Text>\n            <Translation id=\"page-stablecoins-accordion-buy-requirements-description\" />\n          </Text>\n          <StepBoxContainer>\n            <StepBox\n              to=\"/get-eth/\"\n              titleId=\"page-stablecoins-accordion-buy-requirement-1\"\n              descId=\"page-stablecoins-accordion-buy-requirement-1-description\"\n            />\n          </StepBoxContainer>\n          <InfoBanner isWarning={true}>\n            <Translation id=\"page-stablecoins-accordion-buy-warning\" />\n          </InfoBanner>\n        </LeftColumnPanel>\n        <RightColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-buy-exchanges-title\" />\n          </SectionTitle>\n          <CardList content={cardListGroups.exchanges} />\n        </RightColumnPanel>\n      </AccordionCustomItem>\n      <AccordionCustomItem category=\"earn\">\n        <LeftColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-requirements\" />\n          </SectionTitle>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-earn-requirements-description\" />\n          </p>\n          <StepBoxContainer>\n            <StepBox\n              to=\"/wallets/\"\n              titleId=\"page-stablecoins-accordion-earn-requirement-1\"\n              descId=\"page-stablecoins-accordion-earn-requirement-1-description\"\n            />\n          </StepBoxContainer>\n        </LeftColumnPanel>\n        <RightColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-earn-projects-title\" />\n          </SectionTitle>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-earn-projects-copy\" />\n          </p>\n          <CardList content={cardListGroups.earn} />\n        </RightColumnPanel>\n      </AccordionCustomItem>\n      <AccordionCustomItem category=\"generate\">\n        <LeftColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-requirements\" />\n          </SectionTitle>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-borrow-requirements-description\" />\n          </p>\n          <StepBoxContainer>\n            <StepBox\n              to=\"/wallets/\"\n              titleId=\"page-stablecoins-accordion-borrow-requirement-1\"\n              descId=\"page-stablecoins-accordion-borrow-requirement-1-description\"\n            />\n            <StepBox\n              to=\"/get-eth/\"\n              titleId=\"page-stablecoins-accordion-borrow-requirement-2\"\n              descId=\"page-stablecoins-accordion-borrow-requirement-2-description\"\n            />\n          </StepBoxContainer>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-borrow-crypto-collateral\" />\n          </SectionTitle>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-borrow-crypto-collateral-copy\" />{\" \"}\n            <Link to=\"#how\">\n              <Translation id=\"page-stablecoins-accordion-borrow-crypto-collateral-link\" />\n            </Link>\n          </p>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-borrow-crypto-collateral-copy-p2\" />\n          </p>\n        </LeftColumnPanel>\n        <RightColumnPanel>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-borrow-places-title\" />\n          </SectionTitle>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-borrow-places-intro\" />\n          </p>\n          <Box mb={8}>\n            <CardList content={cardListGroups.borrow} />\n          </Box>\n          <SectionTitle>\n            <Translation id=\"page-stablecoins-accordion-borrow-risks-title\" />\n          </SectionTitle>\n          <p>\n            <Translation id=\"page-stablecoins-accordion-borrow-risks-copy\" />{\" \"}\n            <Link to=\"/eth/\">\n              <Translation id=\"page-stablecoins-accordion-borrow-risks-link\" />\n            </Link>\n          </p>\n        </RightColumnPanel>\n      </AccordionCustomItem>\n    </Accordion>\n  )\n}\n\nexport default StablecoinAccordion\n","import React, { useState } from \"react\"\nimport { Box, Flex, Heading, useColorModeValue } from \"@chakra-ui/react\"\nimport { useIntl } from \"react-intl\"\nimport Link, { navigate } from \"./Link\"\nimport Emoji from \"./Emoji\"\nimport Translation from \"./Translation\"\nimport { isMobile } from \"../utils/isMobile\"\n\n// Represent string as 32-bit integer\nconst hashCode = (string: string): number => {\n  let hash = 0\n  for (const char of string) {\n    const code = char.charCodeAt(0)\n    hash = (hash << 5) - hash + code\n    hash |= 0\n  }\n  return Math.abs(hash)\n}\n\n// Theme variables from Theme.js\nconst colors = [\n  \"gridYellow\",\n  \"gridBlue\",\n  \"gridGreen\",\n  \"gridOrange\",\n  \"gridPink\",\n  \"gridPurple\",\n]\n\ninterface ILink {\n  url: string\n  text: string\n}\n\ninterface IPropsGridItem {\n  description: string\n  columnNumber: number\n  rowNumber: number\n  emoji: string\n  index: number\n  title: string\n  isOpen: boolean\n  callback: (index: number) => void\n  color: string\n  pros?: Array<string>\n  cons?: Array<string>\n  links: Array<ILink>\n}\n\nconst OpenTitle: React.FC<{ title: string }> = ({ title }) => {\n  return (\n    <Heading\n      as=\"h3\"\n      fontSize={{ base: \"2rem\", sm: \"2.5rem\" }}\n      fontWeight={700}\n      marginTop={0}\n    >\n      {title}\n    </Heading>\n  )\n}\n\nconst Title: React.FC<{ title: string }> = ({ title }) => {\n  return (\n    <Heading\n      as=\"h3\"\n      fontSize={{ base: \"2rem\", sm: \"2.5rem\" }}\n      fontWeight={400}\n      marginTop={0}\n    >\n      {title}\n    </Heading>\n  )\n}\n\nconst Subtitle: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <Heading\n      as=\"h4\"\n      fontSize={{ base: \"2xl\", sm: \"2rem\" }}\n      fontWeight={600}\n      marginTop={0}\n      padding={2}\n      paddingBottom={4}\n      borderBottom=\"1px solid\"\n      borderColor=\"black300\"\n    >\n      {children}\n    </Heading>\n  )\n}\n\nconst Body: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <Box fontSize=\"xl\" lineHeight=\"140%\" color=\"black300\">\n      {children}\n    </Box>\n  )\n}\n\nconst StyledEmoji: React.FC<{ emoji: string }> = ({ emoji }) => {\n  return (\n    <Emoji\n      fontSize=\"8xl\"\n      text={emoji}\n      margin={2}\n      alignSelf=\"center\"\n      order=\"2\"\n      _hover={{\n        transition: \"transform 50s\",\n        transform: \"rotate(10turn)\",\n      }}\n    />\n  )\n}\n\nconst Row: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <Flex\n      justify=\"space-between\"\n      marginTop={8}\n      direction={{ base: \"column\", md: \"row\" }}\n    >\n      {children}\n    </Flex>\n  )\n}\n\nconst Column: React.FC<{ children: any }> = ({ children }) => {\n  return <Box width=\"100%\">{children}</Box>\n}\n\nconst GridItem: React.FC<IPropsGridItem> = ({\n  description,\n  columnNumber,\n  rowNumber,\n  emoji,\n  index,\n  title,\n  isOpen,\n  callback,\n  color,\n  pros,\n  cons,\n  links,\n}) => {\n  const handleClick = (): void => {\n    callback(index)\n  }\n  const shadow = useColorModeValue(\"tableBox.light\", \"tableBox.dark\")\n\n  return (\n    <Flex\n      id={`type-${index}`}\n      onClick={() => handleClick()}\n      gridRowStart={isOpen ? rowNumber : `auto`}\n      gridRowEnd={isOpen ? `span 3` : `auto`}\n      gridColumnStart={isOpen ? columnNumber : `auto`}\n      color={isOpen ? \"black300\" : \"text\"}\n      cursor={isOpen ? `auto` : `pointer`}\n      background={isOpen ? color : \"background\"}\n      direction={{\n        base: \"column\",\n        sm: `${isOpen ? \"column\" : \"row\"}`,\n        lg: \"column\",\n      }}\n      justify={{\n        base: `${isOpen ? \"flex-start\" : \"space-between\"}`,\n        lg: \"flex-start\",\n      }}\n      align={{ base: \"center\", lg: \"flex-start\" }}\n      border=\"1px solid\"\n      borderColor=\"text\"\n      padding={6}\n      _hover={{\n        background: isOpen ? color : \"ednBackground\",\n        transition: isOpen ? \"auto\" : \"transform 0.5s\",\n        transform: isOpen ? \"auto\" : \"skewX(-5deg)\",\n        boxShadow: shadow,\n      }}\n    >\n      {isOpen ? (\n        <Emoji mb={8} text={emoji} fontSize=\"8xl\" />\n      ) : (\n        <>\n          <StyledEmoji emoji={emoji} />\n          <Title title={title} />\n        </>\n      )}\n      <div>\n        {isOpen && (\n          <div>\n            <OpenTitle title={title} />\n            <Body>{description}</Body>\n            <Row>\n              {pros && (\n                <Column>\n                  <Subtitle>\n                    <Translation id=\"pros\" />\n                  </Subtitle>\n\n                  <Body>\n                    <ul>\n                      {pros.map((pro, idx) => (\n                        <li key={idx}>{pro}</li>\n                      ))}\n                    </ul>\n                  </Body>\n                </Column>\n              )}\n              {cons && (\n                <Column>\n                  <Subtitle>\n                    <Translation id=\"cons\" />\n                  </Subtitle>\n                  <Body>\n                    <ul>\n                      {cons.map((con, idx) => (\n                        <li key={idx}>{con}</li>\n                      ))}\n                    </ul>\n                  </Body>\n                </Column>\n              )}\n            </Row>\n            <div>\n              <Subtitle>\n                <Translation id=\"example-projects\" />\n              </Subtitle>\n              <Body>\n                <ul>\n                  {links.map((link, idx) => (\n                    <li key={idx}>\n                      <Link\n                        key={idx}\n                        to={link.url}\n                        color=\"black300\"\n                        _hover={{\n                          color: \"black\",\n                        }}\n                      >\n                        {link.text}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </Body>\n            </div>\n          </div>\n        )}\n      </div>\n    </Flex>\n  )\n}\n\nexport interface IPropsBoxItem {\n  description: string\n  emoji: string\n  title: string\n  pros?: Array<string>\n  cons?: Array<string>\n  links: Array<ILink>\n}\n\nexport interface IProps {\n  items: Array<IPropsBoxItem>\n}\n\nconst StablecoinBoxGrid: React.FC<IProps> = ({ items }) => {\n  const intl = useIntl()\n  const [indexOpen, setOpenIndex] = useState<number>(0)\n\n  // TODO generalize\n  const handleSelect = (idx: number): void => {\n    setOpenIndex(idx)\n    if (isMobile()) {\n      navigate(`/stablecoins/#type-${idx}`, intl)\n    }\n  }\n\n  return (\n    <Box\n      gridTemplateColumns=\"3fr 1fr\"\n      gridTemplateRows=\"3fr 3fr\"\n      borderRadius=\"sm\"\n      my={16}\n      display={{ base: \"flex\", lg: \"grid\" }}\n      flexDirection=\"column\"\n      maxW=\"100%\"\n    >\n      {items.map((item, idx) => {\n        let columnNumber = 1\n        let rowNumber = 1\n        const colorIdx = hashCode(item.emoji) % colors.length\n        const color = colors[colorIdx]\n        return (\n          <GridItem\n            key={idx}\n            title={item.title}\n            emoji={item.emoji}\n            description={item.description}\n            pros={item.pros}\n            cons={item.cons}\n            links={item.links}\n            index={idx}\n            columnNumber={columnNumber}\n            rowNumber={rowNumber}\n            isOpen={idx === indexOpen}\n            callback={handleSelect}\n            color={color}\n          />\n        )\n      })}\n    </Box>\n  )\n}\n\nexport default StablecoinBoxGrid\n","import React, { ReactNode, useState } from \"react\"\nimport { Box, useColorModeValue } from \"@chakra-ui/react\"\nimport * as utils from \"../utils/isMobile\"\n\nexport interface IProps {\n  content: ReactNode\n  children?: React.ReactNode\n}\n\n// TODO add `position` prop\nconst Tooltip: React.FC<IProps> = ({ content, children }) => {\n  const [isVisible, setIsVisible] = useState<boolean>(false)\n  const isMobile = utils.isMobile()\n  const shadow = useColorModeValue(\"tableBox.light\", \"tableBox.dark\")\n\n  return (\n    <>\n      {isVisible && isMobile && (\n        // Invisible full screen div \"below\" the clickable link\n        // Added so clicking away anywhere will hide Tooltip\n        <Box\n          position=\"fixed\"\n          top={0}\n          left={0}\n          w=\"full\"\n          h=\"full\"\n          zIndex={1}\n          onClick={() => setIsVisible(false)}\n        />\n      )}\n      <Box\n        position=\"relative\"\n        display=\"inline-flex\"\n        userSelect=\"none\"\n        cursor=\"pointer\"\n        title=\"More info\"\n        onMouseEnter={!isMobile ? () => setIsVisible(true) : undefined}\n        onMouseLeave={!isMobile ? () => setIsVisible(false) : undefined}\n        onClick={isMobile ? () => setIsVisible(!isVisible) : undefined}\n      >\n        {children}\n        {isVisible && (\n          <Box\n            textAlign=\"center\"\n            whiteSpace=\"normal\"\n            w={{ base: \"140px\", md: \"200px\" }}\n            color=\"text\"\n            bg=\"background\"\n            boxShadow={shadow}\n            position=\"absolute\"\n            zIndex=\"docked\"\n            py={4}\n            px={2}\n            textTransform=\"none\"\n            fontSize=\"sm\"\n            fontWeight=\"medium\"\n            cursor=\"default\"\n            borderRadius=\"base\"\n            bottom=\"125%\"\n            left=\"25%\"\n            transform=\"translateX(-50%)\"\n          >\n            <Box\n              as=\"span\"\n              position=\"absolute\"\n              bottom={-2}\n              left=\"calc(50% - 6px)\"\n              borderRightWidth={10}\n              borderRightStyle=\"solid\"\n              borderRightColor=\"transparent\"\n              borderTopWidth={10}\n              borderTopStyle=\"solid\"\n              borderTopColor=\"background\"\n              borderLeftWidth={10}\n              borderLeftStyle=\"solid\"\n              borderLeftColor=\"transparent\"\n            />\n            {content}\n          </Box>\n        )}\n      </Box>\n    </>\n  )\n}\n\nexport default Tooltip\n","import axios from \"axios\"\n\nconst ONE_HOUR = 1000 * 60 * 60\n\nexport interface CacheStorage<T> {\n  value: T\n  timestamp: number\n}\n\nconst emptyCacheItemStorage: CacheStorage<string> = {\n  value: \"\",\n  timestamp: 0,\n}\n\nconst stringifyEmptyCacheItemStorage = JSON.stringify(emptyCacheItemStorage)\n\n/**\n * Write inside the local storage the value returned by the API call for a given key\n * @param {string} key stored in the local storage\n * @param {T} value for a given key to write in the local storage\n */\nexport const writeToCache = <T>(key: string, value: T): void => {\n  const cacheStorageItem: CacheStorage<T> = {\n    value,\n    timestamp: new Date().getTime(),\n  }\n  localStorage.setItem(key, JSON.stringify(cacheStorageItem))\n}\n\n/**\n * Retrieve the value stored in the local storage for a given key\n * If the value is not defined or the key does not exist, return a default CacheStorage\n * with an empty value and timestamp set to 0\n * @see CacheStorage\n * @param {string} key stored in the local storage\n * @returns {CacheStorage<T>} element stored in browser local storage\n */\nconst readFromCache = <T>(key: string): CacheStorage<T> => {\n  return JSON.parse(\n    localStorage.getItem(key) || stringifyEmptyCacheItemStorage\n  ) as CacheStorage<T>\n}\n\n/**\n * API call to get the response data and store in the local storage if needed\n * @param {string} url API url\n * @param {boolean} cacheResponse should we store the value to the local storage\n * @returns {T} data response from the API\n */\nexport const getFreshData = async <T>(\n  url: string,\n  cacheResponse: boolean = false\n): Promise<T> => {\n  const { data } = await axios.get(url)\n  cacheResponse && writeToCache(url, data)\n  return data\n}\n\nconst getCachedData = <T>(url: string): CacheStorage<T> => readFromCache(url)\n\n/**\n * Get the data response from the local storage or the API\n * @param {string} url of the API\n * @returns {T} data from the API or the local storage\n */\nexport const getData = async <T>(url: string): Promise<T> => {\n  const cachedData: CacheStorage<T> = getCachedData(url)\n  const now = new Date().getTime()\n  if (\n    cachedData &&\n    cachedData.timestamp > 0 &&\n    now - cachedData.timestamp < ONE_HOUR\n  ) {\n    return cachedData.value\n  } else {\n    return getFreshData(url, true)\n  }\n}\n"],"names":["cx","classNames","filter","Boolean","join","warn","options","condition","message","callAllHandlers","fns","event","some","fn","defaultPrevented","AccordionStylesProvider","useAccordionStyles","name","hookName","providerName","AccordionItemProvider","useAccordionItemContext","AccordionDescendantsProvider","useAccordionDescendantsContext","useAccordionDescendants","useAccordionDescendant","AccordionButton","props","ref","getButtonProps","buttonProps","buttonStyles","display","alignItems","width","outline","button","className","__css","useAccordion","onChange","defaultIndex","index","indexProp","allowMultiple","allowToggle","htmlProps","Array","isArray","allowMultipleWarning","allowMultipleAndAllowToggleWarning","descendants","focusedIndex","setFocusedIndex","useState","useEffect","setIndex","value","defaultValue","getAccordionItemProps","idx","isOpen","includes","isOpen2","nextState","concat","i","displayName","AccordionProvider","useAccordionContext","useAccordionItem","isDisabled","isFocusable","id","buttonRef","useRef","reactId","useId","uid","buttonId","panelId","focusableNotDisabledWarning","register","disabled","warnIfOpenAndDisabled","onClick","useCallback","onKeyDown","action","ArrowDown","next","nextEnabled","node","focus","ArrowUp","prev","prevEnabled","Home","first","firstEnabled","End","last","lastEnabled","key","preventDefault","onFocus","props2","type","getPanelProps","role","hidden","onOpen","onClose","AccordionIcon","reduceMotion","_className","iconStyles","opacity","transform","transition","transformOrigin","icon","viewBox","fill","d","AccordionItem","children","context","containerStyles","container","overflowAnchor","ctx","useMemo","isExpanded","AccordionPanel","panelProps","styles","child","panel","in","Accordion","ownProps","root","sortNodes","nodes","sort","a","b","compare","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_CONTAINED_BY","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_CONTAINS","DOCUMENT_POSITION_DISCONNECTED","DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC","Error","getNextIndex","current","max","loop","getPrevIndex","useSafeLayoutEffect","window","useLayoutEffect","useDescendants","Map","nodeOrOptions","el","nodeType","ELEMENT_NODE","this","registerNode","unregister","delete","sorted","from","keys","assignIndex","destroy","clear","forEach","descendant","indexOf","dataset","toString","count","size","enabledCount","enabledValues","length","values","item","enabledItem","lastIndex","_a","get","enabledIndexOf","findIndex","isSameNode","nextEnabledIndex","prevEnabledIndex","has","set","DescendantsContextProvider","useDescendantsContext","errorMessage","createDescendantContext","dataIndex","Number","isNaN","refCallback","enabledIndex","useDescendant","omit","object","keysToOmit","clone","Object","assign","useImage","loading","src","srcSet","onLoad","onError","crossOrigin","sizes","ignoreFallback","status","setStatus","imageRef","load","flush","img","Image","srcset","onload","onerror","error","NativeImage","htmlWidth","htmlHeight","alt","rest","height","Image2","fallbackSrc","fallback","align","fit","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","as","Img","useControllableState","valueProp","shouldUpdate","onChangeProp","shouldUpdateProp","uncontrolledState","setUncontrolledState","controlled","setValue","nextValue","TableStylesProvider","useTableStyles","Table","tableProps","table","overflow","overflowX","whiteSpace","WebkitOverflowScrolling","overflowY","maxWidth","placement","caption","captionSide","Thead","thead","Tbody","tbody","Th","tfoot","isNumeric","th","Tr","tr","Td","td","_ref","toId","___EmotionJSX","ChakraButton","scrollIntoView","CardContainer","HStack","spacing","p","color","border","borderColor","_hover","borderRadius","boxShadow","background","Card","title","description","link","image","isLink","isExternal","url","descriptionColor","useColorModeValue","Box","GatsbyImage","minW","Flex","flex","direction","LinkOverlay","Link","href","hideArrow","textDecoration","fontSize","mb","wrap","mr","content","clickHandler","bg","map","listItem","LinkBox","data","flexDirection","justifyContent","minH","alignSelf","base","sm","maxHeight","textAlign","Heading","fontWeight","lineHeight","my","mx","Text","borderTop","logo","coin","apy","justify","textTransform","borderLeft","borderRight","minWidth","marginRight","prompt","isArticle","feedbackSubmitted","setFeedbackSubmitted","surveyUrl","useSurvey","isTutorial","location","handleSubmit","choice","trackCustomEvent","eventCategory","eventAction","eventName","String","mt","w","gap","m","Translation","getTitle","Button","variant","open","leftIcon","FeedbackThumbsUpIcon","position","zIndex","backgroundColor","bottom","left","padding","emoji","emojiSize","Emoji","text","flexGrow","flexShrink","flexBasis","ml","isWarning","shouldCenter","shouldSpaceBetween","banner","maxW","isReverse","buttons","header","subtitle","py","px","lg","pl","Wrap","undefined","to","isButtonLink","WrapItem","ButtonLink","imgStyle","category","shadow","borderBottom","paddingBottom","marginBottom","marginTop","marginLeft","flexDir","paddingY","paddingX","columns","hasError","textColor","useToken","column","letterSpacing","_content$","colSpan","marketCap","cursor","_focus","boxSize","isSecondary","borderStyle","accordionButtonContent","dapps","pill","textPreview","buy","earn","generate","LeftColumnPanel","RightColumnPanel","MoreOrLessLink","AccordionCustomItem","contentObj","_ref2","md","me","Pill","SectionTitle","StepBoxContainer","StepBox","sx","titleId","descId","Icon","MdArrowForward","H4","cardListGroups","intl","useIntl","useStaticQuery","getImage","uniswap","translateMessageId","loopring","oneinch","matcha","borrow","compound","aave","oasis","gitcoin","maker","eth","exchanges","coinbase","gemini","kraken","coinmama","bittrex","binance","useStablecoinAccordion","InfoBanner","CardList","colors","OpenTitle","Title","Subtitle","_ref3","Body","_ref4","StyledEmoji","_ref5","margin","order","Row","_ref6","Column","_ref7","GridItem","_ref8","columnNumber","rowNumber","callback","pros","cons","links","gridRowStart","gridRowEnd","gridColumnStart","pro","con","_ref9","items","indexOpen","setOpenIndex","handleSelect","isMobile","navigate","gridTemplateColumns","gridTemplateRows","colorIdx","string","hash","char","charCodeAt","Math","abs","hashCode","isVisible","setIsVisible","utils","top","h","userSelect","onMouseEnter","onMouseLeave","borderRightWidth","borderRightStyle","borderRightColor","borderTopWidth","borderTopStyle","borderTopColor","borderLeftWidth","borderLeftStyle","borderLeftColor","stringifyEmptyCacheItemStorage","JSON","stringify","timestamp","getFreshData","async","cacheResponse","axios","cacheStorageItem","Date","getTime","localStorage","setItem","writeToCache","getCachedData","readFromCache","parse","getItem","getData","cachedData","now"],"sourceRoot":""}