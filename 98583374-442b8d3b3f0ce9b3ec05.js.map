{"version":3,"file":"98583374-442b8d3b3f0ce9b3ec05.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/pages/staking/deposit-contract.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport styled from \"@emotion/styled\"\nimport { graphql, PageProps } from \"gatsby\"\nimport makeBlockie from \"ethereum-blockies-base64\"\nimport { useIntl } from \"react-intl\"\n\nimport Breadcrumbs from \"../../components/Breadcrumbs\"\nimport ButtonLink from \"../../components/ButtonLink\"\nimport CardList from \"../../components/CardList\"\nimport Checkbox from \"../../components/Checkbox\"\nimport CopyToClipboard from \"../../components/CopyToClipboard\"\nimport Emoji from \"../../components/OldEmoji\"\nimport InfoBanner from \"../../components/InfoBanner\"\nimport Link from \"../../components/Link\"\nimport PageMetadata from \"../../components/PageMetadata\"\nimport Translation from \"../../components/Translation\"\nimport Tooltip from \"../../components/Tooltip\"\n\nimport {\n  ButtonSecondary,\n  FakeLink,\n} from \"../../components/SharedStyledComponents\"\nimport { DEPOSIT_CONTRACT_ADDRESS } from \"../../data/addresses\"\nimport { translateMessageId, TranslationKey } from \"../../utils/translations\"\nimport type { Context } from \"../../types\"\nimport FeedbackCard from \"../../components/FeedbackCard\"\nimport { getImage } from \"../../utils/image\"\n\nconst Page = styled.div`\n  width: 100%;\n`\n\nconst Flex = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${(props) => props.theme.colors.border};\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column;\n  }\n`\n\nconst LeftColumn = styled.div`\n  flex: 1 1 50%;\n  padding: 2rem;\n  padding-top: 5rem;\n`\n\nconst RightColumn = styled(LeftColumn)`\n  flex: 1 1 50%;\n  padding-top: 8.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    padding-top: 1rem;\n  }\n`\n\nconst Title = styled.h1`\n  font-weight: normal;\n  font-size: 2rem;\n  font-weight: 700;\n  line-height: 140%;\n  color: ${(props) => props.theme.colors.text};\n`\n\nconst Subtitle = styled.div`\n  font-size: 1.25rem;\n  line-height: 140%;\n  color: ${(props) => props.theme.colors.text200};\n  margin-bottom: 3.5rem;\n`\n\nconst ButtonRow = styled.div`\n  display: flex;\n  align-items: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    flex-direction: column-reverse;\n    align-items: flex-start;\n    justify-content: flex-start;\n  }\n`\n\nconst StyledButton = styled(ButtonLink)`\n  margin-top: 0rem;\n  margin-bottom: 3rem;\n`\n\nconst CardTag = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.5rem;\n  background: ${(props) => props.theme.colors.primary};\n  border-bottom: 1px solid ${(props) => props.theme.colors.border};\n  color: ${(props) => props.theme.colors.buttonColor};\n  border-radius: 3px 3px 0px 0px;\n  text-transform: uppercase;\n  font-size: 0.875rem;\n`\n\nconst AddressCard = styled.div`\n  background: ${(props) => props.theme.colors.background};\n  border: 1px solid ${(props) => props.theme.colors.border};\n  border-radius: 4px;\n  box-shadow: ${(props) => props.theme.colors.tableBoxShadow};\n  margin-bottom: 2rem;\n  max-width: 560px;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    max-width: 100%;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.l}) {\n    position: sticky;\n    top: 7.25rem; /* account for navbar */\n  }\n`\n\nconst Address = styled.div`\n  font-family: ${(props) => props.theme.fonts.monospace};\n  border-radius: 2px;\n  font-size: 2rem;\n  flex-wrap: wrap;\n  text-transform: uppercase;\n  line-height: 140%;\n  margin-bottom: 1rem;\n`\n\nconst CopyButton = styled(ButtonSecondary)`\n  margin-right: 1.5rem;\n  margin-bottom: 1rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    margin-right: 0rem;\n    margin-top: 1rem;\n  }\n`\n\nconst CardContainer = styled.div`\n  margin: 2rem;\n`\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 1rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    text-align: left;\n  }\n`\n\nconst TitleText = styled.div``\n\nconst CardTitle = styled.h2`\n  margin-top: 0rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n`\n\nconst Caption = styled.div`\n  color: ${(props) => props.theme.colors.text200};\n  font-weight: 400;\n  font-size: 0.875rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    margin-bottom: 2rem;\n  }\n`\n\nconst Blockie = styled.img`\n  border-radius: 4px;\n  height: 4rem;\n  width: 4rem;\n`\n\nconst TextToSpeech = styled.div`\n  display: flex;\n  margin-bottom: 2rem;\n`\n\nconst StyledFakeLink = styled(FakeLink)`\n  margin-right: 0.5rem;\n`\n\nconst CHUNKED_ADDRESS = DEPOSIT_CONTRACT_ADDRESS.match(/.{1,3}/g)?.join(\" \")\n\nconst blockieSrc = makeBlockie(DEPOSIT_CONTRACT_ADDRESS)\n\nconst DepositContractPage = ({\n  data,\n  location,\n}: PageProps<Queries.DepositContractPageQuery, Context>) => {\n  const intl = useIntl()\n\n  const [state, setState] = useState<{\n    browserHasTextToSpeechSupport: boolean\n    textToSpeechRequest: SpeechSynthesisUtterance | undefined\n    isSpeechActive: boolean\n    showAddress: boolean\n    userHasUsedLaunchpad: boolean\n    userUnderstandsStaking: boolean\n    userWillCheckOtherSources: boolean\n  }>({\n    browserHasTextToSpeechSupport: false,\n    textToSpeechRequest: undefined,\n    isSpeechActive: false,\n    showAddress: false,\n    userHasUsedLaunchpad: false,\n    userUnderstandsStaking: false,\n    userWillCheckOtherSources: false,\n  })\n\n  useEffect(() => {\n    const browserHasTextToSpeechSupport = !!window.speechSynthesis\n    if (!browserHasTextToSpeechSupport) {\n      return\n    }\n    // Create textToSpeechRequest\n    let speech = new SpeechSynthesisUtterance()\n    speech.lang = \"en-US\"\n    speech.text = DEPOSIT_CONTRACT_ADDRESS.split(\"\").join(\",\")\n    speech.volume = 1\n    speech.rate = 1\n    speech.pitch = 1\n    // Add event listeners\n    // Explicitly set state in listener callback\n    const speechCallbackState = {\n      browserHasTextToSpeechSupport: true,\n      textToSpeechRequest: speech,\n      showAddress: true,\n      userHasUsedLaunchpad: true,\n      userUnderstandsStaking: true,\n      userWillCheckOtherSources: true,\n    }\n    const onStartCallback = () =>\n      setState({ ...speechCallbackState, isSpeechActive: true })\n    const onEndCallback = () =>\n      setState({ ...speechCallbackState, isSpeechActive: false })\n    speech.addEventListener(\"start\", onStartCallback)\n    speech.addEventListener(\"end\", onEndCallback)\n\n    setState((prevState) => ({\n      ...prevState,\n      browserHasTextToSpeechSupport,\n      textToSpeechRequest: speech,\n    }))\n    return () => {\n      speech.removeEventListener(\"start\", onStartCallback)\n      speech.removeEventListener(\"end\", onEndCallback)\n      window.speechSynthesis.cancel()\n    }\n  }, [])\n\n  const handleTextToSpeech = () => {\n    if (!window.speechSynthesis) {\n      console.error(\n        \"Browser doesn't support the 'SpeechSynthesis' text-to-speech API\"\n      )\n      return\n    }\n    if (state.isSpeechActive) {\n      window.speechSynthesis.cancel()\n    } else {\n      window.speechSynthesis.speak(\n        state.textToSpeechRequest as SpeechSynthesisUtterance\n      )\n    }\n  }\n\n  const addressSources = [\n    {\n      title: \"ConsenSys\",\n      link: \"https://consensys.net/blog/news/eth2-phase-0-deposit-contract-address/\",\n      image: getImage(data.consensys)!,\n      alt: \"\",\n    },\n    {\n      title: \"Ethereum Foundation\",\n      link: \"https://blog.ethereum.org/2020/11/04/eth2-quick-update-no-19/\",\n      image: getImage(data.ef)!,\n      alt: \"\",\n    },\n    {\n      title: \"Etherscan\",\n      link: `https://etherscan.io/address/${DEPOSIT_CONTRACT_ADDRESS}`,\n      image: getImage(data.etherscan)!,\n      alt: \"\",\n    },\n    {\n      title: \"EthHub\",\n      link: \"https://docs.ethhub.io/ethereum-roadmap/ethereum-2.0/deposit-contract/\",\n      image: getImage(data.ethhub)!,\n      alt: \"\",\n    },\n  ]\n\n  const isButtonEnabled =\n    state.userHasUsedLaunchpad &&\n    state.userUnderstandsStaking &&\n    state.userWillCheckOtherSources\n\n  const textToSpeechText = state.isSpeechActive\n    ? translateMessageId(\"page-staking-deposit-contract-stop-reading\", intl)\n    : translateMessageId(\"page-staking-deposit-contract-read-aloud\", intl)\n  const textToSpeechEmoji = state.isSpeechActive\n    ? \":speaker_high_volume:\"\n    : \":speaker:\"\n  return (\n    <Page>\n      <Flex>\n        <PageMetadata\n          title={translateMessageId(\n            \"page-staking-deposit-contract-meta-title\",\n            intl\n          )}\n          description={translateMessageId(\n            \"page-staking-deposit-contract-meta-desc\",\n            intl\n          )}\n        />\n        <LeftColumn>\n          <Breadcrumbs slug={location.pathname} startDepth={1} />\n          <Title>\n            <Translation id=\"page-staking-deposit-contract-title\" />\n          </Title>\n          <Subtitle>\n            <Translation id=\"page-staking-deposit-contract-subtitle\" />\n          </Subtitle>\n          <h2>\n            <Translation id=\"page-staking-deposit-contract-h2\" />\n          </h2>\n          <p>\n            <Translation id=\"page-staking-deposit-contract-staking\" />{\" \"}\n            <Link to=\"/staking/\">\n              <Translation id=\"page-staking-deposit-contract-staking-more-link\" />\n            </Link>\n          </p>\n          <StyledButton to=\"https://launchpad.ethereum.org\">\n            <Translation id=\"page-staking-deposit-contract-launchpad\" />\n          </StyledButton>\n          <h2>\n            <Translation id=\"page-staking-deposit-contract-staking-check\" />\n          </h2>\n          <p>\n            <Translation id=\"page-staking-deposit-contract-staking-check-desc\" />\n          </p>\n          <CardList content={addressSources} />\n        </LeftColumn>\n        <RightColumn>\n          <AddressCard>\n            <CardTag>\n              <Translation id=\"page-staking-deposit-contract-address-check-btn\" />\n            </CardTag>\n            <CardContainer>\n              {!state.showAddress && (\n                <>\n                  <Row>\n                    <CardTitle>\n                      <Translation id=\"page-staking-deposit-contract-confirm-address\" />\n                    </CardTitle>\n                  </Row>\n                  <Checkbox\n                    isChecked={state.userHasUsedLaunchpad}\n                    size=\"md\"\n                    mb=\"0.5rem\"\n                    display=\"flex\"\n                    alignItems=\"top\"\n                    variant=\"alignTop\"\n                    minHeight=\"3.5rem\"\n                    onChange={() =>\n                      setState({\n                        ...state,\n                        userHasUsedLaunchpad: !state.userHasUsedLaunchpad,\n                      })\n                    }\n                  >\n                    <Translation id=\"page-staking-deposit-contract-checkbox1\" />\n                  </Checkbox>\n                  <Checkbox\n                    isChecked={state.userUnderstandsStaking}\n                    size=\"md\"\n                    mb=\"0.5rem\"\n                    display=\"flex\"\n                    alignItems=\"top\"\n                    variant=\"alignTop\"\n                    minHeight=\"3.5rem\"\n                    onChange={() =>\n                      setState({\n                        ...state,\n                        userUnderstandsStaking: !state.userUnderstandsStaking,\n                      })\n                    }\n                  >\n                    <Translation id=\"page-staking-deposit-contract-checkbox2\" />\n                  </Checkbox>\n                  <Checkbox\n                    isChecked={state.userWillCheckOtherSources}\n                    size=\"md\"\n                    mb=\"0.5rem\"\n                    display=\"flex\"\n                    alignItems=\"top\"\n                    variant=\"alignTop\"\n                    minHeight=\"3.5rem\"\n                    onChange={() =>\n                      setState({\n                        ...state,\n                        userWillCheckOtherSources:\n                          !state.userWillCheckOtherSources,\n                      })\n                    }\n                  >\n                    <Translation id=\"page-staking-deposit-contract-checkbox3\" />\n                  </Checkbox>\n                  <CopyButton\n                    disabled={!isButtonEnabled}\n                    onClick={() =>\n                      setState({ ...state, showAddress: !state.showAddress })\n                    }\n                  >\n                    <Emoji text=\":eyes:\" size={1} />{\" \"}\n                    <Translation id=\"page-staking-deposit-contract-reveal-address-btn\" />\n                  </CopyButton>\n                </>\n              )}\n              {state.showAddress && (\n                <>\n                  <Row>\n                    <TitleText>\n                      <CardTitle>\n                        <Translation id=\"page-staking-deposit-contract-address\" />\n                      </CardTitle>\n                      <Caption>\n                        <Translation id=\"page-staking-deposit-contract-address-caption\" />\n                      </Caption>\n                    </TitleText>\n                    <Blockie src={blockieSrc} />\n                  </Row>\n                  {state.browserHasTextToSpeechSupport && (\n                    <TextToSpeech>\n                      <StyledFakeLink onClick={handleTextToSpeech}>\n                        <Translation id={textToSpeechText as TranslationKey} />\n                      </StyledFakeLink>{\" \"}\n                      <Emoji text={textToSpeechEmoji} size={1} />\n                    </TextToSpeech>\n                  )}\n                  <Tooltip\n                    content={translateMessageId(\n                      \"page-staking-deposit-contract-warning\",\n                      intl\n                    )}\n                  >\n                    <Address>{CHUNKED_ADDRESS}</Address>\n                  </Tooltip>\n                  <ButtonRow>\n                    <CopyToClipboard text={DEPOSIT_CONTRACT_ADDRESS}>\n                      {(isCopied) => (\n                        <CopyButton>\n                          {!isCopied ? (\n                            <div>\n                              <Emoji text=\":clipboard:\" size={1} />{\" \"}\n                              <Translation id=\"page-staking-deposit-contract-copy\" />\n                            </div>\n                          ) : (\n                            <div>\n                              <Emoji text=\":white_check_mark:\" size={1} />{\" \"}\n                              <Translation id=\"page-staking-deposit-contract-copied\" />\n                            </div>\n                          )}\n                        </CopyButton>\n                      )}\n                    </CopyToClipboard>\n                    <Link\n                      to={`https://etherscan.io/address/${DEPOSIT_CONTRACT_ADDRESS}`}\n                    >\n                      <Translation id=\"page-staking-deposit-contract-etherscan\" />\n                    </Link>\n                  </ButtonRow>\n                </>\n              )}\n              <InfoBanner isWarning={true} emoji=\":warning:\">\n                <div>\n                  <Translation id=\"page-staking-deposit-contract-warning-2\" />{\" \"}\n                  <Link to=\"https://launchpad.ethereum.org\">\n                    <Translation id=\"page-staking-deposit-contract-launchpad-2\" />\n                  </Link>\n                </div>\n              </InfoBanner>\n            </CardContainer>\n          </AddressCard>\n        </RightColumn>\n      </Flex>\n      <FeedbackCard />\n    </Page>\n  )\n}\n\nexport default DepositContractPage\n\nexport const sourceImage = graphql`\n  fragment sourceImage on File {\n    childImageSharp {\n      gatsbyImageData(\n        height: 20\n        layout: FIXED\n        placeholder: BLURRED\n        quality: 100\n      )\n    }\n  }\n`\n\nexport const query = graphql`\n  query DepositContractPage {\n    consensys: file(relativePath: { eq: \"projects/consensys.png\" }) {\n      ...sourceImage\n    }\n    ef: file(relativePath: { eq: \"staking/ef-blog-logo.png\" }) {\n      ...sourceImage\n    }\n    ethhub: file(relativePath: { eq: \"projects/ethhub.png\" }) {\n      ...sourceImage\n    }\n    etherscan: file(\n      relativePath: { eq: \"projects/etherscan-logo-circle.png\" }\n    ) {\n      ...sourceImage\n    }\n  }\n`\n"],"names":["Page","target","name","styles","Flex","props","theme","colors","border","breakpoints","l","LeftColumn","RightColumn","Title","text","Subtitle","text200","ButtonRow","m","StyledButton","ButtonLink","CardTag","primary","buttonColor","AddressCard","background","tableBoxShadow","Address","fonts","monospace","CopyButton","ButtonSecondary","CardContainer","Row","TitleText","CardTitle","Caption","Blockie","TextToSpeech","StyledFakeLink","FakeLink","CHUNKED_ADDRESS","DEPOSIT_CONTRACT_ADDRESS","_DEPOSIT_CONTRACT_ADD","join","blockieSrc","makeBlockie","_ref","data","location","intl","useIntl","state","setState","useState","browserHasTextToSpeechSupport","textToSpeechRequest","undefined","isSpeechActive","showAddress","userHasUsedLaunchpad","userUnderstandsStaking","userWillCheckOtherSources","useEffect","window","speechSynthesis","speech","SpeechSynthesisUtterance","lang","volume","rate","pitch","speechCallbackState","onStartCallback","onEndCallback","addEventListener","prevState","removeEventListener","cancel","addressSources","title","link","image","getImage","consensys","alt","ef","etherscan","ethhub","isButtonEnabled","textToSpeechText","translateMessageId","textToSpeechEmoji","___EmotionJSX","PageMetadata","description","Breadcrumbs","slug","pathname","startDepth","Translation","id","Link","to","CardList","content","Checkbox","isChecked","size","mb","display","alignItems","variant","minHeight","onChange","disabled","onClick","Emoji","src","speak","console","error","Tooltip","CopyToClipboard","isCopied","InfoBanner","isWarning","emoji","FeedbackCard"],"sourceRoot":""}