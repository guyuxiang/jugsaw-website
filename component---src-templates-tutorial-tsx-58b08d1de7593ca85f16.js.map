{"version":3,"file":"component---src-templates-tutorial-tsx-58b08d1de7593ca85f16.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/Banners/PostMergeBanner.tsx","webpack://ethereum-org-website/./src/components/TutorialMetadata.tsx","webpack://ethereum-org-website/./src/components/TutorialTags.tsx","webpack://ethereum-org-website/./src/templates/tutorial.tsx"],"sourcesContent":["import React from \"react\"\nimport BannerNotification from \"../BannerNotification\"\nimport Translation from \"../Translation\"\n\nimport { TranslationKey } from \"../../utils/translations\"\nimport { Text } from \"@chakra-ui/react\"\n\nexport interface IProps {\n  translationString: TranslationKey\n}\n\nconst PostMergeBanner: React.FC<IProps> = ({ translationString }) => (\n  <BannerNotification\n    shouldShow={true}\n    zIndex={1}\n    textAlign=\"center\"\n    sx={{\n      a: {\n        \"text-decoration\": \"underline\",\n      },\n    }}\n  >\n    <Text maxW=\"100ch\" m={0} p={0}>\n      <Translation id={translationString} />\n    </Text>\n  </BannerNotification>\n)\n\nexport default PostMergeBanner\n","import React from \"react\"\nimport { useIntl } from \"react-intl\"\nimport { Badge, Box, Flex, HStack, Text } from \"@chakra-ui/react\"\nimport CopyToClipboard from \"./CopyToClipboard\"\nimport Link from \"./Link\"\nimport TutorialTags from \"./TutorialTags\"\nimport { getLocaleTimestamp } from \"../utils/time\"\nimport Emoji from \"./Emoji\"\nimport Translation from \"./Translation\"\nimport { Lang } from \"../utils/languages\"\nimport { TranslationKey } from \"../utils/translations\"\n\nexport interface IProps {\n  tutorial: any\n}\n\nexport enum Skill {\n  BEGINNER = \"beginner\",\n  INTERMEDIATE = \"intermediate\",\n  ADVANCED = \"advanced\",\n}\n\nexport const getSkillTranslationId = (skill: Skill): TranslationKey =>\n  `page-tutorial-${Skill[skill.toUpperCase() as keyof typeof Skill]}`\n\nconst TutorialMetadata: React.FC<IProps> = ({ tutorial }) => {\n  const intl = useIntl()\n\n  const frontmatter = tutorial.frontmatter\n  const hasSource = frontmatter.source && frontmatter.sourceUrl\n  const published = frontmatter.published\n  const author = frontmatter.author\n  const address = frontmatter.address\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n      borderBottomWidth={{ base: 0, lg: \"1px\" }}\n      borderBottomColor=\"border\"\n    >\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" w=\"full\" mb={8}>\n        <Flex flexWrap=\"wrap\" w=\"full\">\n          <TutorialTags tags={frontmatter.tags} />\n        </Flex>\n        <Flex\n          as={Badge}\n          variant=\"secondary\"\n          alignSelf=\"flex-start\"\n          mb={2}\n          whiteSpace=\"nowrap\"\n        >\n          <Translation id={getSkillTranslationId(frontmatter.skill)} />\n        </Flex>\n      </Flex>\n      <HStack\n        mb={6}\n        flexWrap=\"wrap\"\n        mt={-4}\n        fontSize=\"sm\"\n        color=\"text300\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-start\"\n        spacing={4}\n      >\n        {author && (\n          <Box>\n            <Emoji fontSize=\"sm\" mr={2} text=\":writing_hand:\" />\n            {author}\n          </Box>\n        )}\n        {hasSource && (\n          <Box>\n            <Emoji fontSize=\"sm\" mr={2} text=\":books:\" />\n            <Link to={frontmatter.sourceUrl}>{frontmatter.source}</Link>\n          </Box>\n        )}\n        {published && (\n          <Box>\n            <Emoji fontSize=\"sm\" mr={2} text=\":calendar:\" />\n            {getLocaleTimestamp(intl.locale as Lang, published)}\n          </Box>\n        )}\n        <Box>\n          <Emoji fontSize=\"sm\" mr={2} text=\":stopwatch:\" />\n          {Math.round(tutorial.fields.readingTime.minutes)}{\" \"}\n          <Translation id=\"comp-tutorial-metadata-minute-read\" />\n        </Box>\n      </HStack>\n      <HStack\n        mb={6}\n        flexWrap=\"wrap\"\n        mt={-4}\n        fontSize=\"sm\"\n        color=\"text300\"\n        justifyContent=\"flex-start\"\n      >\n        {address && (\n          <Flex flexWrap=\"wrap\" w=\"full\" mr={4}>\n            <CopyToClipboard text={frontmatter.address}>\n              {(isCopied) => (\n                <Text color=\"primary\" cursor=\"pointer\">\n                  {!isCopied ? (\n                    <Box\n                      overflow=\"hidden\"\n                      textOverflow=\"ellipsis\"\n                      fontFamily=\"monospace\"\n                      bg=\"ednBackground\"\n                      px={1}\n                      fontSize=\"sm\"\n                      _hover={{\n                        bg: \"primary100\",\n                      }}\n                    >\n                      <Text\n                        as={Translation}\n                        textTransform=\"uppercase\"\n                        id=\"comp-tutorial-metadata-tip-author\"\n                      />{\" \"}\n                      {frontmatter.address}\n                    </Box>\n                  ) : (\n                    <Box\n                      overflow=\"hidden\"\n                      textOverflow=\"ellipsis\"\n                      fontFamily=\"monospace\"\n                      bg=\"ednBackground\"\n                      px={1}\n                      fontSize=\"sm\"\n                      _hover={{\n                        bg: \"primary100\",\n                      }}\n                    >\n                      <Text\n                        as={Translation}\n                        textTransform=\"uppercase\"\n                        id=\"comp-tutorial-metadata-tip-author\"\n                      />{\" \"}\n                      {frontmatter.address} <Translation id=\"copied\" />\n                      <Emoji\n                        fontSize=\"sm\"\n                        ml={2}\n                        mr={2}\n                        text=\":white_check_mark:\"\n                      />\n                    </Box>\n                  )}\n                </Text>\n              )}\n            </CopyToClipboard>\n          </Flex>\n        )}\n      </HStack>\n    </Flex>\n  )\n}\n\nexport default TutorialMetadata\n","import { Badge } from \"@chakra-ui/react\"\nimport React from \"react\"\n\n// Represent string as 32-bit integer\nconst hashCode = (string) => {\n  let hash = 0\n  for (const char of string) {\n    const code = char.charCodeAt(0)\n    hash = (hash << 5) - hash + code\n    hash |= 0\n  }\n  return Math.abs(hash)\n}\n\n// Theme variables from Theme.js\nconst colors = [\n  \"tagBlue\",\n  \"tagOrange\",\n  \"tagGreen\",\n  \"tagRed\",\n  \"tagTurquoise\",\n  \"tagGray\",\n  \"tagYellow\",\n  \"tagMint\",\n  \"tagPink\",\n] as const\n\nexport interface IProps {\n  tags: Array<string>\n}\n\nconst TutorialTags: React.FC<IProps> = ({ tags }) => {\n  return (\n    <>\n      {tags.map((tag, idx) => {\n        const tagColorIdx = hashCode(tag) % colors.length\n        const tagColor = colors[tagColorIdx]\n        return (\n          <Badge key={idx} me={2} mb={2} background={tagColor}>\n            {tag}\n          </Badge>\n        )\n      })}\n    </>\n  )\n}\n\nexport default TutorialTags\n","import React from \"react\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport styled from \"@emotion/styled\"\nimport { Badge } from \"@chakra-ui/react\"\n\nimport ButtonLink from \"../components/ButtonLink\"\nimport Card from \"../components/Card\"\nimport Codeblock from \"../components/Codeblock\"\nimport TutorialMetadata from \"../components/TutorialMetadata\"\nimport FileContributors from \"../components/FileContributors\"\nimport InfoBanner from \"../components/InfoBanner\"\nimport Link from \"../components/Link\"\nimport MarkdownTable from \"../components/MarkdownTable\"\nimport PageMetadata from \"../components/PageMetadata\"\nimport TableOfContents, {\n  Item as ItemTableOfContents,\n} from \"../components/TableOfContents\"\nimport SectionNav from \"../components/SectionNav\"\nimport CallToContribute from \"../components/CallToContribute\"\nimport {\n  Divider,\n  Paragraph,\n  Header1,\n  Header2,\n  Header3,\n  Header4,\n  ListItem,\n  KBD,\n} from \"../components/SharedStyledComponents\"\nimport Emoji from \"../components/OldEmoji\"\nimport YouTube from \"../components/YouTube\"\nimport PostMergeBanner from \"../components/Banners/PostMergeBanner\"\nimport FeedbackCard from \"../components/FeedbackCard\"\n\nimport { isLangRightToLeft, TranslationKey } from \"../utils/translations\"\nimport { Lang } from \"../utils/languages\"\nimport { Context } from \"../types\"\n\nconst Page = styled.div`\n  display: flex;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 2rem 0 0;\n  background: ${(props) => props.theme.colors.ednBackground};\n  border-bottom: 1px solid ${(props) => props.theme.colors.border};\n  background-color: ${(props) => props.theme.colors.ednBackground};\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin: 2rem 0rem;\n    padding: 0;\n    background: ${(props) => props.theme.colors.background};\n  }\n`\n\nconst DesktopTableOfContents = styled(TableOfContents)`\n  padding-top: 4rem;\n`\nconst MobileTableOfContents = styled(TableOfContents)`\n  margin-bottom: 2rem;\n`\n\n// Apply styles for classes within markdown here\nconst ContentContainer = styled.article`\n  flex: 1 1 ${(props) => props.theme.breakpoints.m};\n  max-width: 1000px;\n  background: ${(props) => props.theme.colors.background};\n  box-shadow: ${(props) => props.theme.colors.tableBoxShadow};\n  margin: 2rem 2rem;\n  padding: 4rem 4rem;\n  margin-bottom: 6rem;\n  border-radius: 4px;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin: 2.5rem 0rem;\n    padding: 3rem 2rem;\n    box-shadow: none;\n    width: 100%;\n  }\n\n  .featured {\n    padding-left: 1rem;\n    margin-left: -1rem;\n    border-left: 1px dotted ${(props) => props.theme.colors.primary};\n  }\n\n  .citation {\n    p {\n      color: ${(props) => props.theme.colors.text200};\n    }\n  }\n`\n\nconst H1 = styled(Header1)`\n  font-size: 2.5rem;\n  font-family: ${(props) => props.theme.fonts.monospace};\n  text-transform: uppercase;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    font-size: 1.75rem;\n  }\n`\n\nconst H2 = styled(Header2)`\n  font-family: ${(props) => props.theme.fonts.monospace};\n  text-transform: uppercase;\n`\n\nconst H3 = styled(Header3)`\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    font-size: 1rem;\n    font-weight: 600;\n  }\n`\nconst H4 = styled(Header4)`\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    font-size: 1rem;\n    font-weight: 600;\n  }\n`\n\n// Note: you must pass components to MDXProvider in order to render them in markdown files\n// https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx/#mdxprovider\nconst components = {\n  a: Link,\n  h1: H1,\n  h2: H2,\n  h3: H3,\n  h4: H4,\n  p: Paragraph,\n  kbd: KBD,\n  li: ListItem,\n  pre: Codeblock,\n  table: MarkdownTable,\n  ButtonLink,\n  InfoBanner,\n  Card,\n  Divider,\n  SectionNav,\n  Badge,\n  CallToContribute,\n  Emoji,\n  YouTube,\n}\n\nconst Contributors = styled(FileContributors)`\n  margin-top: 3rem;\n  border: 1px solid ${(props) => props.theme.colors.border};\n  background: ${(props) => props.theme.colors.ednBackground};\n  padding: 1rem;\n  border-radius: 4px;\n`\n\nconst TutorialPage = ({\n  data: { siteData, pageData: mdx },\n  pageContext: { relativePath },\n}: PageProps<Queries.TutorialPageQuery, Context>) => {\n  if (!siteData || !mdx?.frontmatter)\n    throw new Error(\n      \"Tutorial page template query does not return expected values\"\n    )\n  if (!mdx?.frontmatter?.title)\n    throw new Error(\"Required `title` property missing for tutorial template\")\n  if (!relativePath)\n    throw new Error(\"Required `relativePath` is missing on pageContext\")\n\n  const isRightToLeft = isLangRightToLeft(mdx.frontmatter.lang as Lang)\n\n  const showPostMergeBanner = !!mdx.frontmatter.postMergeBannerTranslation\n  const postMergeBannerTranslationString = mdx.frontmatter\n    .postMergeBannerTranslation as TranslationKey | null\n\n  const tocItems = mdx.tableOfContents?.items as Array<ItemTableOfContents>\n\n  const { editContentUrl } = siteData.siteMetadata || {}\n  const hideEditButton = !!mdx.frontmatter.hideEditButton\n  const absoluteEditPath = `${editContentUrl}${relativePath}`\n  return (\n    <>\n      {showPostMergeBanner && (\n        <PostMergeBanner\n          translationString={postMergeBannerTranslationString!}\n        />\n      )}\n      <Page dir={isRightToLeft ? \"rtl\" : \"ltr\"}>\n        <PageMetadata\n          title={mdx.frontmatter.title}\n          description={mdx.frontmatter.description}\n          canonicalUrl={mdx.frontmatter.sourceUrl}\n        />\n        <ContentContainer>\n          <H1>{mdx.frontmatter.title}</H1>\n          <TutorialMetadata tutorial={mdx} />\n          <MobileTableOfContents\n            items={tocItems}\n            maxDepth={mdx.frontmatter.sidebarDepth!}\n            editPath={absoluteEditPath}\n            isMobile={true}\n          />\n          <MDXProvider components={components}>\n            <MDXRenderer>{mdx.body}</MDXRenderer>\n          </MDXProvider>\n          <Contributors\n            relativePath={relativePath}\n            editPath={absoluteEditPath}\n          />\n          <FeedbackCard />\n        </ContentContainer>\n        {tocItems && (\n          <DesktopTableOfContents\n            items={tocItems}\n            maxDepth={mdx.frontmatter.sidebarDepth!}\n            editPath={absoluteEditPath}\n            hideEditButton={hideEditButton}\n          />\n        )}\n      </Page>\n    </>\n  )\n}\n\nexport default TutorialPage\n\nexport const query = graphql`\n  query TutorialPage($relativePath: String) {\n    siteData: site {\n      siteMetadata {\n        editContentUrl\n      }\n    }\n    pageData: mdx(fields: { relativePath: { eq: $relativePath } }) {\n      fields {\n        slug\n        readingTime {\n          minutes\n        }\n      }\n      frontmatter {\n        title\n        description\n        lang\n        tags\n        author\n        source\n        sourceUrl\n        skill\n        published\n        sidebarDepth\n        address\n        isOutdated\n        postMergeBannerTranslation\n        hideEditButton\n      }\n      body\n      tableOfContents\n    }\n  }\n`\n"],"names":["_ref","translationString","___EmotionJSX","BannerNotification","shouldShow","zIndex","textAlign","sx","a","Text","maxW","m","p","Translation","id","Skill","getSkillTranslationId","skill","toUpperCase","tutorial","intl","useIntl","frontmatter","hasSource","source","sourceUrl","published","author","address","Flex","flexDirection","justifyContent","borderBottomWidth","base","lg","borderBottomColor","alignItems","w","mb","flexWrap","TutorialTags","tags","as","Badge","variant","alignSelf","whiteSpace","HStack","mt","fontSize","color","spacing","Box","Emoji","mr","text","Link","to","getLocaleTimestamp","locale","Math","round","fields","readingTime","minutes","CopyToClipboard","isCopied","cursor","overflow","textOverflow","fontFamily","bg","px","_hover","textTransform","ml","colors","map","tag","idx","tagColorIdx","string","hash","char","charCodeAt","abs","hashCode","length","tagColor","key","me","background","Page","target","props","theme","ednBackground","border","breakpoints","l","DesktopTableOfContents","TableOfContents","name","styles","MobileTableOfContents","ContentContainer","tableBoxShadow","primary","text200","H1","Header1","fonts","monospace","H2","Header2","H3","Header3","H4","Header4","components","h1","h2","h3","h4","Paragraph","kbd","KBD","li","ListItem","pre","Codeblock","table","MarkdownTable","ButtonLink","InfoBanner","Card","Divider","SectionNav","CallToContribute","YouTube","Contributors","FileContributors","data","siteData","pageData","mdx","pageContext","relativePath","Error","_mdx$frontmatter","title","isRightToLeft","isLangRightToLeft","lang","showPostMergeBanner","postMergeBannerTranslation","postMergeBannerTranslationString","tocItems","tableOfContents","_mdx$tableOfContents","items","editContentUrl","siteMetadata","hideEditButton","absoluteEditPath","PostMergeBanner","dir","PageMetadata","description","canonicalUrl","TutorialMetadata","maxDepth","sidebarDepth","editPath","isMobile","MDXProvider","MDXRenderer","body","FeedbackCard"],"sourceRoot":""}