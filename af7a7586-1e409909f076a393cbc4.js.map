{"version":3,"file":"af7a7586-1e409909f076a393cbc4.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/templates/job.tsx"],"sourcesContent":["import React from \"react\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport styled from \"@emotion/styled\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport ButtonLink from \"../components/ButtonLink\"\nimport Link from \"../components/Link\"\nimport PageMetadata from \"../components/PageMetadata\"\nimport Emoji from \"../components/Emoji\"\nimport {\n  Paragraph,\n  Header1,\n  Header4,\n  ListItem,\n} from \"../components/SharedStyledComponents\"\n\nimport { Context } from \"../types\"\n\nconst Page = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin: 0 auto 4rem;\n  @media (min-width: ${(props) => props.theme.breakpoints.l}) {\n    padding-top: 2rem;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column;\n  }\n`\n\nconst InfoColumn = styled.aside`\n  display: flex;\n  flex-direction: column;\n  position: sticky;\n  padding-top: 3rem;\n  border-right: 1px solid ${(props) => props.theme.colors.border};\n  top: 6.25rem; /* account for navbar */\n  height: calc(100vh - 80px);\n  flex: 0 1 400px;\n  margin-right: 4rem;\n  margin-left: 2rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    display: none;\n  }\n  @media (max-width: 1200px) {\n    margin-right: 2rem;\n    margin-left: 2rem;\n    border: 0;\n  }\n`\n\nconst StyledButtonLink = styled(ButtonLink)`\n  width: 100%;\n  margin-bottom: 1rem;\n`\n\nconst InfoColumnRight = styled.aside`\n  display: flex;\n  flex-direction: column;\n  position: sticky;\n  padding-top: 3rem;\n  top: 6.25rem; /* account for navbar */\n  height: calc(100vh - 80px);\n  flex: 0 1 400px;\n  margin-right: 2rem;\n  margin-left: 4rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    display: none;\n  }\n  @media (max-width: 1200px) {\n    margin-right: 2rem;\n    margin-left: 2rem;\n  }\n`\n\nconst MobileButton = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: ${(props) => props.theme.colors.background};\n  box-shadow: 0 -1px 0px ${(props) => props.theme.colors.border};\n  width: 100%;\n  bottom: 0;\n  position: sticky;\n  padding: 2rem;\n  z-index: 99;\n  margin-bottom: 0rem;\n  padding-top: 1rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    justify-content: flex-end;\n  }\n  @media (min-width: ${(props) => props.theme.breakpoints.l}) {\n    display: none;\n  }\n`\n\nconst KeyInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n`\n\nconst KeyInfoMobile = styled(KeyInfo)`\n  border-bottom: 1px solid ${(props) => props.theme.colors.border};\n  padding: 1.5rem 0rem;\n  padding-top: 0rem;\n  @media (min-width: ${(props) => props.theme.breakpoints.l}) {\n    display: none;\n  }\n`\n\nconst StyledEmoji = styled(Emoji)`\n  margin-right: 1rem;\n  flex-shrink: 0;\n`\n\nconst ButtonRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  @media (max-width: 1200px) {\n    padding: 0rem 2rem;\n  }\n`\n\nconst KeyItem = styled.div`\n  margin: 0.5rem;\n  margin-left: 0rem;\n  display: flex;\n  align-items: flex-start;\n`\n\nconst KeyItemTitle = styled.h2`\n  font-size: 1.25rem;\n  margin-bottom: 1rem;\n  margin-top: 0;\n`\n\n// Apply styles for classes within markdown here\nconst ContentContainer = styled.article`\n  flex: 1 1 ${(props) => props.theme.breakpoints.l};\n  position: relative;\n  padding: 2rem;\n  padding-top: 0rem;\n  .featured {\n    padding-left: 1rem;\n    margin-left: -1rem;\n    border-left: 1px dotted ${(props) => props.theme.colors.primary};\n  }\n  .citation {\n    p {\n      color: ${(props) => props.theme.colors.text200};\n    }\n  }\n  @media (max-width: 1200px) {\n    padding: 0rem 1rem;\n  }\n`\n\nconst Pre = styled.pre`\n  max-width: 100%;\n  overflow-x: scroll;\n  background-color: ${(props) => props.theme.colors.preBackground};\n  border-radius: 0.25rem;\n  padding: 1rem;\n  border: 1px solid ${(props) => props.theme.colors.preBorder};\n  white-space: pre-wrap;\n`\n\nconst H2 = styled.h2`\n  font-size: 2rem;\n  font-weight: 700;\n  margin-top: 4rem;\n\n  a {\n    display: none;\n  }\n\n  /* Anchor tag styles */\n\n  a {\n    position: relative;\n    display: initial;\n    opacity: 0;\n    margin-left: -1.5em;\n    padding-right: 0.5rem;\n    font-size: 1rem;\n    vertical-align: middle;\n    &:hover {\n      display: initial;\n      fill: ${(props) => props.theme.colors.primary};\n      opacity: 1;\n    }\n  }\n  &:hover {\n    a {\n      display: initial;\n      fill: ${(props) => props.theme.colors.primary};\n      opacity: 1;\n    }\n  }\n`\n\nconst H3 = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 700;\n\n  a {\n    display: none;\n  }\n\n  /* Anchor tag styles */\n\n  a {\n    position: relative;\n    display: initial;\n    opacity: 0;\n    margin-left: -1.5em;\n    padding-right: 0.5rem;\n    font-size: 1rem;\n    vertical-align: middle;\n    &:hover {\n      display: initial;\n      fill: ${(props) => props.theme.colors.primary};\n      opacity: 1;\n    }\n  }\n  &:hover {\n    a {\n      display: initial;\n      fill: ${(props) => props.theme.colors.primary};\n      opacity: 1;\n    }\n  }\n`\n\n// Passing components to MDXProvider allows use across all .md/.mdx files\n// https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx/#mdxprovider\nconst components = {\n  a: Link,\n  h1: Header1,\n  h2: H2,\n  h3: H3,\n  h4: Header4,\n  p: Paragraph,\n  li: ListItem,\n  pre: Pre,\n  ButtonLink,\n  Emoji,\n}\n\nconst Container = styled.div`\n  position: relative;\n`\n\nconst HeroContainer = styled.div`\n  background: ${(props) => props.theme.colors.cardGradient};\n  box-shadow: inset 0px -1px 0px rgba(0, 0, 0, 0.1);\n  display: flex;\n  justify-content: center;\n  max-height: 400px;\n  width: 100%;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column-reverse;\n    max-height: 100%;\n  }\n`\n\nconst Image = styled(GatsbyImage)`\n  flex: 1 1 100%;\n  max-width: 640px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  margin-left: 2rem;\n  align-self: center;\n  right: 0;\n  bottom: 0;\n  background-size: cover;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    width: 100%;\n    height: 100%;\n    overflow: initial;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin: 0;\n  margin-bottom: 1rem;\n  font-size: 0.875rem;\n  line-height: 140%;\n  letter-spacing: 0.04em;\n  font-weight: normal;\n  z-index: 1;\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.textTableOfContents};\n  &:hover {\n    color: ${(props) => props.theme.colors.primary};\n  }\n  &.active {\n    color: ${(props) => props.theme.colors.primary};\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    margin-top: 1rem;\n    margin-right: 0rem;\n  }\n`\n\nconst JobPage = ({\n  data: { mdx },\n}: PageProps<Queries.JobPageQuery, Context>) => {\n  if (!mdx?.frontmatter) {\n    throw new Error(\"Job page template query does not return expected values\")\n  }\n\n  return (\n    <Container>\n      <HeroContainer>\n        <Image image={getImage(mdx.frontmatter.image)} />\n      </HeroContainer>\n      <Page dir=\"ltr\">\n        <PageMetadata\n          title={mdx.frontmatter.title}\n          description={mdx.frontmatter.description}\n        />\n        <InfoColumn>\n          <KeyInfo>\n            <KeyItemTitle>Job details</KeyItemTitle>\n            <KeyItem>\n              <StyledEmoji text=\":computer:\" />\n              {mdx.frontmatter.position}\n            </KeyItem>\n            <KeyItem>\n              <StyledEmoji text=\":page_with_curl:\" />\n              {mdx.frontmatter.type}\n            </KeyItem>\n            <KeyItem>\n              <StyledEmoji text=\":globe_showing_americas:\" />\n              {mdx.frontmatter.location}\n            </KeyItem>\n            <KeyItem>\n              <StyledEmoji text=\":money_bag:\" />\n              {mdx.frontmatter.compensation}\n            </KeyItem>\n          </KeyInfo>\n        </InfoColumn>\n        <ContentContainer id=\"content\">\n          <MDXProvider components={components}>\n            <h1>{mdx.frontmatter.title}</h1>\n            <KeyInfoMobile>\n              <KeyItemTitle>Job details</KeyItemTitle>\n              <KeyItem>\n                <StyledEmoji text=\":computer:\" />\n                {mdx.frontmatter.position}\n              </KeyItem>\n              <KeyItem>\n                <StyledEmoji text=\":page_with_curl:\" />\n                {mdx.frontmatter.type}\n              </KeyItem>\n              <KeyItem>\n                <StyledEmoji text=\":globe_showing_americas:\" />\n                {mdx.frontmatter.location}\n              </KeyItem>\n              <KeyItem>\n                <StyledEmoji text=\":money_bag:\" />\n                {mdx.frontmatter.compensation}\n              </KeyItem>\n            </KeyInfoMobile>\n            <MDXRenderer>{mdx.body}</MDXRenderer>\n          </MDXProvider>\n        </ContentContainer>\n        <InfoColumnRight>\n          <ButtonRow>\n            <StyledButtonLink to=\"/about/#open-jobs\">\n              Back to jobs\n            </StyledButtonLink>\n            <StyledButtonLink to={mdx.frontmatter.link!}>\n              Apply for job\n            </StyledButtonLink>\n          </ButtonRow>\n        </InfoColumnRight>\n      </Page>\n      <MobileButton>\n        <ButtonRow>\n          <StyledLink to=\"/about/#open-jobs\"> Back to jobs</StyledLink>\n          <ButtonLink to={mdx.frontmatter.link!}>Apply for job</ButtonLink>\n        </ButtonRow>\n      </MobileButton>\n    </Container>\n  )\n}\n\nexport const JobQuery = graphql`\n  query JobPage($relativePath: String) {\n    mdx(fields: { relativePath: { eq: $relativePath } }) {\n      frontmatter {\n        title\n        description\n        sidebar\n        sidebarDepth\n        position\n        location\n        compensation\n        type\n        link\n        image {\n          childImageSharp {\n            gatsbyImageData(height: 400, placeholder: BLURRED, quality: 100)\n          }\n        }\n      }\n      body\n    }\n  }\n`\n\nexport default JobPage\n"],"names":["Page","target","props","theme","breakpoints","l","InfoColumn","colors","border","StyledButtonLink","ButtonLink","name","styles","InfoColumnRight","MobileButton","background","KeyInfo","KeyInfoMobile","StyledEmoji","Emoji","ButtonRow","KeyItem","KeyItemTitle","ContentContainer","primary","text200","Pre","preBackground","preBorder","H2","H3","components","a","Link","h1","Header1","h2","h3","h4","Header4","p","Paragraph","li","ListItem","pre","Container","HeroContainer","cardGradient","Image","GatsbyImage","StyledLink","textTableOfContents","s","_ref","data","mdx","frontmatter","Error","___EmotionJSX","image","getImage","dir","PageMetadata","title","description","text","position","type","location","compensation","id","MDXProvider","MDXRenderer","body","to","link"],"sourceRoot":""}