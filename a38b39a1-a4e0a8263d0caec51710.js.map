{"version":3,"file":"a38b39a1-a4e0a8263d0caec51710.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/Nav/Mobile.tsx"],"sourcesContent":["import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { useIntl } from \"react-intl\"\nimport { motion } from \"framer-motion\"\n\nimport Emoji from \"../OldEmoji\"\nimport Icon from \"../Icon\"\nimport Link from \"../Link\"\nimport NakedButton from \"../NakedButton\"\nimport Search from \"../Search\"\nimport Translation from \"../Translation\"\nimport { NavLink } from \"../SharedStyledComponents\"\nimport { translateMessageId } from \"../../utils/translations\"\n\nimport { ISections } from \"./types\"\n\nconst Container = styled.div`\n  display: none;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    display: flex;\n  }\n`\n\nconst MenuIcon = styled(Icon)`\n  fill: ${(props) => props.theme.colors.text};\n`\n\nconst MenuButton = styled(NakedButton)`\n  margin-left: 1rem;\n`\n\nconst OtherIcon = styled(MenuIcon)`\n  margin-right: 1rem;\n`\n\nconst MobileModal = styled(motion.div)`\n  position: fixed;\n  background: ${(props) => props.theme.colors.modalBackground};\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: 100vh;\n`\n\nconst mobileModalVariants = {\n  open: { display: \"block\", opacity: 1 },\n  closed: { display: \"none\", opacity: 0 },\n}\n\nconst MenuContainer = styled(motion.div)`\n  background: ${(props) => props.theme.colors.background};\n  z-index: 99;\n  position: fixed;\n  left: 0;\n  top: 0;\n  height: 100vh;\n  overflow: hidden;\n  width: 100%;\n  max-width: 450px;\n`\n\nconst mobileMenuVariants = {\n  closed: { x: `-100%`, transition: { duration: 0.2 } },\n  open: { x: 0, transition: { duration: 0.8 } },\n}\n\nconst GlyphButton = styled.svg`\n  margin: 0 0.125rem;\n  width: 1.5rem;\n  height: 2.5rem;\n  position: relative;\n  stroke-width: 2px;\n  z-index: 100;\n  & > path {\n    stroke: ${(props) => props.theme.colors.text};\n    fill: none;\n  }\n  &:hover {\n    color: ${(props) => props.theme.colors.primary};\n    & > path {\n      stroke: ${(props) => props.theme.colors.primary};\n    }\n  }\n`\n\nconst hamburgerSvg =\n  \"M 2 13 l 10 0 l 0 0 l 10 0 M 4 19 l 8 0 M 12 19 l 8 0 M 2 25 l 10 0 l 0 0 l 10 0\"\nconst glyphSvg =\n  \"M 2 19 l 10 -14 l 0 0 l 10 14 M 2 19 l 10 7 M 12 26 l 10 -7 M 2 22 l 10 15 l 0 0 l 10 -15\"\nconst closeSvg =\n  \"M 2 13 l 0 -3 l 20 0 l 0 3 M 7 14 l 10 10 M 7 24 l 10 -10 M 2 25 l 0 3 l 20 0 l 0 -3\"\n\nconst glyphPathVariants = {\n  closed: {\n    d: hamburgerSvg,\n    transition: { duration: 0.4 },\n  },\n  open: {\n    d: [hamburgerSvg, glyphSvg, glyphSvg, glyphSvg, closeSvg],\n    transition: { duration: 1.2 },\n  },\n}\n\nconst SearchContainer = styled(MenuContainer)`\n  z-index: 101;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n`\n\nconst SearchHeader = styled.h3`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  & > svg {\n    fill: ${(props) => props.theme.colors.text};\n  }\n`\n\nconst CloseIconContainer = styled.span`\n  z-index: 102;\n  cursor: pointer;\n\n  & > svg {\n    fill: ${(props) => props.theme.colors.text};\n  }\n`\n\nconst MenuItems = styled.ul`\n  margin: 0;\n  height: 100%;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  padding: 3rem 1rem 8rem;\n`\n\nconst NavListItem = styled.li`\n  margin: 0;\n  margin-bottom: 3rem;\n  list-style-type: none;\n  list-style-image: none;\n`\n\nconst StyledNavLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  margin: 0;\n`\n\nconst SectionTitle = styled.div`\n  margin: 1rem 0;\n  font-size: 1.3rem;\n  color: ${(props) => props.theme.colors.text};\n`\n\nconst SectionSubtitle = styled.div`\n  margin-top: 2rem;\n  margin-bottom: 1rem;\n  font-size: 0.9rem;\n  line-height: 1;\n  color: ${(props) => props.theme.colors.text};\n`\n\nconst SectionItems = styled.ul`\n  margin: 0;\n`\n\nconst SectionItem = styled.li`\n  margin-bottom: 1rem;\n  list-style-type: none;\n  list-style-image: none;\n  opacity: 0.7;\n  &:hover {\n    opacity: 1;\n  }\n`\n\nconst BottomMenu = styled(motion.div)`\n  background: ${(props) => props.theme.colors.background};\n  border-top: 1px solid ${(props) => props.theme.colors.lightBorder};\n  padding-right: 1rem;\n  padding-left: 1rem;\n  margin-top: auto;\n  display: flex;\n  justify-content: space-between;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 108px;\n  align-items: center;\n  width: 100%;\n  max-width: 450px;\n  z-index: 99;\n`\n\nconst BottomItem = styled.div`\n  flex: 1 1 120px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: pointer;\n  color: ${(props) => props.theme.colors.text};\n  & > svg {\n    fill: ${(props) => props.theme.colors.text};\n  }\n  &:hover {\n    color: ${(props) => props.theme.colors.primary};\n    & > svg {\n      fill: ${(props) => props.theme.colors.primary};\n    }\n  }\n`\n\nconst BottomLink = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: ${(props) => props.theme.colors.text};\n  & > svg {\n    fill: ${(props) => props.theme.colors.text};\n  }\n  &:hover {\n    text-decoration: none;\n    color: ${(props) => props.theme.colors.primary};\n    & > svg {\n      fill: ${(props) => props.theme.colors.primary};\n    }\n  }\n`\n\nconst BottomItemText = styled.div`\n  font-size: 0.875rem;\n  line-height: 1.6;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  margin-top: 0.5rem;\n  text-transform: uppercase;\n  text-align: center;\n  opacity: 0.7;\n  &:hover {\n    opacity: 1;\n  }\n`\n\nconst BlankSearchState = styled.div`\n  color: ${(props) => props.theme.colors.text};\n  background: ${(props) => props.theme.colors.searchBackgroundEmpty};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 10vw;\n  align-self: center;\n  width: 280px;\n  width: min(60vw, 280px);\n  height: 280px;\n  height: min(60vw, 280px);\n  border-radius: 100%;\n`\n\nexport interface IProps {\n  isMenuOpen: boolean\n  isSearchOpen: boolean\n  isDarkTheme: boolean\n  toggleMenu: (item?: \"search\" | \"menu\") => void\n  toggleTheme: () => void\n  linkSections: ISections\n  fromPageParameter: string\n}\n\nconst MobileNavMenu: React.FC<IProps> = ({\n  isMenuOpen,\n  isSearchOpen,\n  isDarkTheme,\n  toggleMenu,\n  toggleTheme,\n  linkSections,\n  fromPageParameter,\n}) => {\n  const intl = useIntl()\n\n  const isOpen = isMenuOpen || isSearchOpen\n\n  const handleClick = (): void => {\n    toggleMenu()\n  }\n\n  return (\n    <Container>\n      <MenuButton\n        onClick={() => toggleMenu(\"search\")}\n        aria-label={translateMessageId(\"aria-toggle-search-button\", intl)}\n      >\n        <OtherIcon name=\"search\" />\n      </MenuButton>\n      <MenuButton\n        onClick={() => toggleMenu(\"menu\")}\n        aria-label={translateMessageId(\"aria-toggle-menu-button\", intl)}\n      >\n        <GlyphButton viewBox=\"0 0 24 40\">\n          <motion.path\n            variants={glyphPathVariants}\n            initial={false}\n            animate={isOpen ? \"open\" : \"closed\"}\n          />\n        </GlyphButton>\n      </MenuButton>\n      <MobileModal\n        animate={isOpen ? \"open\" : \"closed\"}\n        variants={mobileModalVariants}\n        initial=\"closed\"\n        onClick={handleClick}\n      />\n      <MenuContainer\n        aria-hidden={!isMenuOpen}\n        animate={isMenuOpen ? \"open\" : \"closed\"}\n        variants={mobileMenuVariants}\n        initial=\"closed\"\n      >\n        <MenuItems>\n          {Object.keys(linkSections).map((sectionKey, idx) => {\n            const section = linkSections[sectionKey]\n            return section.items ? (\n              <NavListItem\n                key={idx}\n                aria-label={`Select ${translateMessageId(section.text, intl)}`}\n              >\n                <SectionTitle>\n                  <Translation id={section.text} />\n                </SectionTitle>\n                <SectionItems>\n                  {section.items.map((item, idx) =>\n                    item.items ? (\n                      <React.Fragment key={idx}>\n                        <SectionSubtitle>{item.text}</SectionSubtitle>\n                        {item.items.map((item, idx) => (\n                          <SectionItem key={idx} onClick={handleClick}>\n                            <StyledNavLink\n                              to={item.to}\n                              isPartiallyActive={item.isPartiallyActive}\n                            >\n                              <Translation id={item.text} />\n                            </StyledNavLink>\n                          </SectionItem>\n                        ))}\n                      </React.Fragment>\n                    ) : (\n                      <SectionItem key={idx} onClick={handleClick}>\n                        <StyledNavLink\n                          to={item.to}\n                          isPartiallyActive={item.isPartiallyActive}\n                        >\n                          <Translation id={item.text} />\n                        </StyledNavLink>\n                      </SectionItem>\n                    )\n                  )}\n                </SectionItems>\n              </NavListItem>\n            ) : (\n              <NavListItem onClick={handleClick} key={idx}>\n                <NavLink\n                  to={section.to}\n                  isPartiallyActive={section.isPartiallyActive}\n                >\n                  <Translation id={section.text} />\n                </NavLink>\n              </NavListItem>\n            )\n          })}\n        </MenuItems>\n      </MenuContainer>\n      <BottomMenu\n        aria-hidden={!isMenuOpen}\n        animate={isMenuOpen ? \"open\" : \"closed\"}\n        variants={mobileMenuVariants}\n        initial=\"closed\"\n      >\n        <BottomItem onClick={() => toggleMenu(\"search\")}>\n          <MenuIcon name=\"search\" />\n          <BottomItemText>\n            <Translation id=\"search\" />\n          </BottomItemText>\n        </BottomItem>\n        <BottomItem onClick={toggleTheme}>\n          <MenuIcon name={isDarkTheme ? \"darkTheme\" : \"lightTheme\"} />\n          <BottomItemText>\n            <Translation id={isDarkTheme ? \"dark-mode\" : \"light-mode\"} />\n          </BottomItemText>\n        </BottomItem>\n        <BottomItem onClick={handleClick}>\n          <BottomLink to={`/languages/${fromPageParameter}`}>\n            <MenuIcon name=\"language\" />\n            <BottomItemText>\n              <Translation id=\"languages\" />\n            </BottomItemText>\n          </BottomLink>\n        </BottomItem>\n      </BottomMenu>\n      <SearchContainer\n        animate={isSearchOpen ? \"open\" : \"closed\"}\n        variants={mobileMenuVariants}\n        initial=\"closed\"\n      >\n        <SearchHeader>\n          <Translation id=\"search\" />\n          <CloseIconContainer onClick={() => toggleMenu(\"search\")}>\n            <Icon name=\"close\" />\n          </CloseIconContainer>\n        </SearchHeader>\n        <Search handleSearchSelect={toggleMenu} />\n        <BlankSearchState>\n          <Emoji text=\":sailboat:\" size={3} />\n          <Translation id=\"search-box-blank-state-text\" />\n        </BlankSearchState>\n      </SearchContainer>\n    </Container>\n  )\n}\n\nexport default MobileNavMenu\n"],"names":["Container","props","theme","breakpoints","l","MenuIcon","Icon","colors","text","MenuButton","NakedButton","OtherIcon","MobileModal","motion","modalBackground","mobileModalVariants","open","display","opacity","closed","MenuContainer","background","mobileMenuVariants","x","transition","duration","GlyphButton","primary","hamburgerSvg","glyphSvg","glyphPathVariants","d","SearchContainer","SearchHeader","CloseIconContainer","MenuItems","NavListItem","StyledNavLink","NavLink","SectionTitle","SectionSubtitle","SectionItems","SectionItem","BottomMenu","lightBorder","BottomItem","BottomLink","Link","BottomItemText","BlankSearchState","searchBackgroundEmpty","_ref","isMenuOpen","isSearchOpen","isDarkTheme","toggleMenu","toggleTheme","linkSections","fromPageParameter","intl","useIntl","isOpen","handleClick","___EmotionJSX","onClick","translateMessageId","name","viewBox","variants","initial","animate","Object","keys","map","sectionKey","idx","section","items","key","Translation","id","item","React","to","isPartiallyActive","Search","handleSearchSelect","Emoji","size"],"sourceRoot":""}