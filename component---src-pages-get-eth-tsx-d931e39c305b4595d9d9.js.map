{"version":3,"file":"component---src-pages-get-eth-tsx-d931e39c305b4595d9d9.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/Button/index.tsx","webpack://ethereum-org-website/./src/components/CardList.tsx","webpack://ethereum-org-website/./src/components/EthPriceCard.tsx","webpack://ethereum-org-website/./src/components/FeedbackCard.tsx","webpack://ethereum-org-website/./src/components/InfoBanner.tsx","webpack://ethereum-org-website/./src/components/Tooltip.tsx"],"sourcesContent":["import React from \"react\"\nimport { Button as ChakraButton, ButtonProps } from \"@chakra-ui/react\"\n\nimport { scrollIntoView } from \"../../utils/scrollIntoView\"\n\nexport interface IProps extends ButtonProps {\n  toId?: string\n}\n\nconst Button: React.FC<IProps> = ({ toId, children, ...props }) => {\n  const handleOnClick = () => {\n    if (!toId) {\n      return\n    }\n\n    scrollIntoView(toId)\n  }\n\n  return (\n    <ChakraButton onClick={handleOnClick} {...props}>\n      {children}\n    </ChakraButton>\n  )\n}\n\nexport default Button\n","import React, { ReactNode } from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport {\n  Box,\n  Flex,\n  HStack,\n  LinkBox,\n  LinkOverlay,\n  StackProps,\n  useColorModeValue,\n} from \"@chakra-ui/react\"\n\nimport { ImageProp } from \"../types\"\nimport * as url from \"../utils/url\"\nimport Link from \"./Link\"\n\nexport type CardListItem = {\n  title?: ReactNode\n  description?: ReactNode\n  caption?: ReactNode\n  link?: string\n  id?: string\n} & ImageProp\n\nexport interface IProps {\n  content: Array<CardListItem>\n  clickHandler?: (idx: string | number) => void\n}\n\nconst CardContainer = (props: StackProps) => {\n  return (\n    <HStack\n      spacing={4}\n      p={4}\n      color=\"text\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      _hover={{\n        borderRadius: \"base\",\n        boxShadow: \"0 0 1px var(--eth-colors-primary)\",\n        background: \"tableBackgroundHover\",\n      }}\n      {...props}\n    />\n  )\n}\n\nconst Card = (props: CardListItem & Omit<StackProps, \"title\" | \"id\">) => {\n  const { title, description, caption, link, image, alt, ...rest } = props\n\n  const isLink = !!link\n  const isExternal = url.isExternal(link || \"\")\n\n  const descriptionColor = useColorModeValue(\"gray.500\", \"gray.400\")\n\n  return (\n    <CardContainer {...rest}>\n      {image && <Box as={GatsbyImage} image={image} alt={alt} minW=\"20px\" />}\n      <Flex flex=\"1 1 75%\" direction=\"column\">\n        {isLink ? (\n          <LinkOverlay\n            as={Link}\n            href={link}\n            hideArrow\n            color=\"text\"\n            textDecoration=\"none\"\n            _hover={{ textDecoration: \"none\" }}\n          >\n            {title}\n          </LinkOverlay>\n        ) : (\n          <Box>{title}</Box>\n        )}\n\n        <Box fontSize=\"sm\" mb={0} color={descriptionColor}>\n          {description}\n        </Box>\n      </Flex>\n      {caption && (\n        <Flex flex=\"1 0 25%\" align=\"center\" wrap=\"wrap\" mr={4}>\n          <Box fontSize=\"sm\" mb={0} opacity={0.6}>\n            {caption}\n          </Box>\n        </Flex>\n      )}\n      {isExternal && <Box>↗</Box>}\n    </CardContainer>\n  )\n}\n\nconst CardList: React.FC<IProps> = ({ content, clickHandler = () => null }) => (\n  <Box bg=\"background\" width=\"full\">\n    {content.map((listItem, idx) => {\n      const { link, id } = listItem\n      const isLink = !!link\n\n      return isLink ? (\n        <LinkBox key={id || idx}>\n          <Card {...listItem} />\n        </LinkBox>\n      ) : (\n        <Card\n          key={idx}\n          onClick={() => clickHandler(idx)}\n          mb={4}\n          {...listItem}\n        />\n      )\n    })}\n  </Box>\n)\n\nexport default CardList\n","import React, { useState, useEffect } from \"react\"\nimport { Box, Flex, Heading, Icon } from \"@chakra-ui/react\"\nimport { MdInfoOutline } from \"react-icons/md\"\nimport axios from \"axios\"\n\nimport Translation from \"./Translation\"\nimport Link from \"./Link\"\nimport Tooltip from \"./Tooltip\"\n\nexport interface IProps {\n  className?: string\n  isLeftAlign?: boolean\n}\n\n// TODO add prop to left vs. center align\nconst EthPriceCard: React.FC<IProps> = ({ className, isLeftAlign = false }) => {\n  const [state, setState] = useState({\n    currentPriceUSD: \"\",\n    percentChangeUSD: 0,\n    hasError: false,\n  })\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd&include_24hr_change=true\"\n      )\n      .then((response) => {\n        if (response.data && response.data.ethereum) {\n          const currentPriceUSD = response.data.ethereum.usd\n          const percentChangeUSD =\n            +response.data.ethereum.usd_24h_change.toFixed(2)\n          setState({\n            currentPriceUSD,\n            percentChangeUSD,\n            hasError: false,\n          })\n        }\n      })\n      .catch((error) => {\n        console.error(error)\n        setState({\n          ...state,\n          hasError: true,\n        })\n      })\n  }, [])\n\n  const isLoading = !state.currentPriceUSD\n\n  let price = isLoading ? (\n    <Translation id=\"loading\" />\n  ) : (\n    `$${state.currentPriceUSD}`\n  )\n\n  if (state.hasError) {\n    price = <Translation id=\"loading-error-refresh\" />\n  }\n\n  const isNegativeChange = state?.percentChangeUSD < 0\n\n  const change = state.percentChangeUSD\n    ? isNegativeChange\n      ? `${state.percentChangeUSD}% ↘`\n      : `${state.percentChangeUSD}% ↗`\n    : ``\n\n  const tooltipContent = (\n    <Box>\n      <Translation id=\"data-provided-by\" />{\" \"}\n      <Link to=\"https://www.coingecko.com/en/api\">coingecko.com</Link>\n    </Box>\n  )\n\n  return (\n    <Flex\n      className={className}\n      direction=\"column\"\n      align={isLeftAlign ? \"flex-start\" : \"center\"}\n      justify=\"space-between\"\n      background={\n        isNegativeChange\n          ? \"priceCardBackgroundNegative\"\n          : \"priceCardBackgroundPositive\"\n      }\n      border=\"1px solid\"\n      borderColor={\n        isNegativeChange ? \"priceCardBorderNegative\" : \"priceCardBorder\"\n      }\n      p={6}\n      w=\"full\"\n      maxW=\"420px\"\n      maxH=\"192px\"\n      borderRadius=\"base\"\n    >\n      <Heading\n        as=\"h4\"\n        color=\"text200\"\n        m={0}\n        fontSize=\"sm\"\n        fontWeight=\"medium\"\n        lineHeight=\"140%\"\n        letterSpacing=\"0.04em\"\n        textTransform=\"uppercase\"\n      >\n        <Translation id=\"eth-current-price\" />\n        <Tooltip content={tooltipContent}>\n          <Icon as={MdInfoOutline} boxSize=\"14px\" ml={2} />\n        </Tooltip>\n      </Heading>\n\n      <Box\n        m={state.hasError ? \"1rem 0\" : 0}\n        lineHeight=\"1.4\"\n        fontSize={state.hasError ? \"md\" : \"5xl\"}\n        color={state.hasError ? \"fail\" : \"text\"}\n      >\n        {price}\n      </Box>\n      <Flex\n        w=\"full\"\n        align=\"center\"\n        justify={isLeftAlign ? \"flex-start\" : \"center\"}\n        minH=\"33px\" /* prevents jump when price loads*/\n      >\n        <Box\n          fontSize=\"2xl\"\n          lineHeight=\"140%\"\n          mr={4}\n          color={isNegativeChange ? \"fail300\" : \"success\"}\n        >\n          {change}\n        </Box>\n        <Box\n          fontSize=\"sm\"\n          lineHeight=\"140%\"\n          letterSpacing=\"0.04em\"\n          textTransform=\"uppercase\"\n          color=\"text300\"\n        >\n          (<Translation id=\"last-24-hrs\" />)\n        </Box>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default EthPriceCard\n","// Library imports\nimport React, { ReactNode, useState } from \"react\"\nimport { Flex, FlexProps, Heading } from \"@chakra-ui/react\"\n// Component imports\nimport Button from \"./Button\"\nimport Translation from \"./Translation\"\n// SVG imports\nimport { FeedbackThumbsUpIcon } from \"./icons\"\n// Utility imports\nimport { trackCustomEvent } from \"../utils/matomo\"\n// Hook imports\nimport { useSurvey } from \"../hooks/useSurvey\"\n\nexport interface IProps extends FlexProps {\n  prompt?: string\n  isArticle?: boolean\n}\n\nconst FeedbackCard: React.FC<IProps> = ({\n  prompt,\n  isArticle = false,\n  ...props\n}) => {\n  const [feedbackSubmitted, setFeedbackSubmitted] = useState(false)\n  const surveyUrl = useSurvey(feedbackSubmitted)\n\n  const location = typeof window !== \"undefined\" ? window.location.href : \"\"\n  const isTutorial = location.includes(\"tutorials\")\n\n  const getTitle = (feedbackSubmitted: boolean): ReactNode => {\n    if (!feedbackSubmitted) {\n      if (prompt) return prompt\n      if (isTutorial) return <Translation id=\"feedback-card-prompt-tutorial\" />\n      if (isArticle) return <Translation id=\"feedback-card-prompt-article\" />\n      return <Translation id=\"feedback-card-prompt-page\" />\n    }\n    return <Translation id=\"feedback-widget-thank-you-title\" />\n  }\n\n  const handleSubmit = (choice: boolean): void => {\n    trackCustomEvent({\n      eventCategory: `Page is helpful feedback`,\n      eventAction: `Clicked`,\n      eventName: String(choice),\n    })\n    setFeedbackSubmitted(true)\n  }\n  const handleSurveyOpen = (): void => {\n    trackCustomEvent({\n      eventCategory: `Feedback survey opened`,\n      eventAction: `Clicked`,\n      eventName: \"Feedback survey opened\",\n    })\n    window && surveyUrl && window.open(surveyUrl, \"_blank\")\n  }\n  return (\n    <Flex\n      border=\"1px\"\n      borderColor=\"border\"\n      bg=\"feedbackGradient\"\n      borderRadius=\"base\"\n      p={6}\n      direction=\"column\"\n      mb={4}\n      mt={8}\n      w=\"full\"\n      {...props}\n    >\n      <Flex direction=\"column\" gap={4}>\n        <Heading as=\"h3\" m={0} mb={2} fontSize=\"1.375rem\" fontWeight=\"bold\">\n          {getTitle(feedbackSubmitted)}\n        </Heading>\n        {feedbackSubmitted && (\n          <p>\n            <Translation id=\"feedback-widget-thank-you-subtitle\" />{\" \"}\n            <Translation id=\"feedback-widget-thank-you-subtitle-ext\" />\n          </p>\n        )}\n        <Flex gap={4}>\n          {!feedbackSubmitted ? (\n            <>\n              <Button\n                variant=\"outline-color\"\n                leftIcon={<FeedbackThumbsUpIcon />}\n                onClick={() => handleSubmit(true)}\n              >\n                <Translation id=\"yes\" />\n              </Button>\n              <Button\n                variant=\"outline-color\"\n                leftIcon={<FeedbackThumbsUpIcon transform=\"scaleY(-1)\" />}\n                onClick={() => handleSubmit(false)}\n              >\n                <Translation id=\"no\" />\n              </Button>\n            </>\n          ) : (\n            <Button variant=\"outline-color\" onClick={handleSurveyOpen}>\n              <Translation id=\"feedback-widget-thank-you-cta\" />\n            </Button>\n          )}\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default FeedbackCard\n","import React from \"react\"\nimport { Flex } from \"@chakra-ui/react\"\nimport Emoji from \"./Emoji\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  className?: string\n  emoji?: string\n  isWarning?: boolean\n  shouldCenter?: boolean\n  shouldSpaceBetween?: boolean\n}\n\nconst InfoBanner: React.FC<IProps> = ({\n  children,\n  className,\n  emoji,\n  isWarning = false,\n  shouldCenter = false,\n  shouldSpaceBetween = false,\n  ...props\n}) => {\n  const banner = (\n    <Flex\n      align=\"center\"\n      p={6}\n      borderRadius={\"sm\"}\n      maxW={shouldCenter ? \"55rem\" : \"100%\"}\n      color=\"black300\"\n      bg={isWarning ? \"warning\" : \"infoBanner\"}\n      direction={{ base: \"column\", sm: \"row\" }}\n      {...props}\n    >\n      {emoji && (\n        <Emoji\n          flexGrow=\"0\"\n          flexShrink=\"0\"\n          mr={{ base: 0, sm: 6 }}\n          mb={{ base: 2, sm: 0 }}\n          alignSelf={{ base: \"flex-start\", sm: \"auto\" }}\n          text={emoji}\n          fontSize=\"4xl\"\n        />\n      )}\n      <Flex\n        display={{ base: \"block\", sm: shouldSpaceBetween ? \"flex\" : \"block\" }}\n        align={shouldSpaceBetween ? \"center\" : \"auto\"}\n        w={shouldSpaceBetween ? \"100%\" : \"auto\"}\n        justify={shouldSpaceBetween ? \"space-between\" : \"auto\"}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  )\n  return shouldCenter ? <Flex justify=\"center\">{banner}</Flex> : banner\n}\n\nexport default InfoBanner\n","import React, { ReactNode, useState } from \"react\"\nimport { Box, useColorModeValue } from \"@chakra-ui/react\"\nimport * as utils from \"../utils/isMobile\"\n\nexport interface IProps {\n  content: ReactNode\n  children?: React.ReactNode\n}\n\n// TODO add `position` prop\nconst Tooltip: React.FC<IProps> = ({ content, children }) => {\n  const [isVisible, setIsVisible] = useState<boolean>(false)\n  const isMobile = utils.isMobile()\n  const shadow = useColorModeValue(\"tableBox.light\", \"tableBox.dark\")\n\n  return (\n    <>\n      {isVisible && isMobile && (\n        // Invisible full screen div \"below\" the clickable link\n        // Added so clicking away anywhere will hide Tooltip\n        <Box\n          position=\"fixed\"\n          top={0}\n          left={0}\n          w=\"full\"\n          h=\"full\"\n          zIndex={1}\n          onClick={() => setIsVisible(false)}\n        />\n      )}\n      <Box\n        position=\"relative\"\n        display=\"inline-flex\"\n        userSelect=\"none\"\n        cursor=\"pointer\"\n        title=\"More info\"\n        onMouseEnter={!isMobile ? () => setIsVisible(true) : undefined}\n        onMouseLeave={!isMobile ? () => setIsVisible(false) : undefined}\n        onClick={isMobile ? () => setIsVisible(!isVisible) : undefined}\n      >\n        {children}\n        {isVisible && (\n          <Box\n            textAlign=\"center\"\n            whiteSpace=\"normal\"\n            w={{ base: \"140px\", md: \"200px\" }}\n            color=\"text\"\n            bg=\"background\"\n            boxShadow={shadow}\n            position=\"absolute\"\n            zIndex=\"docked\"\n            py={4}\n            px={2}\n            textTransform=\"none\"\n            fontSize=\"sm\"\n            fontWeight=\"medium\"\n            cursor=\"default\"\n            borderRadius=\"base\"\n            bottom=\"125%\"\n            left=\"25%\"\n            transform=\"translateX(-50%)\"\n          >\n            <Box\n              as=\"span\"\n              position=\"absolute\"\n              bottom={-2}\n              left=\"calc(50% - 6px)\"\n              borderRightWidth={10}\n              borderRightStyle=\"solid\"\n              borderRightColor=\"transparent\"\n              borderTopWidth={10}\n              borderTopStyle=\"solid\"\n              borderTopColor=\"background\"\n              borderLeftWidth={10}\n              borderLeftStyle=\"solid\"\n              borderLeftColor=\"transparent\"\n            />\n            {content}\n          </Box>\n        )}\n      </Box>\n    </>\n  )\n}\n\nexport default Tooltip\n"],"names":["_ref","toId","children","props","___EmotionJSX","ChakraButton","onClick","scrollIntoView","CardContainer","HStack","spacing","p","color","border","borderColor","_hover","borderRadius","boxShadow","background","Card","title","description","caption","link","image","alt","rest","isLink","isExternal","url","descriptionColor","useColorModeValue","Box","as","GatsbyImage","minW","Flex","flex","direction","LinkOverlay","Link","href","hideArrow","textDecoration","fontSize","mb","align","wrap","mr","opacity","content","clickHandler","bg","width","map","listItem","idx","id","LinkBox","key","className","isLeftAlign","state","setState","useState","currentPriceUSD","percentChangeUSD","hasError","useEffect","axios","then","response","data","ethereum","usd","usd_24h_change","toFixed","catch","error","console","price","Translation","isNegativeChange","change","tooltipContent","to","justify","w","maxW","maxH","Heading","m","fontWeight","lineHeight","letterSpacing","textTransform","Tooltip","Icon","MdInfoOutline","boxSize","ml","minH","prompt","isArticle","feedbackSubmitted","setFeedbackSubmitted","surveyUrl","useSurvey","isTutorial","window","location","includes","handleSubmit","choice","trackCustomEvent","eventCategory","eventAction","eventName","String","mt","gap","getTitle","Button","variant","open","leftIcon","FeedbackThumbsUpIcon","transform","emoji","isWarning","shouldCenter","shouldSpaceBetween","banner","base","sm","Emoji","flexGrow","flexShrink","alignSelf","text","display","isVisible","setIsVisible","isMobile","utils","shadow","position","top","left","h","zIndex","userSelect","cursor","onMouseEnter","undefined","onMouseLeave","textAlign","whiteSpace","md","py","px","bottom","borderRightWidth","borderRightStyle","borderRightColor","borderTopWidth","borderTopStyle","borderTopColor","borderLeftWidth","borderLeftStyle","borderLeftColor"],"sourceRoot":""}