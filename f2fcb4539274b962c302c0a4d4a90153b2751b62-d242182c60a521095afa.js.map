{"version":3,"file":"f2fcb4539274b962c302c0a4d4a90153b2751b62-d242182c60a521095afa.js","mappings":"yPAUA,SAASA,EAAKC,EAAQC,EAAa,IACjC,MAAMC,EAAQC,OAAOC,OAAO,CAAC,EAAGJ,GAChC,IAAK,MAAMK,KAAOJ,EACZI,KAAOH,UACFA,EAAMG,GAEjB,OAAOH,CACT,CAKA,SAASI,EAASC,GAChB,MAAM,QACJC,EAAO,IACPC,EAAG,OACHC,EAAM,OACNC,EAAM,QACNC,EAAO,YACPC,EAAW,MACXC,EAAK,eACLC,GACER,GACGS,EAAQC,IAAa,IAAAC,UAAS,YACrC,IAAAC,YAAU,KACRF,EAAUR,EAAM,UAAY,UAAU,GACrC,CAACA,IACJ,MAAMW,GAAW,IAAAC,UACXC,GAAO,IAAAC,cAAY,KACvB,IAAKd,EACH,OACFe,IACA,MAAMC,EAAM,IAAIC,MAChBD,EAAIhB,IAAMA,EACNI,IACFY,EAAIZ,YAAcA,GAChBH,IACFe,EAAIE,OAASjB,GACXI,IACFW,EAAIX,MAAQA,GACVN,IACFiB,EAAIjB,QAAUA,GAChBiB,EAAIG,OAAUC,IACZL,IACAP,EAAU,UACA,MAAVN,GAA0BA,EAAOkB,EAAM,EAEzCJ,EAAIK,QAAWC,IACbP,IACAP,EAAU,UACC,MAAXL,GAA2BA,EAAQmB,EAAM,EAE3CX,EAASY,QAAUP,CAAG,GACrB,CAAChB,EAAKI,EAAaH,EAAQI,EAAOH,EAAQC,EAASJ,IAChDgB,EAAQ,KACRJ,EAASY,UACXZ,EAASY,QAAQJ,OAAS,KAC1BR,EAASY,QAAQF,QAAU,KAC3BV,EAASY,QAAU,KACrB,EAYF,OAVA,QAAoB,KAClB,IAAIjB,EAKJ,MAHe,YAAXC,GACFM,IAEK,KACLE,GAAO,CACR,GACA,CAACR,EAAQM,EAAMP,IACXA,EAAiB,SAAWC,CACrC,CACA,IAIIiB,GAAc,SAAW,SAAsB1B,EAAO2B,GACxD,MAAM,UAAEC,EAAS,WAAEC,EAAU,IAAEC,KAAQC,GAAS/B,EAChD,OAAuB,gBAAoB,MAAO,CAChDgC,MAAOJ,EACPK,OAAQJ,EACRF,MACAG,SACGC,GAEP,IACAL,EAAYQ,YAAc,cAG1B,IAAIC,GAAS,SAAY,SAAgBnC,EAAO2B,GAC9C,MAAM,YACJS,EAAW,SACXC,EAAQ,IACRnC,EAAG,OACHC,EAAM,MACNmC,EAAK,IACLC,EAAG,QACHtC,EAAO,eACPO,EAAc,YACdF,EAAW,iBACXkC,EAAmB,oBAAmB,eACtCC,KACGV,GACD/B,EAEE0C,EAAuC,MAAXzC,GAAmBO,UADZ,IAAhB4B,QAAuC,IAAbC,GAM7CM,EAtCsB,EAAClC,EAAQ+B,IAAgC,WAAX/B,GAA4C,sBAArB+B,GAAuD,WAAX/B,GAA4C,YAArB+B,EAsC1HI,CAJX7C,EAAS,IACnBC,EACHQ,eAAgBkC,IAEwCF,GACpDK,EAAS,CACblB,MACAmB,UAAWP,EACXQ,eAAgBT,KACbI,EAA4BX,EAAOvC,EAAKuC,EAAM,CAAC,UAAW,YAE/D,OAAIY,EACEN,GAEmB,gBAAoB,SAAY,CACrDW,GAAItB,EACJuB,UAAW,4BACX/C,IAAKkC,KACFS,IAGgB,gBAAoB,SAAY,CACrDG,GAAItB,EACJxB,MACAC,SACAG,cACAL,UACAwC,iBACAQ,UAAW,kBACRJ,GAEP,IACAV,EAAOD,YAAc,QAIrB,IAAIgB,GAAM,SAAY,CAAClD,EAAO2B,IAAwB,gBAAoB,SAAa,CACrFA,MACAqB,GAAItB,EACJuB,UAAW,kBACRjD,K,yICzJDmD,EAAK,IAAIC,IAAeA,EAAWC,OAAOC,SAASC,KAAK,MAcvDC,EAA0BC,IAAuB,OAAc,CAClEC,KAAM,0BACNC,aAAc,gHAIZC,GAAa,SAAW,SAAqB5D,EAAO2B,GACtD,MAAMkC,GAAS,QAAoB,aAAc7D,GAC3C8D,GAAW,QAAiB9D,IAC5B,SACJ+D,EAAQ,QACRC,EAAU,SAAQ,UAClBC,EAAY,IAAG,UACfhB,KACGlB,GACD+B,EACEI,GAAgB,OAAiBH,GACjCI,EAAQD,EAAcE,OACtBC,EAASH,EAAcI,KAAI,CAACC,EAAOC,KAAU,IAAAC,cAAaF,EAAO,CACrEN,YACAD,UACAU,YAAaP,IAAUK,EAAQ,MAE3BG,EAAaxB,EAAG,oBAAqBF,GAC3C,OAAuB,gBAAoB,SAAY,CACrDtB,MACA,aAAc,aACdsB,UAAW0B,EACXC,MAAOf,EAAOgB,aACX9C,GACc,gBAAoByB,EAA0B,CAC/DsB,MAAOjB,GACU,gBAAoB,QAAW,CAChDZ,UAAW,2BACVoB,IACL,IACAT,EAAW1B,YAAc,aAczB,IAAI6C,GAAsB,SAAY,SAA8B/E,EAAO2B,GACzE,MAAM,QAAEqC,KAAYjC,GAAS/B,EAEvBgF,EAAkB,CACtBC,GAAIjB,KAFSP,IAGHQ,WAEZ,OAAuB,gBAAoB,UAAc,CACvDtC,MACAuD,KAAM,kBACHnD,EACH6C,MAAOI,GAEX,IACAD,EAAoB7C,YAAc,sBAIlC,IAAIiD,GAAiB,SAAY,SAAyBnF,EAAO2B,GAC/D,MAAM,cAAEyD,EAAa,GAAEpC,EAAE,UAAEC,EAAS,KAAEoC,KAAStD,GAAS/B,EAClD6D,EAASJ,IACT6B,EAAc,CAClB3D,MACAqB,KACAC,UAAWE,EAAG,0BAA2BF,MACtClB,GAEL,OAAIqD,EACqB,gBAAoB,UAAc,CACvD,eAAgB,OAChBR,MAAOf,EAAO0B,QACXD,IAGgB,gBAAoB,OAAW,CACpDV,MAAOf,EAAO0B,KACdF,UACGC,GAEP,IACAH,EAAejD,YAAc,iBAI7B,IAAIsD,GAAiB,SAAY,SAAyBxF,EAAO2B,GAC/D,MAAM,cACJyD,EAAa,UACbnB,EAAS,YACTS,EAAW,QACXV,EAAO,SACPD,EAAQ,UACRd,KACGlB,GACD/B,EAEEqE,GADgB,OAAkBN,GACXO,KAAKC,GAC5BA,EAAMkB,OAASN,GACV,IAAAV,cAAcF,EAAO,CAC1Ba,kBAGAb,EAAMkB,OAASV,GACV,IAAAN,cAAcF,EAAO,CAC1BP,UACAD,SAAUQ,EAAMvE,MAAM+D,UAAYE,IAG/BM,IAGHmB,EAAa,CACjBC,QAAS,cACTC,WAAY,YAHCnC,IAIHoC,MAENlB,EAAaxB,EAAG,+BAAgCF,GACtD,OAAuB,gBAAoB,QAAY,CACrDtB,MACAsB,UAAW0B,KACR5C,EACH6C,MAAOc,GACNrB,GAASK,GAA+B,gBAAoBK,EAAqB,CAClFf,WACCC,GACL,IACAuB,EAAetD,YAAc,iB,yFCtD7B,MApEsC4D,IAI/B,IAJgC,KACrCC,EAAI,WACJC,EAAa,GAEd,EADIC,GAAS,YAEZ,MAAMC,GAAOC,EAAAA,EAAAA,KAEPC,EAAYL,EAAKM,MAAM,KAGvBC,EAFSF,EAAU/C,QAAQwC,KAAWA,IAAMU,MAAMP,GAElC1B,KAAI,CAACkC,EAAMC,KAE/B,MAAMC,GAAOC,EAAAA,EAAAA,IAAOH,IAChBI,EAAAA,EAAAA,IAAmB,wBAAyBV,IAC5CW,EAAAA,EAAAA,IAAiBL,IACjBI,EAAAA,EAAAA,IAAmBJ,EAAMN,GACzB,GAEJ,MAAO,CACLY,SAAUV,EAAUG,MAAM,EAAGE,EAAM,EAAIT,GAAYzC,KAAK,KAAO,IAC/DmD,KAAMA,EAAKK,cACZ,IAGH,OACEC,EAAAA,EAAAA,IAACpD,GAAU,QACTqD,IAAI,OACJC,SAAS,WACTC,OAAO,IACPC,GAAI,EACJC,GAAI,CAGFC,GAAI,CACFC,EAAG,EACHC,WAAY,KAGZvB,GAEHK,EAAOhC,KAAI,CAACmD,EAAOhB,KAClB,MAAMrB,EAAgBW,IAAS0B,EAAMX,SACrC,OACEE,EAAAA,EAAAA,IAACxB,EAAc,CACb1F,IAAK2G,EACLrB,cAAeA,EACfsC,MAAM,sBACNC,SAAS,KACTC,cAAc,QACdJ,WAAW,OACXD,EAAG,IAEHP,EAAAA,EAAAA,IAAC7B,EAAc,CACbnC,GAAI6E,EAAAA,EACJC,GAAIL,EAAMX,SACViB,kBAAmB3C,EACnB4C,OAAQ,CAAEN,MAAO,UAAWO,UAAW,QACvCC,QAAS,CAAER,MAAO,YAEjBD,EAAMf,MAEM,IAGV,C,kLClEXyB,EAAiBnI,IAEnBgH,EAAAA,EAAAA,IAACoB,EAAAA,IAAM,QACLpE,QAAS,EACTqE,EAAG,EACHX,MAAM,OACNY,OAAO,YACPC,YAAY,SACZP,OAAQ,CACNQ,aAAc,OACdC,UAAW,oCACXC,WAAY,yBAEV1I,IAKJ2I,EAAQ3I,IACZ,MAAM,MAAE4I,EAAK,YAAEC,EAAW,QAAEC,EAAO,KAAEvD,EAAI,MAAEwD,EAAK,IAAEjH,GAAiB9B,EAAT+B,GAAI,OAAK/B,EAAK,GAElEgJ,IAAWzD,EACX0D,EAAaC,EAAAA,GAAe3D,GAAQ,IAEpC4D,GAAmBC,EAAAA,EAAAA,IAAkB,WAAY,YAEvD,OACEpC,EAAAA,EAAAA,IAACmB,EAAkBpG,EAChBgH,IAAS/B,EAAAA,EAAAA,IAACqC,EAAAA,GAAG,CAACrG,GAAIsG,EAAAA,EAAaP,MAAOA,EAAOjH,IAAKA,EAAKyH,KAAK,UAC7DvC,EAAAA,EAAAA,IAACwC,EAAAA,GAAI,CAACC,KAAK,UAAUC,UAAU,UAC5BV,GACChC,EAAAA,EAAAA,IAAC2C,EAAAA,GAAW,CACV3G,GAAI6E,EAAAA,EACJxC,KAAME,EACNqE,WAAS,EACTlC,MAAM,OACNmC,eAAe,OACf7B,OAAQ,CAAE6B,eAAgB,SAEzBjB,IAGH5B,EAAAA,EAAAA,IAACqC,EAAAA,GAAG,KAAET,IAGR5B,EAAAA,EAAAA,IAACqC,EAAAA,GAAG,CAAC1B,SAAS,KAAKP,GAAI,EAAGM,MAAOyB,GAC9BN,IAGJC,IACC9B,EAAAA,EAAAA,IAACwC,EAAAA,GAAI,CAACC,KAAK,UAAUnH,MAAM,SAASwH,KAAK,OAAOC,GAAI,IAClD/C,EAAAA,EAAAA,IAACqC,EAAAA,GAAG,CAAC1B,SAAS,KAAKP,GAAI,EAAG4C,QAAS,IAChClB,IAING,IAAcjC,EAAAA,EAAAA,IAACqC,EAAAA,GAAG,KAAC,KACN,EA0BpB,IAtBmCvD,IAAAA,IAAC,QAAEmE,EAAO,aAAEC,EAAe,KAAM,OAAM,SACxElD,EAAAA,EAAAA,IAACqC,EAAAA,GAAG,CAACc,GAAG,aAAanI,MAAM,QACxBiI,EAAQ3F,KAAI,CAAC8F,EAAU3D,KACtB,MAAM,KAAElB,EAAI,GAAE8E,GAAOD,EAGrB,QAFiB7E,GAGfyB,EAAAA,EAAAA,IAACsD,EAAAA,GAAO,CAACxK,IAAKuK,GAAM5D,IAClBO,EAAAA,EAAAA,IAAC2B,EAASyB,KAGZpD,EAAAA,EAAAA,IAAC2B,GAAI,QACH7I,IAAK2G,EACL8D,QAAS,IAAML,EAAazD,GAC5BW,GAAI,GACAgD,GAEP,IAEC,C,mJCjGJjH,EAAK,IAAIC,IAAeA,EAAWC,OAAOC,SAASC,KAAK,MAIvDiH,EAAsBC,IAAmB,OAAc,CAC1D/G,KAAM,sBACNgH,SAAU,kBACVC,aAAc,cAUhB,SAASC,EAASlH,GAChB,MAAOmH,EAAWC,GAAYpH,EAAK2C,MAAM,KACzC,OAAOwE,GAAaC,EAAW,GAAGD,EAAUE,OAAO,KAAKD,EAASC,OAAO,KAAOF,EAAUE,OAAO,EAClG,CACA,SAASC,EAAWhL,GAClB,MAAM,KAAE0D,EAAI,YAAEuH,KAAgBlJ,GAAS/B,EACjC6D,EAAS4G,IACf,OAAuB,gBAAoB,SAAY,CACrDvF,KAAM,MACN,aAAcxB,KACX3B,EACH6C,MAAOf,EAAOqH,OACbxH,EAAsB,MAAfuH,OAAsB,EAASA,EAAYvH,GAAQ,KAC/D,CACAsH,EAAW9I,YAAc,aAIzB,IAAIiJ,EAAqBnL,GAA0B,gBAAoB,SAAa,CAClFoL,QAAS,cACT1D,MAAO,OACP1F,MAAO,OACPC,OAAQ,OACRgB,UAAW,wBACRjD,GACc,gBAAoB,OAAQ,CAC7CqL,KAAM,eACNC,EAAG,kMACe,gBAAoB,OAAQ,CAC9CD,KAAM,eACNC,EAAG,gMAIL,SAASC,EAAYvL,GACnB,MAAM,IACJE,EAAG,OACHC,EAAM,QACNE,EAAO,YACP4K,EAAW,KACXvH,EAAI,aACJ8E,EAAY,QACZvI,EAAO,UACPuL,EAAS,KACTC,EAAuB,gBAAoBN,EAAmB,MAAK,eACnE3K,EAAc,eACdiC,GACEzC,EACES,GAAS,QAAS,CAAEP,MAAKG,UAASG,mBAGxC,OADsBN,KADO,WAAXO,GAGTiD,EAAuB,gBAAoBsH,EAAY,CAC5D/H,UAAW,0BACXgI,cACAvH,UACG,IAAAe,cAAagH,EAAM,CACtBvG,KAAM,MACN,aAAcsG,IAGK,gBAAoB,SAAa,CACtDtL,MACAC,SACA2B,IAAK4B,EACLjB,iBACAQ,UAAW,qBACXhD,UACA2E,MAAO,CACL5C,MAAO,OACPC,OAAQ,OACRa,UAAW,QACX0F,iBAGN,CACA+C,EAAYrJ,YAAc,cAG1B,IAAIwJ,EAAY,CACd/F,QAAS,cACTC,WAAY,SACZ+F,eAAgB,SAChBC,UAAW,SACXC,cAAe,YACfC,WAAY,SACZ5E,SAAU,WACV6E,WAAY,GAEVC,GAAS,SAAW,CAAChM,EAAO2B,KAC9B,MAAMkC,GAAS,QAAoB,SAAU7D,IACvC,IACJE,EAAG,OACHC,EAAM,KACNuD,EAAI,WACJuI,EAAU,aACVzD,EAAe,OAAM,QACrBnI,EAAO,YACP4K,EAAcL,EAAQ,KACtBa,EAAuB,gBAAoBN,EAAmB,MAAK,UACnEK,EAAY,UAAS,QACrBvL,EAAO,SACP8D,EAAQ,YACRwE,EAAW,eACX/H,KACGuB,IACD,QAAiB/B,GACfkM,EAAe,CACnB1D,eACA2D,YAAaF,EAAa,WAAQ,KAC/BP,KACA7H,EAAOgB,WAKZ,OAHI0D,IACF2D,EAAa3D,YAAcA,GAEN,gBAAoB,UAAc,CACvD5G,SACGI,EACHkB,UAAWE,EAAG,gBAAiBnD,EAAMiD,WACrC2B,MAAOsH,GACU,gBAAoB1B,EAAsB,CAC3D1F,MAAOjB,GACU,gBAAoB0H,EAAa,CAClDrL,MACAC,SACAF,UACAI,UACA4K,cACAvH,OACA8E,eACAiD,OACAD,YACAhL,mBACEuD,GAAU,IAEhBiI,EAAO9J,YAAc,UAuBH,SAAY,SAAsBlC,EAAO2B,GACzD,MAAMkC,GAAS,QAAqB,SAAU7D,IACxC,SACJ+D,EAAQ,YACRwE,EAAW,IACX6D,EAAG,QACHpI,EAAU,WAAU,aACpBwE,EAAe,UACZzG,IACD,QAAkB/B,GAChBkE,GAAgB,OAAiBH,GACjCsI,EAAoBD,EAAMlI,EAAcqC,MAAM,EAAG6F,GAAOlI,EACxDoI,EAAgB,MAAPF,GAAelI,EAAcE,OAASgI,EAE/C/H,EADmBgI,EAAkBE,UACXjI,KAAI,CAACC,EAAOC,KAC1C,MACMgI,EAAa,CACjBC,UAF8B,IAAVjI,EAEO,EAAIR,EAC/B0I,KAAM1M,EAAM0M,KACZnE,YAAahE,EAAMvE,MAAMuI,aAAeA,EACxC0D,YAAY,GAEd,OAAO,IAAAxH,cAAcF,EAjCzB,SAAiB9E,GACf,MAAME,EAAQC,OAAOC,OAAO,CAAC,EAAGJ,GAChC,IAAK,IAAIK,KAAOH,OACK,IAAfA,EAAMG,WACDH,EAAMG,GAEjB,OAAOH,CACT,CA0BgCgN,CAAQH,GAAY,IAQ5CI,EAAe,CACnBpE,eACAqE,YAAa7I,KACV0H,KACA7H,EAAOiJ,aAEZ,OAAuB,gBAAoB,SAAa,CACtDnL,MACAuD,KAAM,QACNN,MAfkB,CAClBe,QAAS,OACTC,WAAY,SACZ+F,eAAgB,WAChBoB,cAAe,kBAYZhL,EACHkB,UAAWE,EAAG,uBAAwBnD,EAAMiD,YAC3CqJ,EAAS,GAAqB,gBAAoB,UAAc,CACjErJ,UAAW,wBACX2B,MAAOgI,GACN,IAAIN,KAAWjI,EACpB,IACYnC,YAAc,eAOR,SAAY,SAAsBlC,EAAO2B,GACzD,MACMqL,EAAc,CAClB9F,SAAU,WACVvB,QAAS,OACTC,WAAY,SACZ+F,eAAgB,SAChBsB,SAAU,IACVC,OAAQ,OAPKzC,IAQH0C,OAEZ,OAAuB,gBAAoB,SAAa,CACtDxL,SACG3B,EACHiD,UAAWE,EAAG,uBAAwBnD,EAAMiD,WAC5C2B,MAAOoI,GAEX,IACY9K,YAAc,c,iFCjP1B,MAAMkL,EAAS,sBAuIf,MA1HsCtH,IAA+B,IAA9B,QAAEmE,EAAO,MAAEoD,EAAQ,KAAK,EAC7D,MAAMC,GAAkBlE,EAAAA,EAAAA,IACtB,CACEmE,cAAe,iBACfC,cAAe,qBACfC,WAAY,kBAEd,CACEF,cAAe,gBACfC,cAAe,oBACfC,WAAY,mBAIVvH,GAAOC,EAAAA,EAAAA,KAEb,OACEa,EAAAA,EAAAA,IAAC0G,EAAAA,GAAI,CACHC,QAAQ,aACRlF,UAAW6E,EAAgBC,cAC3BK,EAAE,OACFxG,GAAI,EACJyG,GAAI,EACJ,cAAYjH,EAAAA,EAAAA,IACV,4CACAV,IAGD+D,EACE5G,QAAO,CAACyK,EAAGrH,IAAQA,EAAM4G,IACzB/I,KAAI,CAACuB,EAAMY,KACV,MAAM,KAAE/C,EAAI,SAAEqK,EAAQ,MAAEC,GAAUnI,EAE5BoI,EAAyB,KAAbF,EACZG,EAAYD,EAAS,GACpBb,EAAYW,EAAQ,eACvB,wCACEI,EAAYF,EAAeF,EAAQ,iBAAmB,GAC5D,IAAIK,EAAuB,KACf,IAAR3H,EACF2H,EAAQ,WACS,IAAR3H,EACT2H,EAAQ,oBACS,IAAR3H,IACT2H,EAAQ,qBAUV,OACEpH,EAAAA,EAAAA,IAACqH,EAAAA,GAAQ,CAACjH,GAAI,IACZJ,EAAAA,EAAAA,IAACsD,EAAAA,GAAO,CACNxK,IAAK2G,EACLd,QAAQ,OACRgG,eAAe,gBACf/F,WAAW,SACX6C,UAAW6E,EAAgBE,cAC3BpG,GAAI,IACJiB,EAAG,EACHuF,EAAE,OACF5F,OAAQ,CACNC,UAAW,OACXO,aAAc,GACdC,UAAW,kBACXC,WAAY,0BAGd1B,EAAAA,EAAAA,IAACqC,EAAAA,GAAG,CAACU,GAAI,EAAGC,QAAQ,OACjBvD,EAAM,IAETO,EAAAA,EAAAA,IAACgF,EAAM,CACL9L,IAAKgO,EACLxK,KAAMyK,EACNpE,GAAI,EACJuE,EAAG,GACHV,EAAG,GACHjI,QAAS,CAAE4I,KAAM,OAAQC,GAAI,YAE/BxH,EAAAA,EAAAA,IAACwC,EAAAA,GAAI,CAACC,KAAK,UAAUC,UAAU,SAASK,GAAI,IAC1C/C,EAAAA,EAAAA,IAAC2C,EAAAA,GAAW,CACV3G,GAAI6E,EAAAA,EACJxC,KAAM4I,EAAS,GAAMb,EAAYW,EAAa,IAC9C9F,UAAU,OACVP,MAAM,OACNkC,WAAS,IAET5C,EAAAA,EAAAA,IAACyH,EAAAA,GAAc,yBACbhI,EAAM,GAAC,SACAuH,EAAK,WACbtK,EAAM,IACNuK,IACCjH,EAAAA,EAAAA,IAACyH,EAAAA,GAAc,KAAC,0BAIpBzH,EAAAA,EAAAA,IAACqC,EAAAA,GAAG,CAAC1B,SAAS,KAAKD,MAAO4F,EAAgBG,YACvCO,EAAO,KACRhH,EAAAA,EAAAA,IAAC0H,EAAAA,EAAW,CAACrE,GAAG,kDAGnB+D,IAASpH,EAAAA,EAAAA,IAAC2H,EAAAA,EAAK,CAAC5E,GAAI,EAAGpC,SAAS,MAAMjB,KAAM0H,KAC7CpH,EAAAA,EAAAA,IAACqC,EAAAA,GAAG,CACFrG,GAAG,OACH4L,OAAQ,CACN3E,QAAS,MACT4D,GAAI,GACJ9D,GAAI,QAID,IAGZ,C","sources":["webpack://ethereum-org-website/./node_modules/@chakra-ui/image/dist/index.esm.js","webpack://ethereum-org-website/./node_modules/@chakra-ui/breadcrumb/dist/index.esm.js","webpack://ethereum-org-website/./src/components/Breadcrumbs.tsx","webpack://ethereum-org-website/./src/components/CardList.tsx","webpack://ethereum-org-website/./node_modules/@chakra-ui/avatar/dist/index.esm.js","webpack://ethereum-org-website/./src/components/Leaderboard.tsx"],"sourcesContent":["// ../../react-shim.js\nimport React from \"react\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/dist/index.esm.js\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(\"img\", {\n    width: htmlWidth,\n    height: htmlHeight,\n    ref,\n    alt,\n    ...rest\n  });\n});\nNativeImage.displayName = \"NativeImage\";\n\n// src/image.tsx\nvar Image2 = forwardRef2(function Image3(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ React.createElement(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage2.displayName = \"Image\";\n\n// src/img.tsx\nimport { chakra as chakra2, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar Img = forwardRef3((props, ref) => /* @__PURE__ */ React.createElement(chakra2.img, {\n  ref,\n  as: NativeImage,\n  className: \"chakra-image\",\n  ...props\n}));\nexport {\n  Image2 as Image,\n  Img,\n  shouldShowFallbackImage,\n  useImage\n};\n","// ../../react-shim.js\nimport React from \"react\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\n// src/breadcrumb.tsx\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cloneElement } from \"react\";\n\n// src/breadcrumb-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [BreadcrumbStylesProvider, useBreadcrumbStyles] = createContext({\n  name: `BreadcrumbStylesContext`,\n  errorMessage: `useBreadcrumbStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Breadcrumb />\" `\n});\n\n// src/breadcrumb.tsx\nvar Breadcrumb = forwardRef(function Breadcrumb2(props, ref) {\n  const styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  const ownProps = omitThemingProps(props);\n  const {\n    children,\n    spacing = \"0.5rem\",\n    separator = \"/\",\n    className,\n    ...rest\n  } = ownProps;\n  const validChildren = getValidChildren(children);\n  const count = validChildren.length;\n  const clones = validChildren.map((child, index) => cloneElement(child, {\n    separator,\n    spacing,\n    isLastChild: count === index + 1\n  }));\n  const _className = cx(\"chakra-breadcrumb\", className);\n  return /* @__PURE__ */ React.createElement(chakra.nav, {\n    ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container,\n    ...rest\n  }, /* @__PURE__ */ React.createElement(BreadcrumbStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(chakra.ol, {\n    className: \"chakra-breadcrumb__list\"\n  }, clones)));\n});\nBreadcrumb.displayName = \"Breadcrumb\";\n\n// src/breadcrumb-item.tsx\nimport {\n  chakra as chakra4,\n  forwardRef as forwardRef4\n} from \"@chakra-ui/system\";\nimport { getValidChildren as getValidChildren2 } from \"@chakra-ui/react-children-utils\";\n\n// src/breadcrumb-separator.tsx\nimport {\n  chakra as chakra2,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\nvar BreadcrumbSeparator = forwardRef2(function BreadcrumbSeparator2(props, ref) {\n  const { spacing, ...rest } = props;\n  const styles = useBreadcrumbStyles();\n  const separatorStyles = {\n    mx: spacing,\n    ...styles.separator\n  };\n  return /* @__PURE__ */ React.createElement(chakra2.span, {\n    ref,\n    role: \"presentation\",\n    ...rest,\n    __css: separatorStyles\n  });\n});\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n\n// src/breadcrumb-link.tsx\nimport { chakra as chakra3, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar BreadcrumbLink = forwardRef3(function BreadcrumbLink2(props, ref) {\n  const { isCurrentPage, as, className, href, ...rest } = props;\n  const styles = useBreadcrumbStyles();\n  const sharedProps = {\n    ref,\n    as,\n    className: cx(\"chakra-breadcrumb__link\", className),\n    ...rest\n  };\n  if (isCurrentPage) {\n    return /* @__PURE__ */ React.createElement(chakra3.span, {\n      \"aria-current\": \"page\",\n      __css: styles.link,\n      ...sharedProps\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra3.a, {\n    __css: styles.link,\n    href,\n    ...sharedProps\n  });\n});\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\n\n// src/breadcrumb-item.tsx\nimport { cloneElement as cloneElement2 } from \"react\";\nvar BreadcrumbItem = forwardRef4(function BreadcrumbItem2(props, ref) {\n  const {\n    isCurrentPage,\n    separator,\n    isLastChild,\n    spacing,\n    children,\n    className,\n    ...rest\n  } = props;\n  const validChildren = getValidChildren2(children);\n  const clones = validChildren.map((child) => {\n    if (child.type === BreadcrumbLink) {\n      return cloneElement2(child, {\n        isCurrentPage\n      });\n    }\n    if (child.type === BreadcrumbSeparator) {\n      return cloneElement2(child, {\n        spacing,\n        children: child.props.children || separator\n      });\n    }\n    return child;\n  });\n  const styles = useBreadcrumbStyles();\n  const itemStyles = {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    ...styles.item\n  };\n  const _className = cx(\"chakra-breadcrumb__list-item\", className);\n  return /* @__PURE__ */ React.createElement(chakra4.li, {\n    ref,\n    className: _className,\n    ...rest,\n    __css: itemStyles\n  }, clones, !isLastChild && /* @__PURE__ */ React.createElement(BreadcrumbSeparator, {\n    spacing\n  }, separator));\n});\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\nexport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbSeparator,\n  useBreadcrumbStyles\n};\n","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbProps,\n} from \"@chakra-ui/react\"\nimport { useIntl } from \"react-intl\"\n\nimport Link from \"./Link\"\nimport { isLang } from \"../utils/languages\"\nimport { isTranslationKey, translateMessageId } from \"../utils/translations\"\n\nexport interface IProps extends BreadcrumbProps {\n  slug: string\n  startDepth?: number\n}\n\n// Generate crumbs from slug\n// e.g. \"/en/eth2/proof-of-stake/\" will generate:\n// [\n//   { fullPath: \"/en/\", text: \"HOME\" },\n//   { fullPath: \"/en/eth2/\", text: \"ETH2\" },\n//   { fullPath: \"/en/eth2/proof-of-stake/\", text: \"PROOF OF STAKE\" },\n// ]\n// `startDepth` will trim breadcrumbs\n// e.g. startDepth=1 will generate:\n// [\n//   { fullPath: \"/en/eth2/\", text: \"ETH2\" },\n//   { fullPath: \"/en/eth2/proof-of-stake/\", text: \"PROOF OF STAKE\" },\n// ]\nconst Breadcrumbs: React.FC<IProps> = ({\n  slug,\n  startDepth = 0,\n  ...restProps\n}) => {\n  const intl = useIntl()\n\n  const slugChunk = slug.split(\"/\")\n  const sliced = slugChunk.filter((item) => !!item).slice(startDepth)\n\n  const crumbs = sliced.map((path, idx) => {\n    // If homepage (e.g. \"en\"), set text to \"home\" translation\n    const text = isLang(path)\n      ? translateMessageId(\"page-index-meta-title\", intl)\n      : isTranslationKey(path)\n      ? translateMessageId(path, intl)\n      : \"\"\n\n    return {\n      fullPath: slugChunk.slice(0, idx + 2 + startDepth).join(\"/\") + \"/\",\n      text: text.toUpperCase(),\n    }\n  })\n\n  return (\n    <Breadcrumb\n      dir=\"auto\"\n      position=\"relative\"\n      zIndex=\"1\"\n      mb={8}\n      sx={{\n        // TODO: Move this to `listProps` upon upgrading `@chakra-ui/react`\n        // to at least v2.4.2\n        ol: {\n          m: 0,\n          lineHeight: 1,\n        },\n      }}\n      {...restProps}\n    >\n      {crumbs.map((crumb, idx) => {\n        const isCurrentPage = slug === crumb.fullPath\n        return (\n          <BreadcrumbItem\n            key={idx}\n            isCurrentPage={isCurrentPage}\n            color=\"textTableOfContents\"\n            fontSize=\"sm\"\n            letterSpacing=\"wider\"\n            lineHeight=\"140%\"\n            m={0}\n          >\n            <BreadcrumbLink\n              as={Link}\n              to={crumb.fullPath}\n              isPartiallyActive={isCurrentPage}\n              _hover={{ color: \"primary\", textDecor: \"none\" }}\n              _active={{ color: \"primary\" }}\n            >\n              {crumb.text}\n            </BreadcrumbLink>\n          </BreadcrumbItem>\n        )\n      })}\n    </Breadcrumb>\n  )\n}\n\nexport default Breadcrumbs\n","import React, { ReactNode } from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport {\n  Box,\n  Flex,\n  HStack,\n  LinkBox,\n  LinkOverlay,\n  StackProps,\n  useColorModeValue,\n} from \"@chakra-ui/react\"\n\nimport { ImageProp } from \"../types\"\nimport * as url from \"../utils/url\"\nimport Link from \"./Link\"\n\nexport type CardListItem = {\n  title?: ReactNode\n  description?: ReactNode\n  caption?: ReactNode\n  link?: string\n  id?: string\n} & ImageProp\n\nexport interface IProps {\n  content: Array<CardListItem>\n  clickHandler?: (idx: string | number) => void\n}\n\nconst CardContainer = (props: StackProps) => {\n  return (\n    <HStack\n      spacing={4}\n      p={4}\n      color=\"text\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      _hover={{\n        borderRadius: \"base\",\n        boxShadow: \"0 0 1px var(--eth-colors-primary)\",\n        background: \"tableBackgroundHover\",\n      }}\n      {...props}\n    />\n  )\n}\n\nconst Card = (props: CardListItem & Omit<StackProps, \"title\" | \"id\">) => {\n  const { title, description, caption, link, image, alt, ...rest } = props\n\n  const isLink = !!link\n  const isExternal = url.isExternal(link || \"\")\n\n  const descriptionColor = useColorModeValue(\"gray.500\", \"gray.400\")\n\n  return (\n    <CardContainer {...rest}>\n      {image && <Box as={GatsbyImage} image={image} alt={alt} minW=\"20px\" />}\n      <Flex flex=\"1 1 75%\" direction=\"column\">\n        {isLink ? (\n          <LinkOverlay\n            as={Link}\n            href={link}\n            hideArrow\n            color=\"text\"\n            textDecoration=\"none\"\n            _hover={{ textDecoration: \"none\" }}\n          >\n            {title}\n          </LinkOverlay>\n        ) : (\n          <Box>{title}</Box>\n        )}\n\n        <Box fontSize=\"sm\" mb={0} color={descriptionColor}>\n          {description}\n        </Box>\n      </Flex>\n      {caption && (\n        <Flex flex=\"1 0 25%\" align=\"center\" wrap=\"wrap\" mr={4}>\n          <Box fontSize=\"sm\" mb={0} opacity={0.6}>\n            {caption}\n          </Box>\n        </Flex>\n      )}\n      {isExternal && <Box>↗</Box>}\n    </CardContainer>\n  )\n}\n\nconst CardList: React.FC<IProps> = ({ content, clickHandler = () => null }) => (\n  <Box bg=\"background\" width=\"full\">\n    {content.map((listItem, idx) => {\n      const { link, id } = listItem\n      const isLink = !!link\n\n      return isLink ? (\n        <LinkBox key={id || idx}>\n          <Card {...listItem} />\n        </LinkBox>\n      ) : (\n        <Card\n          key={idx}\n          onClick={() => clickHandler(idx)}\n          mb={4}\n          {...listItem}\n        />\n      )\n    })}\n  </Box>\n)\n\nexport default CardList\n","// ../../react-shim.js\nimport React from \"react\";\n\n// src/avatar.tsx\nimport {\n  chakra as chakra4,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\n// src/avatar-context.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [AvatarStylesProvider, useAvatarStyles] = createContext({\n  name: `AvatarStylesContext`,\n  hookName: `useAvatarStyles`,\n  providerName: \"<Avatar/>\"\n});\n\n// src/avatar-image.tsx\nimport { useImage } from \"@chakra-ui/image\";\nimport { chakra as chakra3 } from \"@chakra-ui/system\";\nimport { cloneElement } from \"react\";\n\n// src/avatar-name.tsx\nimport { chakra } from \"@chakra-ui/system\";\nfunction initials(name) {\n  const [firstName, lastName] = name.split(\" \");\n  return firstName && lastName ? `${firstName.charAt(0)}${lastName.charAt(0)}` : firstName.charAt(0);\n}\nfunction AvatarName(props) {\n  const { name, getInitials, ...rest } = props;\n  const styles = useAvatarStyles();\n  return /* @__PURE__ */ React.createElement(chakra.div, {\n    role: \"img\",\n    \"aria-label\": name,\n    ...rest,\n    __css: styles.label\n  }, name ? getInitials == null ? void 0 : getInitials(name) : null);\n}\nAvatarName.displayName = \"AvatarName\";\n\n// src/generic-avatar-icon.tsx\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\nvar GenericAvatarIcon = (props) => /* @__PURE__ */ React.createElement(chakra2.svg, {\n  viewBox: \"0 0 128 128\",\n  color: \"#fff\",\n  width: \"100%\",\n  height: \"100%\",\n  className: \"chakra-avatar__svg\",\n  ...props\n}, /* @__PURE__ */ React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n}), /* @__PURE__ */ React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n}));\n\n// src/avatar-image.tsx\nfunction AvatarImage(props) {\n  const {\n    src,\n    srcSet,\n    onError,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = /* @__PURE__ */ React.createElement(GenericAvatarIcon, null),\n    ignoreFallback,\n    referrerPolicy\n  } = props;\n  const status = useImage({ src, onError, ignoreFallback });\n  const hasLoaded = status === \"loaded\";\n  const showFallback = !src || !hasLoaded;\n  if (showFallback) {\n    return name ? /* @__PURE__ */ React.createElement(AvatarName, {\n      className: \"chakra-avatar__initials\",\n      getInitials,\n      name\n    }) : cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra3.img, {\n    src,\n    srcSet,\n    alt: name,\n    referrerPolicy,\n    className: \"chakra-avatar__img\",\n    loading,\n    __css: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      borderRadius\n    }\n  });\n}\nAvatarImage.displayName = \"AvatarImage\";\n\n// src/avatar.tsx\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\nvar Avatar = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    getInitials = initials,\n    icon = /* @__PURE__ */ React.createElement(GenericAvatarIcon, null),\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    ...rest\n  } = omitThemingProps(props);\n  const avatarStyles = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0,\n    ...baseStyle,\n    ...styles.container\n  };\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n  return /* @__PURE__ */ React.createElement(chakra4.span, {\n    ref,\n    ...rest,\n    className: cx(\"chakra-avatar\", props.className),\n    __css: avatarStyles\n  }, /* @__PURE__ */ React.createElement(AvatarStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(AvatarImage, {\n    src,\n    srcSet,\n    loading,\n    onError,\n    getInitials,\n    name,\n    borderRadius,\n    icon,\n    iconLabel,\n    ignoreFallback\n  }), children));\n});\nAvatar.displayName = \"Avatar\";\n\n// src/avatar-group.tsx\nimport {\n  chakra as chakra5,\n  forwardRef as forwardRef2,\n  omitThemingProps as omitThemingProps2,\n  useMultiStyleConfig as useMultiStyleConfig2\n} from \"@chakra-ui/system\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\n\n// ../../utilities/object-utils/dist/index.esm.js\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/avatar-group.tsx\nimport { cloneElement as cloneElement2 } from \"react\";\nvar AvatarGroup = forwardRef2(function AvatarGroup2(props, ref) {\n  const styles = useMultiStyleConfig2(\"Avatar\", props);\n  const {\n    children,\n    borderColor,\n    max,\n    spacing = \"-0.75rem\",\n    borderRadius = \"full\",\n    ...rest\n  } = omitThemingProps2(props);\n  const validChildren = getValidChildren(children);\n  const childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\n  const excess = max != null && validChildren.length - max;\n  const reversedChildren = childrenWithinMax.reverse();\n  const clones = reversedChildren.map((child, index) => {\n    const isFirstAvatar = index === 0;\n    const childProps = {\n      marginEnd: isFirstAvatar ? 0 : spacing,\n      size: props.size,\n      borderColor: child.props.borderColor ?? borderColor,\n      showBorder: true\n    };\n    return cloneElement2(child, compact(childProps));\n  });\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\"\n  };\n  const excessStyles = {\n    borderRadius,\n    marginStart: spacing,\n    ...baseStyle,\n    ...styles.excessLabel\n  };\n  return /* @__PURE__ */ React.createElement(chakra5.div, {\n    ref,\n    role: \"group\",\n    __css: groupStyles,\n    ...rest,\n    className: cx(\"chakra-avatar__group\", props.className)\n  }, excess > 0 && /* @__PURE__ */ React.createElement(chakra5.span, {\n    className: \"chakra-avatar__excess\",\n    __css: excessStyles\n  }, `+${excess}`), clones);\n});\nAvatarGroup.displayName = \"AvatarGroup\";\n\n// src/avatar-badge.tsx\nimport {\n  chakra as chakra6,\n  forwardRef as forwardRef3\n} from \"@chakra-ui/system\";\nvar AvatarBadge = forwardRef3(function AvatarBadge2(props, ref) {\n  const styles = useAvatarStyles();\n  const badgeStyles = {\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    insetEnd: \"0\",\n    bottom: \"0\",\n    ...styles.badge\n  };\n  return /* @__PURE__ */ React.createElement(chakra6.div, {\n    ref,\n    ...props,\n    className: cx(\"chakra-avatar__badge\", props.className),\n    __css: badgeStyles\n  });\n});\nAvatarBadge.displayName = \"AvatarBadge\";\nexport {\n  Avatar,\n  AvatarBadge,\n  AvatarGroup,\n  GenericAvatarIcon,\n  useAvatarStyles\n};\n","import React from \"react\"\nimport {\n  Box,\n  Avatar,\n  Flex,\n  LinkOverlay,\n  LinkBox,\n  useColorModeValue,\n  VisuallyHidden,\n  List,\n  ListItem,\n} from \"@chakra-ui/react\"\nimport { useIntl } from \"react-intl\"\n\nimport Emoji from \"./Emoji\"\nimport Link from \"./Link\"\nimport Translation from \"./Translation\"\nimport { translateMessageId } from \"../utils/translations\"\n\nconst githubUrl = `https://github.com/`\n\nexport interface Person {\n  name: string\n  username?: string | null\n  score: number\n}\n\nexport interface IProps {\n  content: Array<Person>\n  limit?: number\n}\n\nconst Leaderboard: React.FC<IProps> = ({ content, limit = 100 }) => {\n  const colorModeStyles = useColorModeValue(\n    {\n      listBoxShadow: \"tableBox.light\",\n      linkBoxShadow: \"tableItemBox.light\",\n      scoreColor: \"blackAlpha.700\",\n    },\n    {\n      listBoxShadow: \"tableBox.dark\",\n      linkBoxShadow: \"tableItemBox.dark\",\n      scoreColor: \"whiteAlpha.600\",\n    }\n  )\n\n  const intl = useIntl()\n\n  return (\n    <List\n      bgColor=\"background\"\n      boxShadow={colorModeStyles.listBoxShadow}\n      w=\"100%\"\n      mb={8}\n      ml={0}\n      aria-label={translateMessageId(\n        \"page-upgrades-bug-bounty-leaderboard-list\",\n        intl\n      )}\n    >\n      {content\n        .filter((_, idx) => idx < limit)\n        .map((item, idx) => {\n          const { name, username, score } = item\n\n          const hasGitHub = username !== \"\"\n          const avatarImg = hasGitHub\n            ? `${githubUrl}${username}.png?size=40`\n            : \"https://github.com/random.png?size=40\"\n          const avatarAlt = hasGitHub ? `${username} GitHub avatar` : \"\"\n          let emoji: string | null = null\n          if (idx === 0) {\n            emoji = \":trophy:\"\n          } else if (idx === 1) {\n            emoji = \":2nd_place_medal:\"\n          } else if (idx === 2) {\n            emoji = \":3rd_place_medal:\"\n          }\n\n          const PLACE_WORDS = [\n            \"first\",\n            \"second\",\n            \"third\",\n            \"fourth\",\n            \"fifth\",\n          ] as const\n          return (\n            <ListItem mb={0}>\n              <LinkBox\n                key={idx}\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                boxShadow={colorModeStyles.linkBoxShadow}\n                mb={0.25}\n                p={4}\n                w=\"100%\"\n                _hover={{\n                  textDecor: \"none\",\n                  borderRadius: 0.5,\n                  boxShadow: \"0 0 1px primary\",\n                  background: \"tableBackgroundHover\",\n                }}\n              >\n                <Box mr={4} opacity=\"0.4\">\n                  {idx + 1}\n                </Box>\n                <Avatar\n                  src={avatarImg}\n                  name={avatarAlt}\n                  mr={4}\n                  h={10}\n                  w={10}\n                  display={{ base: \"none\", xs: \"block\" }}\n                />\n                <Flex flex=\"1 1 75%\" direction=\"column\" mr={8}>\n                  <LinkOverlay\n                    as={Link}\n                    href={hasGitHub ? `${githubUrl}${username}` : \"#\"}\n                    textDecor=\"none\"\n                    color=\"text\"\n                    hideArrow\n                  >\n                    <VisuallyHidden>{`In place number ${\n                      idx + 1\n                    } with ${score} points`}</VisuallyHidden>\n                    {name}{\" \"}\n                    {hasGitHub && (\n                      <VisuallyHidden>(See Github Profile)</VisuallyHidden>\n                    )}\n                  </LinkOverlay>\n\n                  <Box fontSize=\"sm\" color={colorModeStyles.scoreColor}>\n                    {score}{\" \"}\n                    <Translation id=\"page-upgrades-bug-bounty-leaderboard-points\" />\n                  </Box>\n                </Flex>\n                {emoji && <Emoji mr={8} fontSize=\"2xl\" text={emoji} />}\n                <Box\n                  as=\"span\"\n                  _after={{\n                    content: '\"↗\"',\n                    ml: 0.5,\n                    mr: 1.5,\n                  }}\n                ></Box>\n              </LinkBox>\n            </ListItem>\n          )\n        })}\n    </List>\n  )\n}\n\nexport default Leaderboard\n"],"names":["omit","object","keysToOmit","clone","Object","assign","key","useImage","props","loading","src","srcSet","onLoad","onError","crossOrigin","sizes","ignoreFallback","status","setStatus","useState","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","NativeImage","ref","htmlWidth","htmlHeight","alt","rest","width","height","displayName","Image2","fallbackSrc","fallback","align","fit","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","as","className","Img","cx","classNames","filter","Boolean","join","BreadcrumbStylesProvider","useBreadcrumbStyles","name","errorMessage","Breadcrumb","styles","ownProps","children","spacing","separator","validChildren","count","length","clones","map","child","index","cloneElement","isLastChild","_className","__css","container","value","BreadcrumbSeparator","separatorStyles","mx","role","BreadcrumbLink","isCurrentPage","href","sharedProps","link","BreadcrumbItem","type","itemStyles","display","alignItems","item","_ref","slug","startDepth","restProps","intl","useIntl","slugChunk","split","crumbs","slice","path","idx","text","isLang","translateMessageId","isTranslationKey","fullPath","toUpperCase","___EmotionJSX","dir","position","zIndex","mb","sx","ol","m","lineHeight","crumb","color","fontSize","letterSpacing","Link","to","isPartiallyActive","_hover","textDecor","_active","CardContainer","HStack","p","border","borderColor","borderRadius","boxShadow","background","Card","title","description","caption","image","isLink","isExternal","url","descriptionColor","useColorModeValue","Box","GatsbyImage","minW","Flex","flex","direction","LinkOverlay","hideArrow","textDecoration","wrap","mr","opacity","content","clickHandler","bg","listItem","id","LinkBox","onClick","AvatarStylesProvider","useAvatarStyles","hookName","providerName","initials","firstName","lastName","charAt","AvatarName","getInitials","label","GenericAvatarIcon","viewBox","fill","d","AvatarImage","iconLabel","icon","baseStyle","justifyContent","textAlign","textTransform","fontWeight","flexShrink","Avatar","showBorder","avatarStyles","borderWidth","max","childrenWithinMax","excess","reverse","childProps","marginEnd","size","compact","excessStyles","marginStart","excessLabel","flexDirection","badgeStyles","insetEnd","bottom","badge","githubUrl","limit","colorModeStyles","listBoxShadow","linkBoxShadow","scoreColor","List","bgColor","w","ml","_","username","score","hasGitHub","avatarImg","avatarAlt","emoji","ListItem","h","base","xs","VisuallyHidden","Translation","Emoji","_after"],"sourceRoot":""}