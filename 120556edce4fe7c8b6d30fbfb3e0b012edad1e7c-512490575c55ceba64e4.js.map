{"version":3,"file":"120556edce4fe7c8b6d30fbfb3e0b012edad1e7c-512490575c55ceba64e4.js","mappings":"oNAQA,MAAMA,GAAgB,OAAOC,EAAAA,EAAAA,IAAU,qBAAjB,CAAkB,0JAWlCC,GAAc,sOAedC,GAAW,yIAOAC,GAAUA,EAAMC,MAAMC,OAAOC,YAAU,qKAUlDC,GAAY,uHAOZC,GAAU,yGAMVC,GAAiB,OAAOC,EAAAA,EAAI,qBAAX,CAAY,yCAQ7BC,EAAmCC,IAAAA,IAAC,SAAEC,GAAU,SACpDC,EAAAA,EAAAA,IAACf,EAAa,CACZgB,SAAS,EACTC,QAAS,CAAEC,QAASJ,EAAW,EAAI,EAAGK,OAAQL,EAAW,MAAQ,GACjEM,WAAY,CAAEC,SAAU,KACxB,EAiDJ,IAvCgCC,IAKzB,IAL0B,SAC/BC,EAAQ,UACRC,EAAS,OACTC,EAAM,UACNC,GACD,EACC,MAAMC,GAAMC,EAAAA,EAAAA,QAAyB,MAcrC,MAZqBH,KACG,oBAAXI,SACTC,SAASC,gBAAgBC,MAAMC,SAAWR,EAAS,SAAW,QAChE,EAGFS,CAAYT,IAGZU,EAAAA,EAAAA,GAAkBR,GAAK,IAAMD,GAAU,MACvCU,EAAAA,EAAAA,GAAY,UAAU,IAAMV,GAAU,MAGpCX,EAAAA,EAAAA,IAAAA,MAAAA,CAAKS,UAAWA,IACdT,EAAAA,EAAAA,IAACH,EAAO,CAACE,SAAUW,IAClBA,IACCV,EAAAA,EAAAA,IAACb,EAAc,CAACsB,UAAU,8BACxBT,EAAAA,EAAAA,IAACZ,EAAW,CAACqB,UAAU,kBAAkBG,IAAKA,IAC5CZ,EAAAA,EAAAA,IAACP,EAAY,CAACgB,UAAU,2BACrBD,IAEHR,EAAAA,EAAAA,IAACN,EAAU,CAAC4B,QAAS,IAAMX,GAAU,KACnCX,EAAAA,EAAAA,IAACL,EAAc,CAAC4B,KAAK,aAKzB,C","sources":["webpack://ethereum-org-website/./src/components/Modal.tsx"],"sourcesContent":["import React, { useRef } from \"react\"\nimport styled from \"@emotion/styled\"\nimport { motion } from \"framer-motion\"\n\nimport Icon from \"./Icon\"\nimport { useOnClickOutside } from \"../hooks/useOnClickOutside\"\nimport { useKeyPress } from \"../hooks/useKeyPress\"\n\nconst StyledOverlay = styled(motion.div)`\n  position: fixed;\n  background: rgba(0, 0, 0, 0.7);\n  will-change: opacity;\n  top: 0;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 100%;\n`\n\nconst ModalContainer = styled.div`\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  position: fixed;\n  z-index: 1002;\n  cursor: pointer;\n  padding: 15% 1rem 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n`\n\nconst StyledModal = styled.div`\n  position: relative;\n  padding: 1rem;\n  height: auto;\n  cursor: auto;\n  max-height: 100%;\n  max-width: 600px;\n  background: ${(props) => props.theme.colors.background};\n  display: flex;\n  justify-content: space-between;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 2px 4px 0px;\n  width: 100%;\n  border-radius: 8px;\n  border: 1px solid #bdbdbd;\n  margin: 0px auto;\n`\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem;\n  width: 100%;\n`\n\nconst ModalClose = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  margin: 1rem;\n`\nconst ModalCloseIcon = styled(Icon)`\n  cursor: pointer;\n`\n\nexport interface IPropsOverlay {\n  isActive: boolean\n}\n\nconst Overlay: React.FC<IPropsOverlay> = ({ isActive }) => (\n  <StyledOverlay\n    initial={false}\n    animate={{ opacity: isActive ? 1 : 0, zIndex: isActive ? 1001 : -1 }}\n    transition={{ duration: 0.2 }}\n  />\n)\n\nexport interface IProps {\n  children?: React.ReactNode\n  className?: string\n  isOpen: boolean\n  setIsOpen: (isOpen: boolean) => void\n}\n\nconst Modal: React.FC<IProps> = ({\n  children,\n  className,\n  isOpen,\n  setIsOpen,\n}) => {\n  const ref = useRef<HTMLInputElement>(null)\n\n  const fixOverflow = (isOpen: boolean): void => {\n    if (typeof window !== \"undefined\") {\n      document.documentElement.style.overflow = isOpen ? \"hidden\" : \"unset\"\n    }\n  }\n\n  fixOverflow(isOpen)\n\n  // Close modal on outside clicks & `Escape` keypress\n  useOnClickOutside(ref, () => setIsOpen(false))\n  useKeyPress(`Escape`, () => setIsOpen(false))\n\n  return (\n    <div className={className}>\n      <Overlay isActive={isOpen} />\n      {isOpen && (\n        <ModalContainer className=\"modal-component-container\">\n          <StyledModal className=\"modal-component\" ref={ref}>\n            <ModalContent className=\"modal-component-content\">\n              {children}\n            </ModalContent>\n            <ModalClose onClick={() => setIsOpen(false)}>\n              <ModalCloseIcon name=\"close\" />\n            </ModalClose>\n          </StyledModal>\n        </ModalContainer>\n      )}\n    </div>\n  )\n}\n\nexport default Modal\n"],"names":["StyledOverlay","motion","ModalContainer","StyledModal","props","theme","colors","background","ModalContent","ModalClose","ModalCloseIcon","Icon","Overlay","_ref","isActive","___EmotionJSX","initial","animate","opacity","zIndex","transition","duration","_ref2","children","className","isOpen","setIsOpen","ref","useRef","window","document","documentElement","style","overflow","fixOverflow","useOnClickOutside","useKeyPress","onClick","name"],"sourceRoot":""}