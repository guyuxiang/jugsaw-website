{"version":3,"file":"component---src-pages-languages-tsx-bc3c2db98604fbe23268.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/pages/languages.tsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport styled from \"@emotion/styled\"\nimport { useLocation } from \"@reach/router\"\nimport { useIntl } from \"react-intl\"\n\nimport PageMetadata from \"../components/PageMetadata\"\nimport Translation from \"../components/Translation\"\nimport Link from \"../components/Link\"\nimport { Page, Content } from \"../components/SharedStyledComponents\"\n\nimport { Language, languageMetadata } from \"../utils/languages\"\nimport { translateMessageId, TranslationKey } from \"../utils/translations\"\nimport { CardItem as LangItem } from \"../components/SharedStyledComponents\"\nimport Icon from \"../components/Icon\"\nimport NakedButton from \"../components/NakedButton\"\n\nconst StyledPage = styled(Page)`\n  margin-top: 4rem;\n`\n\nconst ContentContainer = styled.div``\n\nconst LangContainer = styled.div`\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n`\n\nconst LangTitle = styled.div`\n  font-size: 0.875rem;\n  line-height: 1.6;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  margin: 1.14em 0;\n  text-transform: uppercase;\n`\n\nconst Form = styled.form`\n  margin: 0;\n  position: relative;\n  border-radius: 0.25em;\n  width: clamp(min(400px, 100%), 50%, 600px);\n`\n\nconst StyledInput = styled.input`\n  border: 1px solid ${(props) => props.theme.colors.searchBorder};\n  color: ${(props) => props.theme.colors.text};\n  background: ${(props) => props.theme.colors.searchBackground};\n  padding: 0.5rem;\n  padding-right: 2rem;\n  border-radius: 0.25em;\n  width: 100%;\n\n  &:focus {\n    outline: ${(props) => props.theme.colors.primary} auto 1px;\n  }\n`\n\nconst IconButton = styled(NakedButton)`\n  position: absolute;\n  top: 50%;\n  margin-top: -12px;\n  right: 6px;\n`\n\nconst ResetIcon = styled(Icon)`\n  fill: ${(props) => props.theme.colors.text};\n`\n\nconst LanguagesPage = () => {\n  const intl = useIntl()\n  const location = useLocation()\n  const redirectTo =\n    location.search.split(\"from=\").length > 1\n      ? location.search.split(\"from=\")[1]\n      : \"/\"\n  const [keyword, setKeyword] = useState<string>(\"\")\n  const resetKeyword = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    setKeyword(\"\")\n  }\n  const searchString = translateMessageId(\n    \"page-languages-filter-placeholder\",\n    intl\n  )\n  let translationsCompleted: Array<Language> = []\n  for (const lang in languageMetadata) {\n    const langMetadata = {\n      ...languageMetadata[lang],\n      name: translateMessageId(`language-${lang}` as TranslationKey, intl),\n    }\n\n    const nativeLangTitle = langMetadata.localName\n    const englishLangTitle = langMetadata.name\n    if (\n      englishLangTitle.toLowerCase().includes(keyword.toLowerCase()) ||\n      nativeLangTitle.toLowerCase().includes(keyword.toLowerCase())\n    ) {\n      translationsCompleted.push(langMetadata)\n    }\n  }\n  translationsCompleted.sort((a, b) => a[\"name\"].localeCompare(b[\"name\"]))\n\n  return (\n    <StyledPage>\n      <PageMetadata\n        title={translateMessageId(\"page-languages-meta-title\", intl)}\n        description={translateMessageId(\"page-languages-meta-desc\", intl)}\n      />\n      <Content>\n        <ContentContainer>\n          <h1>\n            <Translation id=\"page-languages-h1\" />\n          </h1>\n          <p>\n            <Translation id=\"page-languages-p1\" />\n          </p>\n          <p>\n            <Translation id=\"page-languages-interested\" />{\" \"}\n            <Link to=\"/contributing/translation-program/\">\n              <Translation id=\"page-languages-learn-more\" />\n            </Link>\n            .\n          </p>\n          <p>\n            <Translation id=\"page-languages-resources-paragraph\" />{\" \"}\n            <Link to=\"/community/language-resources\">\n              <Translation id=\"page-languages-resources-link\" />\n            </Link>\n            .\n          </p>\n          <h2>\n            <Translation id=\"page-languages-translations-available\" />:\n          </h2>\n          <Form>\n            <StyledInput\n              value={keyword}\n              placeholder={searchString}\n              onChange={(e) => setKeyword(e.target.value)}\n            />\n            {keyword === \"\" ? null : (\n              <IconButton onClick={resetKeyword}>\n                <ResetIcon name=\"close\" />\n              </IconButton>\n            )}\n          </Form>\n          <LangContainer>\n            {translationsCompleted.map((lang) => (\n              <LangItem to={redirectTo} language={lang.code} key={lang[\"name\"]}>\n                <LangTitle>{lang[\"name\"]}</LangTitle>\n                <h4>{lang.localName}</h4>\n              </LangItem>\n            ))}\n          </LangContainer>\n          <h2>\n            <Translation id=\"page-languages-want-more-header\" />\n          </h2>\n          <p>\n            <Translation id=\"page-languages-want-more-paragraph\" />{\" \"}\n            <Link to=\"/contributing/translation-program/\">\n              <Translation id=\"page-languages-want-more-link\" />\n            </Link>\n            .\n          </p>\n        </ContentContainer>\n      </Content>\n    </StyledPage>\n  )\n}\n\nexport default LanguagesPage\n"],"names":["StyledPage","Page","target","name","styles","ContentContainer","LangContainer","LangTitle","Form","StyledInput","props","theme","colors","searchBorder","text","searchBackground","primary","IconButton","NakedButton","ResetIcon","Icon","intl","useIntl","location","useLocation","redirectTo","search","split","length","keyword","setKeyword","useState","searchString","translateMessageId","translationsCompleted","lang","languageMetadata","langMetadata","nativeLangTitle","localName","toLowerCase","includes","push","sort","a","b","localeCompare","___EmotionJSX","PageMetadata","title","description","Content","Translation","id","Link","to","value","placeholder","onChange","e","onClick","preventDefault","map","LangItem","language","code","key"],"sourceRoot":""}