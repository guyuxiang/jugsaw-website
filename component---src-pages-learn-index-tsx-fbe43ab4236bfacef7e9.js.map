{"version":3,"file":"component---src-pages-learn-index-tsx-fbe43ab4236bfacef7e9.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/Button/index.tsx","webpack://ethereum-org-website/./src/components/DocLink.tsx","webpack://ethereum-org-website/./src/components/FeedbackCard.tsx","webpack://ethereum-org-website/./src/components/PageHero.tsx","webpack://ethereum-org-website/./src/components/Staking/StakingHomeTableOfContents.tsx","webpack://ethereum-org-website/./src/utils/image.ts"],"sourcesContent":["import React from \"react\"\nimport { Button as ChakraButton, ButtonProps } from \"@chakra-ui/react\"\n\nimport { scrollIntoView } from \"../../utils/scrollIntoView\"\n\nexport interface IProps extends ButtonProps {\n  toId?: string\n}\n\nconst Button: React.FC<IProps> = ({ toId, children, ...props }) => {\n  const handleOnClick = () => {\n    if (!toId) {\n      return\n    }\n\n    scrollIntoView(toId)\n  }\n\n  return (\n    <ChakraButton onClick={handleOnClick} {...props}>\n      {children}\n    </ChakraButton>\n  )\n}\n\nexport default Button\n","import React from \"react\"\nimport {\n  Icon,\n  Box,\n  Text,\n  Flex,\n  LinkBox,\n  LinkOverlay,\n  useToken,\n} from \"@chakra-ui/react\"\nimport { AiOutlineArrowRight } from \"react-icons/ai\"\nimport Emoji from \"./Emoji\"\nimport Link from \"./Link\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  to: string\n  isExternal?: boolean\n}\n\nconst DocLink: React.FC<IProps> = ({ to, children, isExternal = false }) => {\n  const linkBoxShadowColor = useToken(\"colors\", \"primary\")\n\n  return (\n    <LinkBox\n      padding={4}\n      borderRadius=\"sm\"\n      color=\"text\"\n      border=\"1px\"\n      borderStyle=\"solid\"\n      borderColor=\"border\"\n      _hover={{\n        background: \"tableBackgroundHover\",\n        borderRadius: \"base\",\n        boxShadow: `0 0 1px ${linkBoxShadowColor}`,\n      }}\n    >\n      <Flex\n        zIndex={1}\n        display=\"flex\"\n        flexDirection=\"row\"\n        flex={1}\n        justifyContent=\"space-between\"\n      >\n        <Flex align=\"center\">\n          <Emoji fontSize=\"md\" mr={4} text=\":page_with_curl:\" />\n        </Flex>\n        <Box flex={1} flexDirection=\"column\">\n          <LinkOverlay\n            href={to}\n            as={Link}\n            isExternal={isExternal}\n            textDecoration=\"none\"\n            _hover={{ textDecoration: \"none\" }}\n            hideArrow\n          >\n            <Text color=\"text300\" fontWeight=\"semibold\" margin={0}>\n              {children}\n            </Text>\n          </LinkOverlay>\n        </Box>\n        <Icon\n          as={AiOutlineArrowRight}\n          alignSelf=\"center\"\n          minWidth={8}\n          boxSize={6}\n          marginX={6}\n          _groupHover={{\n            fill: \"primary\",\n            transition: \"transform 0.1s\",\n            transform: \"scale(1.2)\",\n            rotate: isExternal ? \"-45deg\" : \"0\",\n          }}\n        />\n      </Flex>\n    </LinkBox>\n  )\n}\n\nexport default DocLink\n","// Library imports\nimport React, { ReactNode, useState } from \"react\"\nimport { Flex, FlexProps, Heading } from \"@chakra-ui/react\"\n// Component imports\nimport Button from \"./Button\"\nimport Translation from \"./Translation\"\n// SVG imports\nimport { FeedbackThumbsUpIcon } from \"./icons\"\n// Utility imports\nimport { trackCustomEvent } from \"../utils/matomo\"\n// Hook imports\nimport { useSurvey } from \"../hooks/useSurvey\"\n\nexport interface IProps extends FlexProps {\n  prompt?: string\n  isArticle?: boolean\n}\n\nconst FeedbackCard: React.FC<IProps> = ({\n  prompt,\n  isArticle = false,\n  ...props\n}) => {\n  const [feedbackSubmitted, setFeedbackSubmitted] = useState(false)\n  const surveyUrl = useSurvey(feedbackSubmitted)\n\n  const location = typeof window !== \"undefined\" ? window.location.href : \"\"\n  const isTutorial = location.includes(\"tutorials\")\n\n  const getTitle = (feedbackSubmitted: boolean): ReactNode => {\n    if (!feedbackSubmitted) {\n      if (prompt) return prompt\n      if (isTutorial) return <Translation id=\"feedback-card-prompt-tutorial\" />\n      if (isArticle) return <Translation id=\"feedback-card-prompt-article\" />\n      return <Translation id=\"feedback-card-prompt-page\" />\n    }\n    return <Translation id=\"feedback-widget-thank-you-title\" />\n  }\n\n  const handleSubmit = (choice: boolean): void => {\n    trackCustomEvent({\n      eventCategory: `Page is helpful feedback`,\n      eventAction: `Clicked`,\n      eventName: String(choice),\n    })\n    setFeedbackSubmitted(true)\n  }\n  const handleSurveyOpen = (): void => {\n    trackCustomEvent({\n      eventCategory: `Feedback survey opened`,\n      eventAction: `Clicked`,\n      eventName: \"Feedback survey opened\",\n    })\n    window && surveyUrl && window.open(surveyUrl, \"_blank\")\n  }\n  return (\n    <Flex\n      border=\"1px\"\n      borderColor=\"border\"\n      bg=\"feedbackGradient\"\n      borderRadius=\"base\"\n      p={6}\n      direction=\"column\"\n      mb={4}\n      mt={8}\n      w=\"full\"\n      {...props}\n    >\n      <Flex direction=\"column\" gap={4}>\n        <Heading as=\"h3\" m={0} mb={2} fontSize=\"1.375rem\" fontWeight=\"bold\">\n          {getTitle(feedbackSubmitted)}\n        </Heading>\n        {feedbackSubmitted && (\n          <p>\n            <Translation id=\"feedback-widget-thank-you-subtitle\" />{\" \"}\n            <Translation id=\"feedback-widget-thank-you-subtitle-ext\" />\n          </p>\n        )}\n        <Flex gap={4}>\n          {!feedbackSubmitted ? (\n            <>\n              <Button\n                variant=\"outline-color\"\n                leftIcon={<FeedbackThumbsUpIcon />}\n                onClick={() => handleSubmit(true)}\n              >\n                <Translation id=\"yes\" />\n              </Button>\n              <Button\n                variant=\"outline-color\"\n                leftIcon={<FeedbackThumbsUpIcon transform=\"scaleY(-1)\" />}\n                onClick={() => handleSubmit(false)}\n              >\n                <Translation id=\"no\" />\n              </Button>\n            </>\n          ) : (\n            <Button variant=\"outline-color\" onClick={handleSurveyOpen}>\n              <Translation id=\"feedback-widget-thank-you-cta\" />\n            </Button>\n          )}\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default FeedbackCard\n","import React, { ReactNode } from \"react\"\nimport { Box, Flex, Heading, Wrap, WrapItem } from \"@chakra-ui/react\"\n\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\n\nimport ButtonLink, { IProps as IButtonLinkProps } from \"./ButtonLink\"\nimport Button, { IProps as IButtonProps } from \"./Button\"\n\nexport interface IButtonLink extends IButtonLinkProps {\n  content: ReactNode\n}\n\nexport interface IButton extends IButtonProps {\n  content: ReactNode\n}\n\nexport interface IContent {\n  buttons?: Array<IButtonLink | IButton>\n  title: ReactNode\n  header: ReactNode\n  subtitle: ReactNode\n  image: IGatsbyImageData\n  alt: string\n}\n\nexport interface IProps {\n  content: IContent\n  isReverse?: boolean\n  children?: ReactNode\n  className?: string\n}\n\nfunction isButtonLink(button: IButton | IButtonLink): button is IButtonLink {\n  return (button as IButtonLink).to !== undefined\n}\n\nconst PageHero: React.FC<IProps> = ({\n  content,\n  isReverse = false,\n  children,\n  className,\n}) => {\n  const { buttons, title, header, subtitle, image, alt } = content\n  return (\n    <Box py={4} px={8} width=\"full\">\n      <Flex\n        justifyContent=\"space-between\"\n        mt={8}\n        px={{ base: 0, lg: 16 }}\n        direction={{ base: isReverse ? \"column\" : \"column-reverse\", lg: \"row\" }}\n        className={className}\n      >\n        <Box\n          maxW={{ base: \"full\", lg: \"container.sm\" }}\n          py={{ base: 16, lg: 32 }}\n          pl={{ base: 0, lg: 8 }}\n          mr={4}\n        >\n          <Heading\n            as=\"h1\"\n            textTransform=\"uppercase\"\n            fontSize=\"md\"\n            fontWeight=\"normal\"\n            mb={4}\n            color=\"text300\"\n            lineHeight={1.4}\n          >\n            {title}\n          </Heading>\n          <Heading\n            as=\"h2\"\n            fontWeight=\"bold\"\n            fontSize={{ base: \"2.5rem\", lg: \"5xl\" }}\n            maxW=\"full\"\n            mb={0}\n            color=\"text00\"\n            lineHeight={1.4}\n          >\n            {header}\n          </Heading>\n          <Box\n            fontSize={{ base: \"xl\", lg: \"2xl\" }}\n            lineHeight={1.4}\n            color=\"text200\"\n            mt={4}\n            mb={8}\n          >\n            {subtitle}\n          </Box>\n          {buttons && (\n            <Wrap spacing={2}>\n              {buttons.map((button, idx) => {\n                if (isButtonLink(button)) {\n                  return (\n                    <WrapItem>\n                      <ButtonLink\n                        key={idx}\n                        variant={button.variant}\n                        to={button.to}\n                      >\n                        {button.content}\n                      </ButtonLink>\n                    </WrapItem>\n                  )\n                }\n\n                if (button.toId) {\n                  return (\n                    <WrapItem>\n                      <Button\n                        key={idx}\n                        variant={button.variant}\n                        toId={button.toId}\n                      >\n                        {button.content}\n                      </Button>\n                    </WrapItem>\n                  )\n                }\n              })}\n            </Wrap>\n          )}\n          {children}\n        </Box>\n        <Box\n          as={GatsbyImage}\n          flex=\"1 1 50%\"\n          alignSelf=\"center\"\n          mt={{ base: 0, lg: 12 }}\n          ml={{ base: 0, lg: 12 }}\n          w=\"full\"\n          maxWidth={{ base: \"560px\", lg: \"624px\" }}\n          image={image}\n          imgStyle={{\n            objectFit: \"contain\",\n          }}\n          alt={alt}\n          loading=\"eager\"\n        />\n      </Flex>\n    </Box>\n  )\n}\n\nexport default PageHero\n","import React from \"react\"\nimport { Link as GatsbyLink } from \"gatsby\"\nimport { Box, List, ListItem } from \"@chakra-ui/react\"\nimport Link from \"../Link\"\n\ninterface Item {\n  id: string\n  title: string\n}\n\ninterface ITableOfContentsLinkProps {\n  item: Item\n}\n\nconst TableOfContentsLink: React.FC<ITableOfContentsLinkProps> = ({\n  item: { id, title },\n}) => {\n  const url = `#${id}`\n\n  return (\n    <Link\n      as={GatsbyLink}\n      to={url}\n      position=\"relative\"\n      display=\"inline-block\"\n      color=\"text300\"\n      // `li :last-child` global selector wants to override this without `!important`\n      mb=\"0.5rem !important\"\n    >\n      {title}\n    </Link>\n  )\n}\n\nexport interface IProps {\n  items: Array<Item>\n}\n\nconst StakingHomeTableOfContents: React.FC<IProps> = ({ items }) => {\n  if (!items) return null\n\n  return (\n    <Box as=\"nav\" p={0} textAlign=\"right\" mb={8} overflowY=\"auto\">\n      <List fontSize=\"xl\" lineHeight={1.6} fontWeight={400} ps={4} pe={1} m={0}>\n        {items.map((item, index) => (\n          <ListItem key={index} m={0}>\n            <div>\n              <TableOfContentsLink item={item} />\n            </div>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  )\n}\n\nexport default StakingHomeTableOfContents\n","import { Node } from \"gatsby\"\nimport {\n  getSrc as getGatsbySrc,\n  getImage as getGatsbyImage,\n  IGatsbyImageData,\n} from \"gatsby-plugin-image\"\nimport {\n  IGatsbyImageDataParent,\n  ImageDataLike as GatsbyImageDataLike,\n} from \"gatsby-plugin-image/dist/src/components/hooks\"\n\ntype FileNodeNull = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>> | null\n}\n\nexport type ImageDataLike = GatsbyImageDataLike | FileNodeNull\n\nconst isFileNodeNull = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: FileNodeNull | any\n): node is FileNodeNull => node?.childImageSharp === null\n\n/**\n * Custom temporary `getImage` function to accept `null` values in the passed\n * node image.\n *\n * This was partially fixed in https://github.com/gatsbyjs/gatsby/issues/35748#issuecomment-1188884754\n * but it still does not accept null values which are generated by GraphQL Typegen\n */\nexport function getImage(\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined {\n  if (!node) {\n    return\n  }\n\n  if (isFileNodeNull(node)) {\n    return\n  }\n\n  return getGatsbyImage(node)\n}\n\n/**\n * Custom temporary `getSrc` function to accept `null` values in the passed\n * node image.\n */\nexport function getSrc(node: ImageDataLike | null): string | undefined {\n  if (!node) {\n    return\n  }\n\n  if (isFileNodeNull(node)) {\n    return\n  }\n\n  return getGatsbySrc(node)\n}\n"],"names":["_ref","toId","children","props","___EmotionJSX","ChakraButton","onClick","scrollIntoView","to","isExternal","linkBoxShadowColor","useToken","LinkBox","padding","borderRadius","color","border","borderStyle","borderColor","_hover","background","boxShadow","Flex","zIndex","display","flexDirection","flex","justifyContent","align","Emoji","fontSize","mr","text","Box","LinkOverlay","href","as","Link","textDecoration","hideArrow","Text","fontWeight","margin","Icon","AiOutlineArrowRight","alignSelf","minWidth","boxSize","marginX","_groupHover","fill","transition","transform","rotate","prompt","isArticle","feedbackSubmitted","setFeedbackSubmitted","useState","surveyUrl","useSurvey","isTutorial","window","location","includes","handleSubmit","choice","trackCustomEvent","eventCategory","eventAction","eventName","String","bg","p","direction","mb","mt","w","gap","Heading","m","Translation","id","getTitle","Button","variant","open","leftIcon","FeedbackThumbsUpIcon","content","isReverse","className","buttons","title","header","subtitle","image","alt","py","px","width","base","lg","maxW","pl","textTransform","lineHeight","Wrap","spacing","map","button","idx","undefined","isButtonLink","WrapItem","ButtonLink","key","GatsbyImage","ml","maxWidth","imgStyle","objectFit","loading","TableOfContentsLink","item","url","GatsbyLink","position","_ref2","items","textAlign","overflowY","List","ps","pe","index","ListItem","isFileNodeNull","node","childImageSharp","getImage","getGatsbyImage","getSrc","getGatsbySrc"],"sourceRoot":""}