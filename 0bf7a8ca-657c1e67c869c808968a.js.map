{"version":3,"file":"0bf7a8ca-657c1e67c869c808968a.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/pages/developers/tutorials.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\"\nimport styled from \"@emotion/styled\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { useIntl } from \"react-intl\"\n\nimport Translation from \"../../components/Translation\"\nimport { translateMessageId } from \"../../utils/translations\"\nimport Icon from \"../../components/Icon\"\nimport ButtonLink from \"../../components/ButtonLink\"\nimport Link from \"../../components/Link\"\nimport Modal from \"../../components/Modal\"\nimport PageMetadata from \"../../components/PageMetadata\"\nimport Tag from \"../../components/Tag\"\nimport TutorialTags from \"../../components/TutorialTags\"\nimport Emoji from \"../../components/Emoji\"\nimport {\n  ButtonSecondary,\n  FakeLink,\n  Page,\n} from \"../../components/SharedStyledComponents\"\n\nimport { getLocaleTimestamp, INVALID_DATETIME } from \"../../utils/time\"\n\nimport externalTutorials from \"../../data/externalTutorials.json\"\nimport FeedbackCard from \"../../components/FeedbackCard\"\nimport { getSkillTranslationId, Skill } from \"../../components/TutorialMetadata\"\nimport { Context } from \"../../types\"\nimport { Lang } from \"../../utils/languages\"\nimport {\n  filterTutorialsByLang,\n  getSortedTutorialTagsForLang,\n} from \"../../utils/tutorials\"\nimport { Badge } from \"@chakra-ui/react\"\n\nconst SubSlogan = styled.p`\n  font-size: 1.25rem;\n  line-height: 140%;\n  color: ${(props) => props.theme.colors.text200};\n  margin-bottom: 1rem;\n  text-align: center;\n`\n\nconst TutorialCard = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  color: ${(props) => props.theme.colors.text} !important;\n  box-shadow: 0 1px 1px ${(props) => props.theme.colors.tableItemBoxShadow};\n  margin-bottom: 1px;\n  padding: 2rem;\n  width: 100%;\n  color: #000000;\n  &:hover {\n    text-decoration: none;\n    border-radius: 4px;\n    box-shadow: 0 0 1px ${(props) => props.theme.colors.primary};\n    background: ${(props) => props.theme.colors.tableBackgroundHover};\n  }\n`\n\nconst TutorialContainer = styled.div`\n  box-shadow: ${(props) => props.theme.colors.tableBoxShadow};\n  margin-bottom: 2rem;\n  margin-top: 2rem;\n  width: 66%;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    width: 100%;\n  }\n`\n\nconst StyledPage = styled(Page)`\n  margin-top: 4rem;\n`\n\nconst PillContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n`\n\nconst About = styled.p`\n  color: ${(props) => props.theme.colors.text200};\n`\n\nconst Author = styled.p`\n  color: ${(props) => props.theme.colors.text200};\n  font-size: 0.875rem;\n  text-transform: uppercase;\n`\n\nconst Title = styled.p<{ isExternal?: boolean | null }>`\n  color: ${(props) => props.theme.colors.text};\n  font-weight: 600;\n  font-size: 1.5rem;\n  margin-right: 6rem;\n\n  &:after {\n    margin-left: 0.125em;\n    margin-right: 0.3em;\n    display: ${(props) => (props.isExternal ? \"inline\" : \"none\")};\n    content: \"â†—\";\n    transition: all 0.1s ease-in-out;\n    font-style: normal;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    margin-right: 0rem;\n  }\n`\n\nconst PageTitle = styled.h1`\n  font-style: normal;\n  font-weight: normal;\n  font-family: ${(props) => props.theme.fonts.monospace};\n  text-transform: uppercase;\n  font-weight: 600;\n  font-size: 2rem;\n  line-height: 140%;\n  text-align: center;\n  margin: 0 0 1.625rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    margin: 1rem;\n  }\n`\n\nconst TitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: -1rem;\n  align-items: flex-start;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    flex-direction: column;\n    margin-bottom: 2rem;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 2rem 2rem;\n  padding-bottom: 2rem;\n  border-bottom: 1px solid ${(props) => props.theme.colors.border};\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    flex-direction: column;\n    padding: 1rem 0rem;\n  }\n`\nconst TagContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    max-width: 100%;\n    margin-bottom: 1rem;\n  }\n`\nconst ClearLink = styled.button`\n  color: ${(props) => props.theme.colors.primary};\n  text-decoration: underline;\n  background: none;\n  border: none;\n  cursor: pointer;\n`\n\nconst ResultsContainer = styled.div`\n  margin-top: 0rem;\n  text-align: center;\n  padding: 3rem;\n`\n\nconst GithubButton = styled(ButtonLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 0.5rem;\n`\n\nconst GithubIcon = styled(Icon)`\n  fill: ${(props) => props.theme.colors.text};\n  margin-right: 0.5rem;\n`\n\nconst ModalBody = styled.div`\n  display: flex;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    flex-direction: column;\n    max-height: 16rem;\n    overflow-y: scroll;\n  }\n`\n\nconst ModalOption = styled.div`\n  border: 1px solid ${(props) => props.theme.colors.border};\n  border-radius: 4px;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  margin: 0.5rem;\n  justify-content: space-between;\n  margin-left: 0rem;\n  margin-bottom: 1.5rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    width: 100%;\n    margin: 0.5rem 0;\n  }\n`\n\nconst ModalTitle = styled.h2`\n  margin-top: 0;\n  margin-bottom: 1rem;\n`\n\nconst published = (locale: string, published: string) => {\n  const localeTimestamp = getLocaleTimestamp(locale as Lang, published)\n  return localeTimestamp !== INVALID_DATETIME ? (\n    <span>\n      <Emoji text=\":calendar:\" fontSize=\"sm\" ml={2} mr={2} /> {localeTimestamp}\n    </span>\n  ) : null\n}\n\nexport interface IExternalTutorial {\n  url: string\n  title: string\n  description: string\n  author: string\n  authorGithub: string\n  tags: Array<string>\n  skillLevel: string\n  timeToRead?: string\n  lang: string\n  publishDate: string\n}\n\nexport interface ITutorial {\n  to: string\n  title: string\n  description: string\n  author: string\n  tags?: Array<string>\n  skill?: Skill\n  timeToRead?: number | null\n  published?: string | null\n  lang: string\n  isExternal: boolean\n}\n\nexport interface ITutorialsState {\n  activeTagNames: Array<string>\n  filteredTutorials: Array<ITutorial>\n}\n\nconst TutorialsPage = ({\n  data,\n  pageContext,\n}: PageProps<Queries.DevelopersTutorialsPageQuery, Context>) => {\n  const filteredTutorialsByLang = useMemo(\n    () =>\n      filterTutorialsByLang(\n        data.allTutorials.nodes,\n        externalTutorials,\n        pageContext.locale\n      ),\n    [pageContext.locale]\n  )\n\n  const allTags = useMemo(\n    () => getSortedTutorialTagsForLang(filteredTutorialsByLang),\n    [filteredTutorialsByLang]\n  )\n\n  const intl = useIntl()\n  const [isModalOpen, setModalOpen] = useState(false)\n  const [filteredTutorials, setFilteredTutorials] = useState(\n    filteredTutorialsByLang\n  )\n  const [selectedTags, setSelectedTags] = useState<Array<string>>([])\n\n  useEffect(() => {\n    let tutorials = filteredTutorialsByLang\n\n    if (selectedTags.length) {\n      tutorials = tutorials.filter((tutorial) => {\n        return selectedTags.every((tag) => (tutorial.tags || []).includes(tag))\n      })\n    }\n\n    setFilteredTutorials(tutorials)\n  }, [selectedTags])\n\n  const handleTagSelect = (tagName: string) => {\n    const tempSelectedTags = selectedTags\n\n    const index = tempSelectedTags.indexOf(tagName)\n    if (index > -1) {\n      tempSelectedTags.splice(index, 1)\n    } else {\n      tempSelectedTags.push(tagName)\n    }\n\n    setSelectedTags([...tempSelectedTags])\n  }\n\n  return (\n    <StyledPage>\n      <PageMetadata\n        title={translateMessageId(\"page-tutorials-meta-title\", intl)}\n        description={translateMessageId(\n          \"page-tutorials-meta-description\",\n          intl\n        )}\n      />\n      <PageTitle>\n        <Translation id=\"page-tutorial-title\" />\n      </PageTitle>\n      <SubSlogan>\n        <Translation id=\"page-tutorial-subtitle\" />\n      </SubSlogan>\n      <Modal isOpen={isModalOpen} setIsOpen={setModalOpen}>\n        <ModalTitle>\n          <Translation id=\"page-tutorial-submit-btn\" />\n        </ModalTitle>\n        <p>\n          <Translation id=\"page-tutorial-listing-policy-intro\" />{\" \"}\n          <Link to=\"/contributing/content-resources/\">\n            <Translation id=\"page-tutorial-listing-policy\" />\n          </Link>\n        </p>\n        <p>\n          <Translation id=\"page-tutorial-submit-tutorial\" />\n        </p>\n        <ModalBody>\n          <ModalOption>\n            <p>\n              <b>\n                <Translation id=\"page-tutorial-new-github\" />\n              </b>\n              <br />\n              <Translation id=\"page-tutorial-new-github-desc\" />\n            </p>\n            <GithubButton\n              variant=\"outline\"\n              to=\"https://github.com/ethereum/ethereum-org-website/issues/new?assignees=&labels=Type%3A+Feature&template=suggest_tutorial.md&title=\"\n            >\n              <GithubIcon name=\"github\" />{\" \"}\n              <span>\n                <Translation id=\"page-tutorial-raise-issue-btn\" />\n              </span>\n            </GithubButton>\n          </ModalOption>\n          <ModalOption>\n            <p>\n              <b>\n                <Translation id=\"page-tutorial-pull-request\" />\n              </b>\n              <br />\n              <Translation id=\"page-tutorial-pull-request-desc-1\" />{\" \"}\n              <code>\n                <Translation id=\"page-tutorial-pull-request-desc-2\" />\n              </code>{\" \"}\n              <Translation id=\"page-tutorial-pull-request-desc-3\" />\n            </p>\n            <GithubButton\n              variant=\"outline\"\n              to=\"https://github.com/ethereum/ethereum-org-website/new/dev/src/content/developers/tutorials\"\n            >\n              <GithubIcon name=\"github\" />{\" \"}\n              <span>\n                <Translation id=\"page-tutorial-pull-request-btn\" />\n              </span>\n            </GithubButton>\n          </ModalOption>\n        </ModalBody>\n      </Modal>\n      <ButtonSecondary onClick={() => setModalOpen(true)}>\n        <Translation id=\"page-tutorial-submit-btn\" />\n      </ButtonSecondary>\n      <TutorialContainer>\n        <TagsContainer>\n          <TagContainer>\n            {Object.entries(allTags).map(([tagName, tagCount]) => {\n              const name = `${tagName} (${tagCount})`\n              const isActive = selectedTags.includes(tagName)\n              return (\n                <Tag\n                  name={name}\n                  key={name}\n                  isActive={isActive}\n                  shouldShowIcon={false}\n                  onClick={handleTagSelect}\n                  value={tagName}\n                />\n              )\n            })}\n            {selectedTags.length > 0 && (\n              <ClearLink onClick={() => setSelectedTags([])}>\n                <Translation id=\"page-find-wallet-clear\" />\n              </ClearLink>\n            )}\n          </TagContainer>\n        </TagsContainer>\n        {filteredTutorials.length === 0 && (\n          <ResultsContainer>\n            <Emoji text=\":crying_face:\" fontSize=\"5xl\" mb={8} mt={8} />\n            <h2>\n              <Translation id=\"page-tutorial-tags-error\" />\n            </h2>\n            <p>\n              <Translation id=\"page-find-wallet-try-removing\" />\n            </p>\n          </ResultsContainer>\n        )}\n        {filteredTutorials.map((tutorial) => {\n          return (\n            <TutorialCard\n              key={tutorial.to}\n              to={tutorial.to ?? undefined}\n              hideArrow\n            >\n              <TitleContainer>\n                <Title isExternal={tutorial.isExternal}>{tutorial.title}</Title>\n                <Badge variant=\"secondary\">\n                  <Translation id={getSkillTranslationId(tutorial.skill!)} />\n                </Badge>\n              </TitleContainer>\n              <Author>\n                {/* TODO: Refactor each tutorial tag as a component */}\n                <Emoji text=\":writing_hand:\" fontSize=\"sm\" mr={2} />\n                {tutorial.author} â€¢\n                {published(intl.locale, tutorial.published ?? \"\")}\n                {tutorial.timeToRead && (\n                  <>\n                    {\" \"}\n                    â€¢\n                    <Emoji text=\":stopwatch:\" fontSize=\"sm\" ml={2} mr={2} />\n                    {tutorial.timeToRead}{\" \"}\n                    <Translation id=\"page-tutorial-read-time\" />\n                  </>\n                )}\n                {tutorial.isExternal && (\n                  <>\n                    {\" \"}\n                    â€¢<Emoji text=\":link:\" fontSize=\"sm\" ml={2} mr={2} />\n                    <FakeLink>\n                      <Translation id=\"page-tutorial-external-link\" />\n                    </FakeLink>\n                  </>\n                )}\n              </Author>\n              <About>{tutorial.description}</About>\n              <PillContainer>\n                <TutorialTags tags={tutorial.tags ?? []} />\n              </PillContainer>\n            </TutorialCard>\n          )\n        })}\n      </TutorialContainer>\n      <FeedbackCard />\n    </StyledPage>\n  )\n}\nexport default TutorialsPage\n\nexport const query = graphql`\n  query DevelopersTutorialsPage {\n    allTutorials: allMdx(\n      filter: { slug: { regex: \"/tutorials/\" } }\n      sort: { frontmatter: { published: DESC } }\n    ) {\n      nodes {\n        fields {\n          slug\n          readingTime {\n            minutes\n          }\n        }\n        frontmatter {\n          title\n          description\n          tags\n          author\n          skill\n          published\n          lang\n        }\n      }\n    }\n  }\n`\n"],"names":["SubSlogan","target","props","theme","colors","text200","TutorialCard","Link","text","tableItemBoxShadow","primary","tableBackgroundHover","TutorialContainer","tableBoxShadow","breakpoints","m","StyledPage","Page","name","styles","PillContainer","About","Author","Title","isExternal","PageTitle","fonts","monospace","s","TitleContainer","TagsContainer","border","TagContainer","ClearLink","ResultsContainer","GithubButton","ButtonLink","GithubIcon","Icon","ModalBody","ModalOption","ModalTitle","_ref","data","pageContext","filteredTutorialsByLang","useMemo","filterTutorialsByLang","allTutorials","nodes","externalTutorials","locale","allTags","getSortedTutorialTagsForLang","intl","useIntl","isModalOpen","setModalOpen","useState","filteredTutorials","setFilteredTutorials","selectedTags","setSelectedTags","useEffect","tutorials","length","filter","tutorial","every","tag","tags","includes","handleTagSelect","tagName","tempSelectedTags","index","indexOf","splice","push","___EmotionJSX","PageMetadata","title","translateMessageId","description","Translation","id","Modal","isOpen","setIsOpen","to","variant","ButtonSecondary","onClick","Object","entries","map","_ref2","tagCount","isActive","Tag","key","shouldShowIcon","value","Emoji","fontSize","mb","mt","undefined","hideArrow","Badge","getSkillTranslationId","skill","mr","author","published","localeTimestamp","getLocaleTimestamp","INVALID_DATETIME","ml","timeToRead","FakeLink","TutorialTags","FeedbackCard"],"sourceRoot":""}