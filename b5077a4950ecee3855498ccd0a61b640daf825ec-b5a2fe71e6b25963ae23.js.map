{"version":3,"file":"b5077a4950ecee3855498ccd0a61b640daf825ec-b5a2fe71e6b25963ae23.js","mappings":"wPAKIA,EAAgB,CAACC,EAAOC,KAC1B,IAAIC,EACJ,OAA6D,OAApDA,EAAc,MAATF,OAAgB,EAASA,EAAMG,kBAAuB,EAASD,EAAGD,KAAWA,CAAK,EAElG,SAASG,EAASC,GAChB,MAAM,WAAEC,EAAa,GAAE,MAAEC,EAAK,MAAEC,GAAUH,EACpCL,GAAQ,UACRS,EAAUV,EAAcC,EAAOO,GAC/BG,EAAUX,EAAcC,EAAOQ,GACrC,IAAIG,EAAQL,EAMZ,OALIG,EACFE,EAAQ,eAAeF,KACdC,IACTC,EAAQ,eAAeD,MAElBC,CACT,CAKA,SAASC,EAAcD,EAAOE,EAAU,CAAC,GACvC,MAAM,IAAEC,GAAM,EAAI,SAAEC,GAAaF,EAC3BG,GAAM,SACNC,EAAUC,MAAMC,QAAQR,GAASA,EAAQ,CAACA,GAChD,IAAIS,EAAiBF,MAAMC,QAAQJ,GAAYA,EAAW,CAACA,GAC3DK,EAAiBA,EAAeC,QAAQC,GAAW,MAALA,IAC9C,MAAOrB,EAAOsB,IAAY,IAAAC,WAAS,IAC1BP,EAAQQ,KAAI,CAACC,EAAQC,KAAU,CACpCC,MAAOF,EACPG,QAASf,IAAQM,EAAeO,GAASX,EAAIc,OAAOC,WAAWL,GAAQG,cAmC3E,OAhCA,IAAAG,YAAU,KACRT,EAASN,EAAQQ,KAAKC,IAAW,CAC/BE,MAAOF,EACPG,QAASb,EAAIc,OAAOC,WAAWL,GAAQG,aAEzC,MAAMI,EAAMhB,EAAQQ,KAAKC,GAAWV,EAAIc,OAAOC,WAAWL,KACpDQ,EAAWC,IACfZ,GAAUa,GACDA,EAAKC,QAAQZ,KAAKa,GACnBA,EAAKV,QAAUO,EAAIP,MACd,IAAKU,EAAMT,QAASM,EAAIN,SAC1BS,KAET,EASJ,OAPAL,EAAIM,SAASC,IACqB,mBAArBA,EAAKC,YACdD,EAAKC,YAAYP,GAEjBM,EAAKE,iBAAiB,SAAUR,EAClC,IAEK,KACLD,EAAIM,SAASC,IACwB,mBAAxBA,EAAKG,eACdH,EAAKG,eAAeT,GAEpBM,EAAKI,oBAAoB,SAAUV,EACrC,GACA,CACH,GACA,CAAClB,EAAIc,SACD7B,EAAMwB,KAAKa,GAASA,EAAKT,SAClC,CAiFA,SAASgB,EAAWxC,GAClB,MAAM,WAAEC,EAAU,KAAEwC,EAAI,SAAEC,EAAQ,IAAEjC,GAAQT,GACrC2C,GAAQpC,EAAcN,EAAY,CAAEQ,QAG3C,OAFkBgC,GAAQE,EAAOA,GACJD,EAAW,IAE1C,CAGA,SAASE,EAAK5C,GACZ,MAAM,SAAE0C,EAAQ,IAAEjC,GAAQT,EACpBM,EAAQP,EAASC,GACvB,OAAuB,gBAAoBwC,EAAY,CACrDvC,WAAYK,EACZG,OACCiC,EACL,CAIA,SAASG,EAAK7C,GACZ,MAAM,SAAE0C,EAAQ,IAAEjC,GAAQT,EACpBM,EAAQP,EAASC,GACvB,OAAuB,gBAAoBwC,EAAY,CACrDvC,WAAYK,EACZmC,MAAM,EACNhC,OACCiC,EACL,CAXAE,EAAKE,YAAc,OAYnBD,EAAKC,YAAc,M,sSCrBnB,MA5HyCC,IAKlC,IALmC,aACxCC,EAAY,WACZC,EAAU,gBACVC,EAAe,eACfC,GACD,EACC,MAAMC,GAAOC,EAAAA,EAAAA,MACP,cAAEC,EAAa,aAAEC,IAAiBC,EAAAA,EAAAA,IAAc,CACpDC,SAAUP,KAEN,OAAEQ,EAAM,QAAEC,EAAO,gBAAEC,GAAoBZ,EAGvCa,GAAcC,EAAAA,EAAAA,UAAwB,IACrCX,EACEQ,EAAQ3C,QAAO+C,IAAAA,IAAC,GAAEC,GAAI,SAAKA,IAAOb,CAAc,IAAE,GAAGU,YADhC,IAE3B,CAACV,IAEEc,GAAoBH,EAAAA,EAAAA,UACxB,IAAMF,IAAoBT,GAC1B,CAACA,IAIGe,EAA0CC,IAIzC,IAJ0C,MAC/C7C,EAAK,MACL8C,GAED,EADIC,GAAU,YAEb,MAAM,MAAEC,EAAK,cAAEC,EAAa,iBAAEC,EAAgB,UAAEC,IAC9CC,EAAAA,EAAAA,IAASL,GAGLM,GAAWb,EAAAA,EAAAA,UAAgB,IAC1BQ,EAAMM,UACN3B,EACAgB,EACE,UADwB,QADP,UADK,gBAI5B,CAACK,EAAMM,UAAW3B,EAAYgB,IAGjC,OACEY,EAAAA,EAAAA,IAACC,EAAAA,GAAAA,OAAY,UAAKL,EAAS,CAAEM,OAAO,UAAU,gBAAWC,EAAE,UACzDH,EAAAA,EAAAA,IAAAA,SAAAA,EAAAA,EAAAA,GAAAA,CAAAA,EAAWN,EAAc,CAAC,GAAE,CAAEU,QAAM,MACpCJ,EAAAA,EAAAA,IAACK,EAAAA,IAAI,UACCV,IAAkB,CACtBQ,EAAE,OACFG,EAAG,EACHC,WAAW,SACXC,GAAIV,EACJW,MAAOhB,EAAMM,UAAY,QAAU,OACnCW,aAAa,OACbC,OAAQ,CACNC,UAAWxC,EAAa,OAAS,UACjCyC,QAASzC,EACL,OACA,sCACJ8B,OAAQ9B,EAAa,UAAY,cAGnC4B,EAAAA,EAAAA,IAACc,EAAAA,GAAM,CACLC,KAAK,OACLP,GACEpC,EACI,QACAqB,EAAMM,UACN,iBACA,WAENiB,YAAa,CACXR,GAAIpC,EAAa,QAAU,kBAE7B6C,GAAI,IAEJjB,EAAAA,EAAAA,IAACkB,EAAAA,GAAI,CACHC,EAAE,IACFC,WAAW,MACXC,SAAS,KACTZ,MACGrC,EAAuBgB,EAAoB,UAAY,QAA1C,SAGfkC,OAAOC,aAAa,GAAK9E,GAAO+E,gBAGpCjC,GAEU,EAKnB,OACES,EAAAA,EAAAA,IAACK,EAAAA,IAAI,UAAK3B,IAAc,CAAE+C,UAAU,SAAStB,EAAE,UAC7CH,EAAAA,EAAAA,IAACkB,EAAAA,GAAI,CAACE,WAAW,MAAMC,SAAS,MAAMK,GAAI,IACvCC,EAAAA,EAAAA,IAAmB9C,EAAQN,KAE9ByB,EAAAA,EAAAA,IAACK,EAAAA,GAAI,CAACoB,UAAU,SAASG,IAAK,GAC3B9C,EAAQvC,KAAI,CAAC,EAAeE,KAAW,IAA1B,GAAE0C,EAAE,MAAEI,GAAO,EACzB,MAAMsC,EACHzD,GAAce,IAAOb,EAAiC,OAAhB,cACzC,OACE0B,EAAAA,EAAAA,IAACX,GAAW,QACVyC,IAAK3C,EACL0C,QAASA,EACTpF,MAAOA,EACP8C,OAAOoC,EAAAA,EAAAA,IAAmBpC,EAAOhB,IAC7BE,EAAc,CAAE1D,MAAOoE,KAC3B,KAIPf,IACC4B,EAAAA,EAAAA,IAAC+B,EAAAA,GAAG,CAACC,GAAI,IACPhC,EAAAA,EAAAA,IAACkB,EAAAA,GAAI,CAACE,WAAW,OAAOY,GAAI,EAAGN,GAAI,IACjC1B,EAAAA,EAAAA,IAACiC,EAAAA,EAAW,CAAC9C,GAAG,kBAElBa,EAAAA,EAAAA,IAACkB,EAAAA,GAAI,CAACC,EAAG,IAAIQ,EAAAA,EAAAA,IAAmB3C,EAAaT,KAG5C,E,WCzEX,MA/DsCL,IAK/B,IALgC,aACrCgE,EAAY,eACZC,EAAc,cACdC,EAAa,aACbC,GACD,EACC,MAAM,OAAEC,IAAW9D,EAAAA,EAAAA,MACZ+D,IAAoB7G,EAAAA,EAAAA,IAAc,qBAEnC8G,EAAc,CAAEpB,WAAY,MAAOM,GAAI,GACvCe,EAAc,CAAEpB,SAAU,KAAMF,EAAG,EAAGV,MAAO,YAGnD,OACET,EAAAA,EAAAA,IAAC+B,EAAAA,GAAG,CAAC5B,EAAE,OAAOkB,SAAU,CAAC,KAAM,SAC7BrB,EAAAA,EAAAA,IAACkB,EAAAA,GAAI,CAACE,WAAW,MAAMsB,UAAU,UAC9BP,EAAiB,uBAAyB,iBAE7CnC,EAAAA,EAAAA,IAACK,EAAAA,GAAI,CACHC,EAAG,EACHqC,QAAQ,SACR/B,UAAU,OACVJ,GAAG,aACHoC,GAAG,OACHzC,EAAE,cACF0C,GAAI,CACF,yBAA0B,CACxBC,UAAW,MACXC,YAAa,YAEfC,IAAK,CACH1C,EAAG,EACH2C,cAAe,SACf1C,WAAY,WAGhB2C,UAAU,WAEVlD,EAAAA,EAAAA,IAACK,EAAAA,GAAI,MACHL,EAAAA,EAAAA,IAACkB,EAAAA,GAASsB,ECxDW,SAC7BW,EACAb,GAA4B,YAAP,IAArBA,IAAAA,EAAwB,MAExB,IAAIc,KAAKC,cAAaC,EAAAA,EAAAA,IAAyBhB,GAAiB,CAC9DiB,MAAO,UACPC,sBAAuB,IACtBC,OAAON,EAAI,CDiDkBO,CAAgBrB,EAAcC,KACtDtC,EAAAA,EAAAA,IAACkB,EAAAA,GAASuB,GACRzC,EAAAA,EAAAA,IAACiC,EAAAA,EAAW,CAAC9C,GAAG,aAGpBa,EAAAA,EAAAA,IAACK,EAAAA,GAAI,MACHL,EAAAA,EAAAA,IAACkB,EAAAA,GAASsB,EAAa,IAAEN,IACzBlC,EAAAA,EAAAA,IAACkB,EAAAA,GAASuB,GACRzC,EAAAA,EAAAA,IAACiC,EAAAA,EAAW,CAAC9C,GAAG,cAGnBoD,IACCvC,EAAAA,EAAAA,IAACK,EAAAA,GAAI,MACHL,EAAAA,EAAAA,IAACkB,EAAAA,GAASsB,EAAcJ,IACxBpC,EAAAA,EAAAA,IAACkB,EAAAA,GAASuB,GACRzC,EAAAA,EAAAA,IAACiC,EAAAA,EAAW,CAAC9C,GAAG,aAKpB,EE7EH,MAAMwE,GAAcC,EAAAA,EAAAA,IAAW,CACpC3F,YAAa,cACb4F,QAAS,YACTC,aAAc,CACZC,MAAO,OACPC,OAAQ,QAEVC,EAAG,yECPQC,GAAgBN,EAAAA,EAAAA,IAAW,CACtC3F,YAAa,gBACb4F,QAAS,YACTC,aAAc,CACZC,MAAO,OACPC,OAAQ,QAEVC,EAAG,8KCNQE,GAAmBP,EAAAA,EAAAA,IAAW,CACzC3F,YAAa,mBACb4F,QAAS,cACTC,aAAc,CACZC,MAAO,QACPC,OAAQ,SAEVI,KAAM,EACJpE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,4oBACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,4oBACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,4MACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,oNACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,oNACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,gNACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,kNACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,8MACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,+MACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,8MACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,kNACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,oNACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,0MACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,6MACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,8LACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,iNACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,gNACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,gNACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,oNACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,oNACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,kMACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,oNACFI,KAAK,aAEPrE,EAAAA,EAAAA,IAAAA,OAAAA,CACEiE,EAAE,8oBACFI,KAAK,e,6OCjGJ,MAAMC,GAAaV,EAAAA,EAAAA,IAAW,CACnC3F,YAAa,aACb4F,QAAS,YACTC,a,qWAAa,CAAD,CACVC,MAAO,OACPC,OAAQ,QACLO,EAAAA,GAELH,KAAM,EACJpE,EAAAA,EAAAA,IAAAA,OAAAA,CAAMiE,EAAE,yNACRjE,EAAAA,EAAAA,IAAAA,OAAAA,CAAMiE,EAAE,o4CCyBZ,MAnC4B,CAC1B,mBAAoB,CAClBO,MAAO,mBACPC,UAAW,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,SAE9C,gBAAiB,CACfD,MAAO,sCACPC,UAAW,CAAC,OAAQ,OAAQ,OAAQ,SAEtCC,KAAM,CACJF,MAAO,aACPC,UAAW,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,SAE9CE,QAAS,CACPH,MAAO,UACPC,UAAW,CAAC,OAAQ,OAAQ,OAAQ,SAEtCG,SAAU,CACRJ,MAAO,WACPC,UAAW,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,SAE9CI,KAAM,CACJL,MAAO,OACPC,UAAW,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,SAE9C,UAAW,CACTD,MAAO,UACPC,UAAW,CAAC,OAAQ,OAAQ,OAAQ,SAEtCK,MAAO,CACLN,MAAO,oBACPC,UAAW,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,UCw1BhD,MAv3BmC,CAEjCM,KAAM,CACJlG,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBiG,KAAM,CACJnG,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBkG,KAAM,CACJpG,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBmG,KAAM,CACJrG,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,oBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,oBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,oBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,qBAGjBD,gBAAiB,UAEnBoG,KAAM,CACJtG,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAGnBqG,KAAM,CACJvG,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBsG,KAAM,CACJxG,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBuG,KAAM,CACJzG,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBwG,KAAM,CACJ1G,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAGnByG,KAAM,CACJ3G,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnB0G,KAAM,CACJ5G,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnB2G,KAAM,CACJ7G,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnB4G,KAAM,CACJ9G,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnB6G,KAAM,CACJ/G,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAGnB8G,KAAM,CACJhH,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnB+G,KAAM,CACJjH,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBgH,KAAM,CACJlH,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBiH,KAAM,CACJnH,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAGnBkH,KAAM,CACJpH,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBmH,KAAM,CACJrH,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBoH,KAAM,CACJtH,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBqH,KAAM,CACJvH,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAGnBsH,KAAM,CACJxH,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBuH,KAAM,CACJzH,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBwH,KAAM,CACJ1H,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnByH,KAAM,CACJ3H,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnB0H,KAAM,CACJ5H,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAGnB2H,KAAM,CACJ7H,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnB4H,KAAM,CACJ9H,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnB6H,KAAM,CACJ/H,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnB8H,KAAM,CACJhI,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAGnB+H,KAAM,CACJjI,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBgI,KAAM,CACJlI,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBiI,KAAM,CACJnI,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBkI,KAAM,CACJpI,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,UAEnBmI,KAAM,CACJrI,OAAQ,cACRC,QAAS,CACP,CACEK,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,sBAEf,CACEG,GAAI,SACJI,MAAO,eACPP,YAAa,uBAGjBD,gBAAiB,W,oPC9crB,MAlXqCb,IAAgC,IAA/B,QAAEiJ,EAAO,aAAEC,GAAc,EAC7D,MAAM7I,GAAOC,EAAAA,EAAAA,MACP,EAAC6I,EAAS,EAACC,IAAehL,EAAAA,EAAAA,UAAsB,OAChD,EAACiL,EAAiB,EAACC,IAAuBlL,EAAAA,EAAAA,UAC9C,KAEI,EAAC8B,EAAW,EAACqJ,IAAiBnL,EAAAA,EAAAA,WAAkB,IAChD,EAACoL,EAA4B,EAACC,IAClCrL,EAAAA,EAAAA,UAA8B,OAC1B,EAACgC,EAAe,EAACsJ,IAAqBtL,EAAAA,EAAAA,UAAwB,MAE9DuL,EAAa,KAEjBP,EAAY,MACZK,EAA+B,MAC/BH,EAAoB,IACpBC,GAAc,GACdG,EAAkB,MAGlB,MAAME,EACJX,GACAY,OAAOC,KAAKC,GAAa9L,QAAQ+L,IAAO,aAChC,QADgC,EACtCtL,cAAM,aAANuL,EAAQC,SAASC,KAAKC,SAASJ,EAAQ,IACvC,IACF,KAEF,IAAKJ,EAAgB,OAGrB,MAAMS,EAAmBN,EAAYH,GAC/BrD,EAA6B8D,EAAQ9D,UAAUlI,KAAK4C,G,qWAEjD,EAAEA,MADwBqJ,EAAarJ,MAG1CsJ,EAAoBC,IAAQjE,GAC5BkE,EAAmBvB,EACrBqB,EAAkBtL,MAAM,EAAGiK,GAC3BqB,EACEG,EAAa,CACjBpE,OAAO7C,EAAAA,EAAAA,IAAmB4G,EAAQ/D,MAAOjG,GACzCkG,UAAWkE,GAEbrB,EAAYsB,EAAK,GAEnB9L,EAAAA,EAAAA,WAAU+K,EAAY,CAACV,IAGvB,MAAM0B,GAAuB5J,EAAAA,EAAAA,UAC3B,IAAMsI,EAAiBuB,QAAU,GACjC,CAACvB,IAGGwB,GAAc9J,EAAAA,EAAAA,UAClB,IAAMsI,EAAiBuB,UAAWzB,aAAQ,EAARA,EAAU5C,UAAUqE,SACtD,CAACvB,EAAkBF,IAGf2B,GAAwBC,EAAAA,EAAAA,cAC3BxM,IAA2B,IAAD,EACzB,OACG2B,GACC3B,IAAUoM,GADXzK,MAECsJ,GAAAA,EAA6BwB,WACR,QADiB,EACxC3B,EAAiB9K,UAAM,OAAvB0M,EAAyBD,UAElB,UAEN9K,GACC3B,IAAUoM,IACTnB,UAAAA,EAA6BwB,YAC/B3B,EAAiB9K,KAAW8K,EAAiB9K,GAAOyM,UAE9C,QACLzM,IAAUoM,EAA6B,WACpC,UAAU,GAEnB,CACEzK,EACAyK,EACAnB,EACAH,IAIErF,GAAejD,EAAAA,EAAAA,UACnB,IAAMsI,EAAiBpL,QAAO+C,IAAAA,IAAC,UAAEgK,GAAW,SAAKA,CAAS,IAAEJ,QAC5D,CAACvB,IAGGlF,GAAepD,EAAAA,EAAAA,UACnB,IAAQoI,EAAenF,EAAemF,EAAS5C,UAAUqE,OAAtC,GACnB,CAACzB,EAAUnF,IAGPkH,GAAQnK,EAAAA,EAAAA,UACZ,IAAMoK,KAAKC,MAAqB,IAAfjH,IACjB,CAACA,IAGGF,GAAiBlD,EAAAA,EAAAA,UACrB,IAAMmK,EAAQG,EAAAA,GACd,CAACH,IAGGI,GAAevK,EAAAA,EAAAA,UACnB,MAAQoI,GAAY0B,GAAe5G,GACnC,CAACkF,EAAU0B,EAAa5G,IAwF1B,OACEnC,EAAAA,EAAAA,IAACK,EAAAA,GAAI,CAAC0D,MAAM,OAAOtC,UAAU,SAASlB,WAAW,WAC/CP,EAAAA,EAAAA,IAACyJ,EAAAA,GAAO,CACNC,GAAG,KACHhI,GAAI,GACJgB,UAAU,SACViH,eAAe,SACfC,gBAAiB,GACjBzK,GAAG,SAEHa,EAAAA,EAAAA,IAACiC,EAAAA,EAAW,CAAC9C,GAAG,0BAElBa,EAAAA,EAAAA,IAAC+B,EAAAA,GAAG,CACF5B,EAAE,OACF0J,KAAK,QACLrJ,GACGpC,EAEGsJ,SAAAA,EAA6BwB,UAC7B,iBACA,eAHA,UAKNxI,aAAa,OACbE,UAAU,OACVkJ,GAAI,GACJC,GAAI,CAAC,EAAG,IACRC,GAAI,CAAC,EAAG,GAAI,IACZC,SAAS,WACTC,UAAU,WAETV,IACCxJ,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAACmE,EAAgB,CACf9C,SAAS,QACT4I,SAAS,WACTE,QAAS,EACTC,KAAM,EACNC,KAAM,KAERrK,EAAAA,EAAAA,IAACmE,EAAgB,CACf9C,SAAS,QACT4I,SAAS,WACTE,QAAS,EACTC,KAAM,EACNE,MAAO,EACPC,UAAU,oBAKhBvK,EAAAA,EAAAA,IAACc,EAAAA,GAAM,CACLC,KAAK,OACLP,GACGpC,EAEGsJ,SAAAA,EAA6BwB,UAC7B,UACA,QAHA,UAKNe,SAAS,WACTG,IAAK,EACLC,KAAK,MACLE,UAAU,sCAEVvK,EAAAA,EAAAA,KApFW,KACjB,MAAMwK,EAAc,CAClB/J,MAAO,WAGT,OAAKrC,EAIEsJ,SAAAA,EAA6BwB,WAClClJ,EAAAA,EAAAA,IAAC2D,EAAgB6G,IAEjBxK,EAAAA,EAAAA,IAACkE,EAAkBsG,IANZxK,EAAAA,EAAAA,IAACsE,EAAekG,EAOxB,GAuEgB,OAEZnD,GACCrH,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAACyK,EAAAA,GAAM,MACLzK,EAAAA,EAAAA,IAACkB,EAAAA,GAAI,CAACwJ,UAAU,SAAStJ,WAAW,MAAMX,MAAM,gBAC7C4G,EAAS7C,SAIdxE,EAAAA,EAAAA,IAACyK,EAAAA,GAAM,CAAC7I,IAtRK,MAsRkB+I,aAAc,GAC1CtD,EAAS5C,UAAUlI,KAAI,CAAC,EAAQE,KAAW,IAAnB,GAAE0C,GAAI,EAE7B,MAAM4E,EAAK,QAAWsF,KAAKC,MACzB,IAAMjC,EAAS5C,UAAUqE,QADhB,WAGX,OACE9I,EAAAA,EAAAA,IAAC4K,EAAAA,GAAS,CACR9I,IAAK3C,EACLqB,GAAIwI,EAAsBvM,GAC1BoO,EAAE,MACF1K,EAAG4D,EACH8F,KAAI,OAAS9F,EAAK,UAClB+G,aAAc,EACdxK,EAAG,GACH,MAIRN,EAAAA,EAAAA,IAACyK,EAAAA,GAAM,KACJ1B,GACC/I,EAAAA,EAAAA,IAAC+K,EAAW,CACV7I,aAAcA,EACdC,eAAgBA,EAChBC,cAAeiF,EAAS5C,UAAUqE,OAClCzG,aAAcA,KAGhBrC,EAAAA,EAAAA,IAACgL,EAAc,CACb7M,aAAckJ,EAAS5C,UAAUoE,GACjCzK,WAAYA,EACZC,gBAvLS4M,IACvBrD,EAAkBqD,GAPcA,KAChC,MAAM/B,EACJ+B,KAAa5D,aAAQ,EAARA,EAAU5C,UAAUoE,GAAsB9J,iBACzD4I,EAA+B,CAAEsD,WAAU/B,aAAY,EAKvDgC,CAAyBD,EAAS,EAsLpB3M,eAAgBA,MAItB0B,EAAAA,EAAAA,IAACyK,EAAAA,GAAM,CAACzI,GAAI,CAAC,EAAG,MACdhC,EAAAA,EAAAA,IAACK,EAAAA,GAAI,CACHuB,IAAK,EACLuJ,KAAM,CAAEC,KAAM,EAAGC,GAAI,SACrB5J,UAAW,CAAE2J,KAAM,SAAUC,GAAI,OACjCxI,GAAI,CACFyI,OAAQ,CAAEvH,MAAO,CAAEqH,KAAM,OAAQC,GAAI,kBAGtCjN,GACCsJ,IACCA,EAA4BwB,YAC3BlJ,EAAAA,EAAAA,IAACuL,EAAAA,EAAM,CACLC,QA1LQ,MAC1BC,EAAAA,EAAAA,GAAiB,CACfC,cAAe,cACfC,YAAa,QACbC,UAAW,mBAEbjE,EAA+B,MAC/BC,EAAkB,MAClBH,GAAc,EAAM,EAmLFoE,QAAQ,kBAER7L,EAAAA,EAAAA,IAACiC,EAAAA,EAAW,CAAC9C,GAAG,eAGrB4J,GACC/I,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAACuL,EAAAA,EAAM,CACLO,UAAU9L,EAAAA,EAAAA,IAAC+L,EAAAA,GAAI,CAACrC,GAAIsC,EAAAA,MACpBR,QA1KA,KAClB,IAAKnE,IAAazK,OAAQ,QAC1B6O,EAAAA,EAAAA,GAAiB,CACfC,cAAe,cACfC,YAAa,QACbC,UAAW,kBAEb,MAAMK,EAAG,uBAA0BrP,OAAOwL,SAAS8D,SAAQ,UACrDC,EACJC,UAAU,oBACY/E,EAAS7C,MAAK,qCAAqCtC,EAAY,WAAWmF,EAAS5C,UAAUqE,OAAM,yBACrHmD,EACNrP,OAAOyP,KAAK,yCAC+BF,EAD/B,yBAEX,IA8JiBnM,EAAAA,EAAAA,IAACiC,EAAAA,EAAW,CAAC9C,GAAG,mBAEjBiK,EAAQ,MACPpJ,EAAAA,EAAAA,IAACuL,EAAAA,EAAM,CAACC,QAAS3D,IACf7H,EAAAA,EAAAA,IAACiC,EAAAA,EAAW,CAAC9C,GAAG,gBAIpBf,GACF4B,EAAAA,EAAAA,IAACuL,EAAAA,EAAM,CAACC,QApMD,KAChB9D,IACLF,GAAqBtK,GAAI,kBAASA,GAAI,CAAEwK,MACxCC,EAA+B,MAC/BF,GAAc,GACVsB,IACF0C,EAAAA,EAAAA,GAAiB,CACfC,cAAe,cACfC,YAAa,QACbC,UAAW,iBACXU,WAAelD,EAAK,MAExB,GAyLiB7B,EAAiBuB,SAAWzB,EAAS5C,UAAUqE,OAAS,GACrDnH,EAAAA,EAAAA,IAAmB,cAAepD,IAClCoD,EAAAA,EAAAA,IAAmB,gBAAiBpD,KAG1CyB,EAAAA,EAAAA,IAACuL,EAAAA,EAAM,CACLC,QAAS,KACPe,OAjOMC,EAkOJnF,EAAS5C,UAAUoE,GAAsB1J,GAlOjBsN,EAmOxB/E,GAlOpB+D,EAAAA,EAAAA,GAAiB,CACfC,cAAe,cACfC,YAAa,oBACbC,UAAU,QAASY,EACnBF,WAAYG,EAAOvD,UAAY,IAAM,WAEvCzB,GAAc,GAPS,IAAC+E,EAAoBC,CAqO3B,EACDC,UAAWhF,IAEX1H,EAAAA,EAAAA,IAACiC,EAAAA,EAAW,CAAC9C,GAAG,uBAO1Ba,EAAAA,EAAAA,IAACK,EAAAA,GAAI,CAACsC,QAAQ,WACZ3C,EAAAA,EAAAA,IAAC2M,EAAAA,EAAO,QAIT,C,qECnaJ,MAAMpI,EAAoC,CAC/CqI,SAAU,UACVC,SAAU,UACVxI,KAAM,e,4FCLD,MAAMyI,EAAwBC,CAAAA,EAAYD,uBAAyB,OAC7DvD,EAAqB,E,wBCDlC,IAAIyD,EAAY,EAAQ,MACpBC,EAAc,EAAQ,OAa1BC,EAAOC,QAJP,SAAsBC,GACpB,OAAOH,EAAYD,EAAUI,GAC/B,C,oBCXA,IAAIC,EAAchE,KAAKC,MACnBgE,EAAejE,KAAKkE,OAexBL,EAAOC,QAJP,SAAoBK,EAAOC,GACzB,OAAOD,EAAQH,EAAYC,KAAkBG,EAAQD,EAAQ,GAC/D,C,wBCfA,IAAIP,EAAc,EAAQ,OACtBS,EAAS,EAAQ,OAarBR,EAAOC,QAJP,SAAqBQ,GACnB,OAAOV,EAAYS,EAAOC,GAC5B,C,wBCZA,IAAIC,EAAW,EAAQ,OAkBvBV,EAAOC,QANP,SAAoBU,EAAQ1S,GAC1B,OAAOyS,EAASzS,GAAO,SAAS2G,GAC9B,OAAO+L,EAAO/L,EAChB,GACF,C,wBChBA,IAAIgM,EAAa,EAAQ,OA2BzBZ,EAAOC,QAjBP,SAAqBC,EAAOrM,GAC1B,IAAItE,GAAS,EACTqM,EAASsE,EAAMtE,OACfiF,EAAYjF,EAAS,EAGzB,IADA/H,OAAgBiN,IAATjN,EAAqB+H,EAAS/H,IAC5BtE,EAAQsE,GAAM,CACrB,IAAIkN,EAAOH,EAAWrR,EAAOsR,GACzBhT,EAAQqS,EAAMa,GAElBb,EAAMa,GAAQb,EAAM3Q,GACpB2Q,EAAM3Q,GAAS1B,CACjB,CAEA,OADAqS,EAAMtE,OAAS/H,EACRqM,CACT,C,wBCzBA,IAAIc,EAAe,EAAQ,OACvBC,EAAc,EAAQ,OACtBlS,EAAU,EAAQ,MAsBtBiR,EAAOC,QALP,SAAiBQ,GAEf,OADW1R,EAAQ0R,GAAcO,EAAeC,GACpCR,EACd,C,wBCtBA,IAAIS,EAAa,EAAQ,OACrBpG,EAAO,EAAQ,MAgCnBkF,EAAOC,QAJP,SAAgBU,GACd,OAAiB,MAAVA,EAAiB,GAAKO,EAAWP,EAAQ7F,EAAK6F,GACvD,C","sources":["webpack://ethereum-org-website/./node_modules/@chakra-ui/media-query/dist/index.esm.js","webpack://ethereum-org-website/./src/components/Quiz/QuizRadioGroup.tsx","webpack://ethereum-org-website/./src/components/Quiz/QuizSummary.tsx","webpack://ethereum-org-website/./src/utils/numberToPercent.ts","webpack://ethereum-org-website/./src/components/icons/quiz/CorrectIcon.tsx","webpack://ethereum-org-website/./src/components/icons/quiz/IncorrectIcon.tsx","webpack://ethereum-org-website/./src/components/icons/quiz/StarConfettiIcon.tsx","webpack://ethereum-org-website/./src/components/icons/quiz/TrophyIcon.tsx","webpack://ethereum-org-website/./src/data/quizzes/index.ts","webpack://ethereum-org-website/./src/data/quizzes/questionBank.ts","webpack://ethereum-org-website/./src/components/Quiz/QuizWidget.tsx","webpack://ethereum-org-website/./src/components/icons/utils.ts","webpack://ethereum-org-website/./src/constants.ts","webpack://ethereum-org-website/./node_modules/lodash/_arrayShuffle.js","webpack://ethereum-org-website/./node_modules/lodash/_baseRandom.js","webpack://ethereum-org-website/./node_modules/lodash/_baseShuffle.js","webpack://ethereum-org-website/./node_modules/lodash/_baseValues.js","webpack://ethereum-org-website/./node_modules/lodash/_shuffleSelf.js","webpack://ethereum-org-website/./node_modules/lodash/shuffle.js","webpack://ethereum-org-website/./node_modules/lodash/values.js"],"sourcesContent":["// ../../react-shim.js\nimport React from \"react\";\n\n// src/media-query.tsx\nimport { useTheme } from \"@chakra-ui/system\";\nvar getBreakpoint = (theme, value) => {\n  var _a;\n  return ((_a = theme == null ? void 0 : theme.breakpoints) == null ? void 0 : _a[value]) ?? value;\n};\nfunction useQuery(props) {\n  const { breakpoint = \"\", below, above } = props;\n  const theme = useTheme();\n  const bpBelow = getBreakpoint(theme, below);\n  const bpAbove = getBreakpoint(theme, above);\n  let query = breakpoint;\n  if (bpBelow) {\n    query = `(max-width: ${bpBelow})`;\n  } else if (bpAbove) {\n    query = `(min-width: ${bpAbove})`;\n  }\n  return query;\n}\n\n// src/use-media-query.ts\nimport { useEnvironment } from \"@chakra-ui/react-env\";\nimport { useEffect, useState } from \"react\";\nfunction useMediaQuery(query, options = {}) {\n  const { ssr = true, fallback } = options;\n  const env = useEnvironment();\n  const queries = Array.isArray(query) ? query : [query];\n  let fallbackValues = Array.isArray(fallback) ? fallback : [fallback];\n  fallbackValues = fallbackValues.filter((v) => v != null);\n  const [value, setValue] = useState(() => {\n    return queries.map((query2, index) => ({\n      media: query2,\n      matches: ssr ? !!fallbackValues[index] : env.window.matchMedia(query2).matches\n    }));\n  });\n  useEffect(() => {\n    setValue(queries.map((query2) => ({\n      media: query2,\n      matches: env.window.matchMedia(query2).matches\n    })));\n    const mql = queries.map((query2) => env.window.matchMedia(query2));\n    const handler = (evt) => {\n      setValue((prev) => {\n        return prev.slice().map((item) => {\n          if (item.media === evt.media)\n            return { ...item, matches: evt.matches };\n          return item;\n        });\n      });\n    };\n    mql.forEach((mql2) => {\n      if (typeof mql2.addListener === \"function\") {\n        mql2.addListener(handler);\n      } else {\n        mql2.addEventListener(\"change\", handler);\n      }\n    });\n    return () => {\n      mql.forEach((mql2) => {\n        if (typeof mql2.removeListener === \"function\") {\n          mql2.removeListener(handler);\n        } else {\n          mql2.removeEventListener(\"change\", handler);\n        }\n      });\n    };\n  }, [env.window]);\n  return value.map((item) => item.matches);\n}\n\n// src/media-query.hook.ts\nfunction usePrefersReducedMotion(options) {\n  const [prefersReducedMotion] = useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n  return prefersReducedMotion;\n}\nfunction useColorModePreference(options) {\n  const [isLight, isDark] = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"], options);\n  if (isLight)\n    return \"light\";\n  if (isDark)\n    return \"dark\";\n  return void 0;\n}\n\n// src/use-breakpoint.ts\nimport { useTheme as useTheme2 } from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !Array.isArray(value);\n}\n\n// src/use-breakpoint.ts\nfunction useBreakpoint(arg) {\n  var _a;\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const theme = useTheme2();\n  const breakpoints = theme.__breakpoints.details.map(({ minMaxQuery, breakpoint }) => ({\n    breakpoint,\n    query: minMaxQuery.replace(\"@media screen and \", \"\")\n  }));\n  const fallback = breakpoints.map((bp) => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(breakpoints.map((bp) => bp.query), { fallback, ssr: opts.ssr });\n  const index = values.findIndex((value) => value == true);\n  return ((_a = breakpoints[index]) == null ? void 0 : _a.breakpoint) ?? opts.fallback;\n}\n\n// src/use-breakpoint-value.ts\nimport { useTheme as useTheme3 } from \"@chakra-ui/system\";\nimport { arrayToObjectNotation } from \"@chakra-ui/breakpoint-utils\";\n\n// src/media-query.utils.ts\nimport { breakpoints as defaultBreakPoints } from \"@chakra-ui/breakpoint-utils\";\nfunction getClosestValue(values, breakpoint, breakpoints = defaultBreakPoints) {\n  let index = Object.keys(values).indexOf(breakpoint);\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n  let stopIndex = breakpoints.indexOf(breakpoint);\n  while (stopIndex >= 0) {\n    const key = breakpoints[stopIndex];\n    if (values.hasOwnProperty(key)) {\n      index = stopIndex;\n      break;\n    }\n    stopIndex -= 1;\n  }\n  if (index !== -1) {\n    const key = breakpoints[index];\n    return values[key];\n  }\n  return void 0;\n}\n\n// src/use-breakpoint-value.ts\nfunction useBreakpointValue(values, arg) {\n  var _a;\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const breakpoint = useBreakpoint(opts);\n  const theme = useTheme3();\n  if (!breakpoint)\n    return;\n  const breakpoints = Array.from(((_a = theme.__breakpoints) == null ? void 0 : _a.keys) || []);\n  const obj = Array.isArray(values) ? Object.fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(([key, value]) => [key, value])) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\n// src/visibility.tsx\nfunction Visibility(props) {\n  const { breakpoint, hide, children, ssr } = props;\n  const [show] = useMediaQuery(breakpoint, { ssr });\n  const isVisible = hide ? !show : show;\n  const rendered = isVisible ? children : null;\n  return rendered;\n}\n\n// src/show.tsx\nfunction Show(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ React.createElement(Visibility, {\n    breakpoint: query,\n    ssr\n  }, children);\n}\nShow.displayName = \"Show\";\n\n// src/hide.tsx\nfunction Hide(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true,\n    ssr\n  }, children);\n}\nHide.displayName = \"Hide\";\nexport {\n  Hide,\n  Show,\n  useBreakpoint,\n  useBreakpointValue,\n  useColorModePreference,\n  useMediaQuery,\n  usePrefersReducedMotion,\n  useQuery\n};\n","// Import libraries\nimport React, { useMemo } from \"react\"\nimport {\n  Box,\n  chakra,\n  Circle,\n  Flex,\n  RadioProps,\n  Text,\n  useRadio,\n  useRadioGroup,\n} from \"@chakra-ui/react\"\nimport { useIntl } from \"react-intl\"\n\n// Components\nimport Translation from \"../Translation\"\n\n// Import types\nimport { Question } from \"../../types\"\n\n// Utils\nimport { translateMessageId, TranslationKey } from \"../../utils/translations\"\n\n// Interfaces\nexport interface CustomRadioProps extends RadioProps {\n  index: number\n  label: string\n}\nexport interface IProps {\n  questionData: Question\n  showAnswer: boolean\n  handleSelection: (answerId: string) => void\n  selectedAnswer: string | null\n}\n\n// Component\nconst QuizRadioGroup: React.FC<IProps> = ({\n  questionData,\n  showAnswer,\n  handleSelection,\n  selectedAnswer,\n}) => {\n  const intl = useIntl()\n  const { getRadioProps, getRootProps } = useRadioGroup({\n    onChange: handleSelection,\n  })\n  const { prompt, answers, correctAnswerId } = questionData\n\n  // Memoized values\n  const explanation = useMemo<TranslationKey>(() => {\n    if (!selectedAnswer) return \"\"\n    return answers.filter(({ id }) => id === selectedAnswer)[0].explanation\n  }, [selectedAnswer])\n\n  const isSelectedCorrect = useMemo<boolean>(\n    () => correctAnswerId === selectedAnswer,\n    [selectedAnswer]\n  )\n\n  // Custom radio button component\n  const CustomRadio: React.FC<CustomRadioProps> = ({\n    index,\n    label,\n    ...radioProps\n  }) => {\n    const { state, getInputProps, getCheckboxProps, htmlProps } =\n      useRadio(radioProps)\n\n    // Memoized values\n    const buttonBg = useMemo<string>(() => {\n      if (!state.isChecked) return \"bodyInverted\"\n      if (!showAnswer) return \"primary\"\n      if (!isSelectedCorrect) return \"error\"\n      return \"success\"\n    }, [state.isChecked, showAnswer, isSelectedCorrect])\n\n    // Render CustomRadio component\n    return (\n      <chakra.label {...htmlProps} cursor=\"pointer\" data-group w=\"100%\">\n        <input {...getInputProps({})} hidden />\n        <Flex\n          {...getCheckboxProps()}\n          w=\"100%\"\n          p={2}\n          alignItems=\"center\"\n          bg={buttonBg}\n          color={state.isChecked ? \"white\" : \"text\"}\n          borderRadius=\"base\"\n          _hover={{\n            boxShadow: showAnswer ? \"none\" : \"primary\",\n            outline: showAnswer\n              ? \"none\"\n              : \"1px solid var(--eth-colors-primary)\",\n            cursor: showAnswer ? \"default\" : \"pointer\",\n          }}\n        >\n          <Circle\n            size=\"25px\"\n            bg={\n              showAnswer\n                ? \"white\"\n                : state.isChecked\n                ? \"primaryPressed\"\n                : \"disabled\"\n            }\n            _groupHover={{\n              bg: showAnswer ? \"white\" : \"primaryPressed\",\n            }}\n            me={2}\n          >\n            <Text\n              m=\"0\"\n              fontWeight=\"700\"\n              fontSize=\"lg\"\n              color={\n                !showAnswer ? \"white\" : isSelectedCorrect ? \"success\" : \"error\"\n              }\n            >\n              {String.fromCharCode(97 + index).toUpperCase()}\n            </Text>\n          </Circle>\n          {label}\n        </Flex>\n      </chakra.label>\n    )\n  }\n\n  // Render QuizRadioGroup\n  return (\n    <Flex {...getRootProps()} direction=\"column\" w=\"100%\">\n      <Text fontWeight=\"700\" fontSize=\"2xl\" mb={6}>\n        {translateMessageId(prompt, intl)}\n      </Text>\n      <Flex direction=\"column\" gap={4}>\n        {answers.map(({ id, label }, index) => {\n          const display =\n            !showAnswer || id === selectedAnswer ? \"inline-flex\" : \"none\"\n          return (\n            <CustomRadio\n              key={id}\n              display={display}\n              index={index}\n              label={translateMessageId(label, intl)}\n              {...getRadioProps({ value: id })}\n            />\n          )\n        })}\n      </Flex>\n      {showAnswer && (\n        <Box mt={5}>\n          <Text fontWeight=\"bold\" mt={0} mb={2}>\n            <Translation id=\"explanation\" />\n          </Text>\n          <Text m={0}>{translateMessageId(explanation, intl)}</Text>\n        </Box>\n      )}\n    </Flex>\n  )\n}\n\nexport default QuizRadioGroup\n","// Import libraries\nimport React from \"react\"\nimport { Box, Flex, Text, useMediaQuery } from \"@chakra-ui/react\"\nimport { useIntl } from \"react-intl\"\n\n// Components\nimport Translation from \"../Translation\"\n\n// Import utilities\nimport { numberToPercent } from \"../../utils/numberToPercent\"\n\n// Interfaces\nexport interface IProps {\n  correctCount: number\n  isPassingScore: boolean\n  questionCount: number\n  ratioCorrect: number\n}\n\n// Component\nconst QuizSummary: React.FC<IProps> = ({\n  correctCount,\n  isPassingScore,\n  questionCount,\n  ratioCorrect,\n}) => {\n  const { locale } = useIntl()\n  const [largerThanMobile] = useMediaQuery(\"(min-width: 30em)\")\n\n  const valueStyles = { fontWeight: \"700\", mb: 2 }\n  const labelStyles = { fontSize: \"sm\", m: 0, color: \"disabled\" }\n\n  // Render QuizSummary component\n  return (\n    <Box w=\"full\" fontSize={[\"xl\", \"2xl\"]}>\n      <Text fontWeight=\"700\" textAlign=\"center\">\n        {isPassingScore ? \"You passed the quiz!\" : \"Your results\"}\n      </Text>\n      <Flex\n        p={4}\n        justify=\"center\"\n        boxShadow=\"drop\"\n        bg=\"background\"\n        mx=\"auto\"\n        w=\"fit-content\"\n        sx={{\n          \"div:not(:last-of-type)\": {\n            borderEnd: \"1px\",\n            borderColor: \"disabled\",\n          },\n          div: {\n            p: 4,\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          },\n        }}\n        overflowX=\"hidden\"\n      >\n        <Flex>\n          <Text {...valueStyles}>{numberToPercent(ratioCorrect, locale)}</Text>\n          <Text {...labelStyles}>\n            <Translation id=\"score\" />\n          </Text>\n        </Flex>\n        <Flex>\n          <Text {...valueStyles}>+{correctCount}</Text>\n          <Text {...labelStyles}>\n            <Translation id=\"correct\" />\n          </Text>\n        </Flex>\n        {largerThanMobile && (\n          <Flex>\n            <Text {...valueStyles}>{questionCount}</Text>\n            <Text {...labelStyles}>\n              <Translation id=\"total\" />\n            </Text>\n          </Flex>\n        )}\n      </Flex>\n    </Box>\n  )\n}\n\nexport default QuizSummary\n","import { getLocaleForNumberFormat } from \"./translations\"\nimport type { Lang } from \"./languages\"\n\nexport const numberToPercent = (\n  num: number,\n  locale: string | Lang = \"en\"\n): string =>\n  new Intl.NumberFormat(getLocaleForNumberFormat(locale as Lang), {\n    style: \"percent\",\n    maximumFractionDigits: 0,\n  }).format(num)\n","import { createIcon } from \"@chakra-ui/react\"\n\nexport const CorrectIcon = createIcon({\n  displayName: \"CorrectIcon\",\n  viewBox: \"0 0 20 16\",\n  defaultProps: {\n    width: \"20px\",\n    height: \"16px\",\n  },\n  d: \"M8 16L0 9.05375L2.75437 7.06313L7.49875 11.4325L16.8531 0L20 2L8 16Z\",\n})\n","import { createIcon } from \"@chakra-ui/react\"\n\nexport const IncorrectIcon = createIcon({\n  displayName: \"IncorrectIcon\",\n  viewBox: \"0 0 20 20\",\n  defaultProps: {\n    width: \"20px\",\n    height: \"20px\",\n  },\n  d: \"M17.5002 0L9.99912 7.49934L2.49978 0L0 2.49978L7.49934 9.99911L0 17.4984L2.49978 19.9982L9.99912 12.4989L17.5002 19.9982L20 17.4984L12.5007 9.99911L20 2.49978L17.5002 0Z\",\n})\n","import React from \"react\"\nimport { createIcon } from \"@chakra-ui/react\"\n\nexport const StarConfettiIcon = createIcon({\n  displayName: \"StarConfettiIcon\",\n  viewBox: \"0 0 185 119\",\n  defaultProps: {\n    width: \"185px\",\n    height: \"119px\",\n  },\n  path: [\n    <path\n      d=\"M58.9868 44.8285L60.985 48.858C61.0288 48.9462 61.1133 49.0072 61.2108 49.0213L65.6789 49.6673C65.9249 49.7029 66.0231 50.0038 65.8452 50.1766L62.6121 53.3131C62.5414 53.3817 62.5092 53.4804 62.5258 53.5773L63.289 58.0064C63.331 58.2502 63.0739 58.4363 62.8538 58.3211L58.8575 56.2301C58.7702 56.1845 58.6657 56.1845 58.5786 56.2301L54.5823 58.3208C54.3622 58.4358 54.105 58.2502 54.1471 58.0062L54.9103 53.5771C54.9271 53.4802 54.8948 53.3813 54.824 53.3129L51.5909 50.1764C51.4128 50.0038 51.5112 49.7027 51.7572 49.6671L56.2253 49.0211C56.3231 49.007 56.4075 48.9458 56.4511 48.8578L58.4493 44.8283C58.559 44.6067 58.8768 44.6067 58.9868 44.8285Z\"\n      fill=\"#F9DE8F\"\n    />,\n    <path\n      d=\"M40.0337 94.4535L42.0319 98.483C42.0757 98.5711 42.1601 98.6322 42.2577 98.6462L46.7258 99.2923C46.9718 99.3279 47.07 99.6287 46.8921 99.8015L43.659 102.938C43.5882 103.007 43.5561 103.105 43.5727 103.202L44.3359 107.631C44.3778 107.875 44.1208 108.061 43.9007 107.946L39.9044 105.855C39.8171 105.809 39.7126 105.809 39.6255 105.855L35.6292 107.946C35.4091 108.061 35.1518 107.875 35.194 107.631L35.9572 103.202C35.974 103.105 35.9417 103.006 35.8709 102.938L32.6378 99.8015C32.4597 99.6289 32.5581 99.3279 32.8041 99.2923L37.2722 98.6462C37.3699 98.6322 37.4544 98.5709 37.498 98.483L39.4962 94.4535C39.6054 94.2316 39.9234 94.2316 40.0337 94.4535Z\"\n      fill=\"#F9DE8F\"\n    />,\n    <path\n      d=\"M8.54138 83.2335C11.2566 83.2335 13.4578 81.0428 13.4578 78.3404C13.4578 75.638 11.2566 73.4473 8.54138 73.4473C5.82614 73.4473 3.625 75.638 3.625 78.3404C3.625 81.0428 5.82614 83.2335 8.54138 83.2335Z\"\n      fill=\"#67D1D3\"\n    />,\n    <path\n      d=\"M33.4789 29.7999C36.1941 29.7999 38.3953 27.6092 38.3953 24.9068C38.3953 22.2044 36.1941 20.0137 33.4789 20.0137C30.7636 20.0137 28.5625 22.2044 28.5625 24.9068C28.5625 27.6092 30.7636 29.7999 33.4789 29.7999Z\"\n      fill=\"#67D1D3\"\n    />,\n    <path\n      d=\"M33.4787 46.9859C34.5456 46.9859 35.4104 46.1251 35.4104 45.0633C35.4104 44.0014 34.5456 43.1406 33.4787 43.1406C32.4118 43.1406 31.5469 44.0014 31.5469 45.0633C31.5469 46.1251 32.4118 46.9859 33.4787 46.9859Z\"\n      fill=\"#FFB991\"\n    />,\n    <path\n      d=\"M153.151 41.0308C154.217 41.0308 155.082 40.17 155.082 39.1082C155.082 38.0463 154.217 37.1855 153.151 37.1855C152.084 37.1855 151.219 38.0463 151.219 39.1082C151.219 40.17 152.084 41.0308 153.151 41.0308Z\"\n      fill=\"#FFB991\"\n    />,\n    <path\n      d=\"M17.1505 103.031C18.2174 103.031 19.0823 102.17 19.0823 101.108C19.0823 100.046 18.2174 99.1855 17.1505 99.1855C16.0836 99.1855 15.2188 100.046 15.2188 101.108C15.2188 102.17 16.0836 103.031 17.1505 103.031Z\"\n      fill=\"#F9DE8F\"\n    />,\n    <path\n      d=\"M113.26 16.2183C114.327 16.2183 115.192 15.3575 115.192 14.2957C115.192 13.2338 114.327 12.373 113.26 12.373C112.193 12.373 111.328 13.2338 111.328 14.2957C111.328 15.3575 112.193 16.2183 113.26 16.2183Z\"\n      fill=\"#FFB991\"\n    />,\n    <path\n      d=\"M68.5099 13.2496C69.5768 13.2496 70.4417 12.3888 70.4417 11.3269C70.4417 10.2651 69.5768 9.4043 68.5099 9.4043C67.443 9.4043 66.5781 10.2651 66.5781 11.3269C66.5781 12.3888 67.443 13.2496 68.5099 13.2496Z\"\n      fill=\"#67D1D3\"\n    />,\n    <path\n      d=\"M22.5099 66.3726C23.5768 66.3726 24.4417 65.5118 24.4417 64.45C24.4417 63.3881 23.5768 62.5273 22.5099 62.5273C21.443 62.5273 20.5781 63.3881 20.5781 64.45C20.5781 65.5118 21.443 66.3726 22.5099 66.3726Z\"\n      fill=\"#FFB991\"\n    />,\n    <path\n      d=\"M62.6505 83.9566C63.7174 83.9566 64.5823 83.0958 64.5823 82.034C64.5823 80.9721 63.7174 80.1113 62.6505 80.1113C61.5836 80.1113 60.7188 80.9721 60.7188 82.034C60.7188 83.0958 61.5836 83.9566 62.6505 83.9566Z\"\n      fill=\"#FFB991\"\n    />,\n    <path\n      d=\"M30.4943 82.0367C31.5612 82.0367 32.4261 81.1759 32.4261 80.1141C32.4261 79.0522 31.5612 78.1914 30.4943 78.1914C29.4274 78.1914 28.5625 79.0522 28.5625 80.1141C28.5625 81.1759 29.4274 82.0367 30.4943 82.0367Z\"\n      fill=\"#67D1D3\"\n    />,\n    <path\n      d=\"M6.55679 46.525C7.62368 46.525 8.48857 45.6642 8.48857 44.6023C8.48857 43.5405 7.62368 42.6797 6.55679 42.6797C5.48989 42.6797 4.625 43.5405 4.625 44.6023C4.625 45.6642 5.48989 46.525 6.55679 46.525Z\"\n      fill=\"#67D1D3\"\n    />,\n    <path\n      d=\"M124.229 35.607C125.296 35.607 126.16 34.7462 126.16 33.6844C126.16 32.6225 125.296 31.7617 124.229 31.7617C123.162 31.7617 122.297 32.6225 122.297 33.6844C122.297 34.7462 123.162 35.607 124.229 35.607Z\"\n      fill=\"#67D1D3\"\n    />,\n    <path\n      d=\"M1.93179 17.0953C2.99868 17.0953 3.86357 16.2345 3.86357 15.1726C3.86357 14.1108 2.99868 13.25 1.93179 13.25C0.864891 13.25 0 14.1108 0 15.1726C0 16.2345 0.864891 17.0953 1.93179 17.0953Z\"\n      fill=\"#67D1D3\"\n    />,\n    <path\n      d=\"M89.3226 49.4874C92.0379 49.4874 94.239 47.2967 94.239 44.5943C94.239 41.8919 92.0379 39.7012 89.3226 39.7012C86.6074 39.7012 84.4062 41.8919 84.4062 44.5943C84.4062 47.2967 86.6074 49.4874 89.3226 49.4874Z\"\n      fill=\"#67D1D3\"\n    />,\n    <path\n      d=\"M94.1349 78.2828C95.2018 78.2828 96.0667 77.422 96.0667 76.3602C96.0667 75.2983 95.2018 74.4375 94.1349 74.4375C93.068 74.4375 92.2031 75.2983 92.2031 76.3602C92.2031 77.422 93.068 78.2828 94.1349 78.2828Z\"\n      fill=\"#67D1D3\"\n    />,\n    <path\n      d=\"M64.1349 118.283C65.2018 118.283 66.0667 117.422 66.0667 116.36C66.0667 115.298 65.2018 114.438 64.1349 114.438C63.068 114.438 62.2031 115.298 62.2031 116.36C62.2031 117.422 63.068 118.283 64.1349 118.283Z\"\n      fill=\"#67D1D3\"\n    />,\n    <path\n      d=\"M91.3148 113.999C94.0301 113.999 96.2312 111.808 96.2312 109.106C96.2312 106.404 94.0301 104.213 91.3148 104.213C88.5996 104.213 86.3984 106.404 86.3984 109.106C86.3984 111.808 88.5996 113.999 91.3148 113.999Z\"\n      fill=\"#FFB991\"\n    />,\n    <path\n      d=\"M121.229 67.3527C123.944 67.3527 126.145 65.1619 126.145 62.4595C126.145 59.7571 123.944 57.5664 121.229 57.5664C118.514 57.5664 116.312 59.7571 116.312 62.4595C116.312 65.1619 118.514 67.3527 121.229 67.3527Z\"\n      fill=\"#FFB991\"\n    />,\n    <path\n      d=\"M91.3224 3.84529C92.3893 3.84529 93.2542 2.9845 93.2542 1.92265C93.2542 0.860799 92.3893 0 91.3224 0C90.2555 0 89.3906 0.860799 89.3906 1.92265C89.3906 2.9845 90.2555 3.84529 91.3224 3.84529Z\"\n      fill=\"#F9DE8F\"\n    />,\n    <path\n      d=\"M182.072 13.7711C183.139 13.7711 184.004 12.9103 184.004 11.8484C184.004 10.7866 183.139 9.92578 182.072 9.92578C181.006 9.92578 180.141 10.7866 180.141 11.8484C180.141 12.9103 181.006 13.7711 182.072 13.7711Z\"\n      fill=\"#F9DE8F\"\n    />,\n    <path\n      d=\"M140.581 3.14296L142.579 7.17246C142.623 7.26059 142.707 7.32165 142.805 7.3357L147.273 7.98174C147.519 8.01736 147.617 8.31819 147.439 8.49099L144.206 11.6276C144.135 11.6962 144.103 11.7949 144.12 11.8918L144.883 16.3208C144.925 16.5646 144.668 16.7507 144.448 16.6355L140.451 14.5445C140.364 14.4989 140.259 14.4989 140.172 14.5445L136.176 16.6355C135.956 16.7505 135.699 16.5649 135.741 16.3208L136.504 11.8918C136.521 11.7949 136.489 11.6959 136.418 11.6276L133.185 8.49099C133.007 8.31839 133.105 8.01736 133.351 7.98174L137.819 7.3357C137.917 7.32165 138.001 7.26038 138.045 7.17246L140.043 3.14296C140.152 2.9211 140.47 2.9211 140.581 3.14296Z\"\n      fill=\"#F9DE8F\"\n    />,\n  ],\n})\n","import React from \"react\"\nimport { createIcon } from \"@chakra-ui/react\"\nimport { commonIconDefaultProps } from \"../utils\"\n\nexport const TrophyIcon = createIcon({\n  displayName: \"TrophyIcon\",\n  viewBox: \"0 0 28 28\",\n  defaultProps: {\n    width: \"28px\",\n    height: \"28px\",\n    ...commonIconDefaultProps,\n  },\n  path: [\n    <path d=\"M19.23 27.07C19.7101 27.07 20.0996 26.6804 20.0996 26.2004C20.0996 25.7204 19.7101 25.3308 19.23 25.3308H8.79502C8.31501 25.3308 7.92543 25.7204 7.92543 26.2004C7.92543 26.6804 8.31501 27.07 8.79502 27.07H19.23Z\" />,\n    <path d=\"M27.0563 7.06952V3.59118C27.0563 1.67722 25.4963 0.982422 24.4476 0.982422H3.57751C2.52879 0.982422 0.96875 1.67722 0.96875 3.59118V7.06952C0.96875 9.85567 2.73662 11.874 5.35755 12.2262C5.71234 16.0671 8.56197 19.1855 12.2734 19.9385V21.8525H10.5342C10.0559 21.8525 9.6646 22.2438 9.6646 22.7221V24.4612H18.3605V22.7221C18.3605 22.2438 17.9691 21.8525 17.4909 21.8525H15.7517V19.9385C19.4631 19.1846 22.3127 16.0671 22.6675 12.2262C25.2884 11.874 27.0563 9.85567 27.0563 7.06952ZM3.57751 2.72159H5.31668V10.4539C3.70968 10.1252 2.70792 8.87391 2.70792 7.06952V3.59118C2.70792 2.89116 3.18619 2.73203 3.57751 2.72159ZM24.4371 2.72159C24.8389 2.73203 25.3171 2.89116 25.3171 3.59118V7.06952C25.3171 8.87391 24.3154 10.1252 22.7084 10.4539V2.72159H24.4371ZM15.6624 7.33275L14.5257 5.0309C14.3266 4.62772 13.7514 4.62772 13.5526 5.0309L12.4159 7.33275C12.3368 7.49284 12.184 7.60378 12.0072 7.62941L9.46532 7.99855C9.02005 8.06305 8.84241 8.60973 9.16448 8.92362L11.0038 10.7153C11.1316 10.8399 11.19 11.0196 11.1598 11.1954L10.7256 13.7254C10.6495 14.1685 11.115 14.5066 11.5131 14.2973L13.7865 13.1029C13.9446 13.0199 14.1336 13.0199 14.2917 13.1029L16.5651 14.2973C16.9633 14.5064 17.4287 14.1685 17.3526 13.7254L16.9185 11.1954C16.8882 11.0196 16.9467 10.8399 17.0745 10.7153L18.9138 8.92362C19.2359 8.60994 19.0582 8.06326 18.613 7.99855L16.0711 7.62941C15.8943 7.60378 15.7415 7.49284 15.6624 7.33275Z\" />,\n  ],\n})\n","// Import data types\nimport { RawQuizzes } from \"../../types\"\n\n// Declare hash-map of quizzes based on slug key\nconst quizzes: RawQuizzes = {\n  \"what-is-ethereum\": {\n    title: \"what-is-ethereum\",\n    questions: [\"a001\", \"a002\", \"a003\", \"a004\", \"a005\"],\n  },\n  \"what-is-ether\": {\n    title: \"page-what-is-ethereum-what-is-ether\",\n    questions: [\"b001\", \"b002\", \"b003\", \"b004\"],\n  },\n  web3: {\n    title: \"web3-title\",\n    questions: [\"c001\", \"c002\", \"c003\", \"c004\", \"c005\"],\n  },\n  wallets: {\n    title: \"wallets\",\n    questions: [\"d001\", \"d002\", \"d003\", \"d004\"],\n  },\n  security: {\n    title: \"security\",\n    questions: [\"e001\", \"e002\", \"e003\", \"e004\", \"d003\"],\n  },\n  nfts: {\n    title: \"nfts\",\n    questions: [\"f001\", \"f002\", \"f003\", \"f004\", \"f005\"],\n  },\n  \"layer-2\": {\n    title: \"layer-2\",\n    questions: [\"g001\", \"g002\", \"g003\", \"g004\"],\n  },\n  merge: {\n    title: \"page-assets-merge\",\n    questions: [\"h001\", \"h002\", \"h003\", \"h004\", \"h005\"],\n  },\n}\n\nexport default quizzes\n","// Import data types\nimport { QuestionBank } from \"../../types\"\n\n// Declare hash map of question bank\nconst questionBank: QuestionBank = {\n  // What is Ethereum?\n  a001: {\n    prompt: \"a001-prompt\",\n    answers: [\n      {\n        id: \"a001-a\",\n        label: \"a001-a-label\",\n        explanation: \"a001-a-explanation\",\n      },\n      {\n        id: \"a001-b\",\n        label: \"a001-b-label\",\n        explanation: \"a001-b-explanation\",\n      },\n      {\n        id: \"a001-c\",\n        label: \"a001-c-label\",\n        explanation: \"a001-c-explanation\",\n      },\n      {\n        id: \"a001-d\",\n        label: \"a001-d-label\",\n        explanation: \"a001-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"a001-b\",\n  },\n  a002: {\n    prompt: \"a002-prompt\",\n    answers: [\n      {\n        id: \"a002-a\",\n        label: \"a002-a-label\",\n        explanation: \"a002-a-explanation\",\n      },\n      {\n        id: \"a002-b\",\n        label: \"a002-b-label\",\n        explanation: \"a002-b-explanation\",\n      },\n      {\n        id: \"a002-c\",\n        label: \"a002-c-label\",\n        explanation: \"a002-c-explanation\",\n      },\n      {\n        id: \"a002-d\",\n        label: \"a002-d-label\",\n        explanation: \"a002-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"a002-a\",\n  },\n  a003: {\n    prompt: \"a003-prompt\",\n    answers: [\n      {\n        id: \"a003-a\",\n        label: \"a003-a-label\",\n        explanation: \"a003-a-explanation\",\n      },\n      {\n        id: \"a003-b\",\n        label: \"a003-b-label\",\n        explanation: \"a003-b-explanation\",\n      },\n      {\n        id: \"a003-c\",\n        label: \"a003-c-label\",\n        explanation: \"a003-c-explanation\",\n      },\n      {\n        id: \"a003-d\",\n        label: \"a003-d-label\",\n        explanation: \"a003-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"a003-d\",\n  },\n  a004: {\n    prompt: \"a004-prompt\",\n    answers: [\n      {\n        id: \"a004-a\",\n        label: \"a004-a-label\",\n        explanation: \"a004-explanation\",\n      },\n      {\n        id: \"a004-b\",\n        label: \"a004-b-label\",\n        explanation: \"a004-explanation\",\n      },\n      {\n        id: \"a004-c\",\n        label: \"a004-c-label\",\n        explanation: \"a004-explanation\",\n      },\n      {\n        id: \"a004-d\",\n        label: \"a004-d-label\",\n        explanation: \"a004-explanation\",\n      },\n    ],\n    correctAnswerId: \"a004-a\",\n  },\n  a005: {\n    prompt: \"a005-prompt\",\n    answers: [\n      {\n        id: \"a005-a\",\n        label: \"a005-a-label\",\n        explanation: \"a005-a-explanation\",\n      },\n      {\n        id: \"a005-b\",\n        label: \"a005-b-label\",\n        explanation: \"a005-b-explanation\",\n      },\n      {\n        id: \"a005-c\",\n        label: \"a005-c-label\",\n        explanation: \"a005-c-explanation\",\n      },\n      {\n        id: \"a005-d\",\n        label: \"a005-d-label\",\n        explanation: \"a005-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"a005-d\",\n  },\n  // What is ether?\n  b001: {\n    prompt: \"b001-prompt\",\n    answers: [\n      {\n        id: \"b001-a\",\n        label: \"b001-a-label\",\n        explanation: \"b001-a-explanation\",\n      },\n      {\n        id: \"b001-b\",\n        label: \"b001-b-label\",\n        explanation: \"b001-b-explanation\",\n      },\n      {\n        id: \"b001-c\",\n        label: \"b001-c-label\",\n        explanation: \"b001-c-explanation\",\n      },\n      {\n        id: \"b001-d\",\n        label: \"b001-d-label\",\n        explanation: \"b001-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"b001-c\",\n  },\n  b002: {\n    prompt: \"b002-prompt\",\n    answers: [\n      {\n        id: \"b002-a\",\n        label: \"b002-a-label\",\n        explanation: \"b002-a-explanation\",\n      },\n      {\n        id: \"b002-b\",\n        label: \"b002-b-label\",\n        explanation: \"b002-b-explanation\",\n      },\n      {\n        id: \"b002-c\",\n        label: \"b002-c-label\",\n        explanation: \"b002-c-explanation\",\n      },\n      {\n        id: \"b002-d\",\n        label: \"b002-d-label\",\n        explanation: \"b002-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"b002-b\",\n  },\n  b003: {\n    prompt: \"b003-prompt\",\n    answers: [\n      {\n        id: \"b003-a\",\n        label: \"b003-a-label\",\n        explanation: \"b003-a-explanation\",\n      },\n      {\n        id: \"b003-b\",\n        label: \"b003-b-label\",\n        explanation: \"b003-b-explanation\",\n      },\n      {\n        id: \"b003-c\",\n        label: \"b003-c-label\",\n        explanation: \"b003-c-explanation\",\n      },\n      {\n        id: \"b003-d\",\n        label: \"b003-d-label\",\n        explanation: \"b003-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"b003-b\",\n  },\n  b004: {\n    prompt: \"b004-prompt\",\n    answers: [\n      {\n        id: \"b004-a\",\n        label: \"b004-a-label\",\n        explanation: \"b004-a-explanation\",\n      },\n      {\n        id: \"b004-b\",\n        label: \"b004-b-label\",\n        explanation: \"b004-b-explanation\",\n      },\n      {\n        id: \"b004-c\",\n        label: \"b004-c-label\",\n        explanation: \"b004-c-explanation\",\n      },\n      {\n        id: \"b004-d\",\n        label: \"b004-d-label\",\n        explanation: \"b004-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"b004-d\",\n  },\n  // Web3\n  c001: {\n    prompt: \"c001-prompt\",\n    answers: [\n      {\n        id: \"c001-a\",\n        label: \"c001-a-label\",\n        explanation: \"c001-a-explanation\",\n      },\n      {\n        id: \"c001-b\",\n        label: \"c001-b-label\",\n        explanation: \"c001-b-explanation\",\n      },\n      {\n        id: \"c001-c\",\n        label: \"c001-c-label\",\n        explanation: \"c001-c-explanation\",\n      },\n      {\n        id: \"c001-d\",\n        label: \"c001-d-label\",\n        explanation: \"c001-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"c001-b\",\n  },\n  c002: {\n    prompt: \"c002-prompt\",\n    answers: [\n      {\n        id: \"c002-a\",\n        label: \"c002-a-label\",\n        explanation: \"c002-a-explanation\",\n      },\n      {\n        id: \"c002-b\",\n        label: \"c002-b-label\",\n        explanation: \"c002-b-explanation\",\n      },\n      {\n        id: \"c002-c\",\n        label: \"c002-c-label\",\n        explanation: \"c002-c-explanation\",\n      },\n      {\n        id: \"c002-d\",\n        label: \"c002-d-label\",\n        explanation: \"c002-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"c002-c\",\n  },\n  c003: {\n    prompt: \"c003-prompt\",\n    answers: [\n      {\n        id: \"c003-a\",\n        label: \"c003-a-label\",\n        explanation: \"c003-a-explanation\",\n      },\n      {\n        id: \"c003-b\",\n        label: \"c003-b-label\",\n        explanation: \"c003-b-explanation\",\n      },\n      {\n        id: \"c003-c\",\n        label: \"c003-c-label\",\n        explanation: \"c003-c-explanation\",\n      },\n      {\n        id: \"c003-d\",\n        label: \"c003-d-label\",\n        explanation: \"c003-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"c003-c\",\n  },\n  c004: {\n    prompt: \"c004-prompt\",\n    answers: [\n      {\n        id: \"c004-a\",\n        label: \"c004-a-label\",\n        explanation: \"c004-a-explanation\",\n      },\n      {\n        id: \"c004-b\",\n        label: \"c004-b-label\",\n        explanation: \"c004-b-explanation\",\n      },\n      {\n        id: \"c004-c\",\n        label: \"c004-c-label\",\n        explanation: \"c004-c-explanation\",\n      },\n      {\n        id: \"c004-d\",\n        label: \"c004-d-label\",\n        explanation: \"c004-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"c004-a\",\n  },\n  c005: {\n    prompt: \"c005-prompt\",\n    answers: [\n      {\n        id: \"c005-a\",\n        label: \"c005-a-label\",\n        explanation: \"c005-a-explanation\",\n      },\n      {\n        id: \"c005-b\",\n        label: \"c005-b-label\",\n        explanation: \"c005-b-explanation\",\n      },\n      {\n        id: \"c005-c\",\n        label: \"c005-c-label\",\n        explanation: \"c005-c-explanation\",\n      },\n      {\n        id: \"c005-d\",\n        label: \"c005-d-label\",\n        explanation: \"c005-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"c005-c\",\n  },\n  // Wallets\n  d001: {\n    prompt: \"d001-prompt\",\n    answers: [\n      {\n        id: \"d001-a\",\n        label: \"d001-a-label\",\n        explanation: \"d001-a-explanation\",\n      },\n      {\n        id: \"d001-b\",\n        label: \"d001-b-label\",\n        explanation: \"d001-b-explanation\",\n      },\n      {\n        id: \"d001-c\",\n        label: \"d001-c-label\",\n        explanation: \"d001-c-explanation\",\n      },\n      {\n        id: \"d001-d\",\n        label: \"d001-d-label\",\n        explanation: \"d001-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"d001-b\",\n  },\n  d002: {\n    prompt: \"d002-prompt\",\n    answers: [\n      {\n        id: \"d002-a\",\n        label: \"d002-a-label\",\n        explanation: \"d002-a-explanation\",\n      },\n      {\n        id: \"d002-b\",\n        label: \"d002-b-label\",\n        explanation: \"d002-b-explanation\",\n      },\n      {\n        id: \"d002-c\",\n        label: \"d002-c-label\",\n        explanation: \"d002-c-explanation\",\n      },\n      {\n        id: \"d002-d\",\n        label: \"d002-d-label\",\n        explanation: \"d002-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"d002-c\",\n  },\n  d003: {\n    prompt: \"d003-prompt\",\n    answers: [\n      {\n        id: \"d003-a\",\n        label: \"d003-a-label\",\n        explanation: \"d003-a-explanation\",\n      },\n      {\n        id: \"d003-b\",\n        label: \"d003-b-label\",\n        explanation: \"d003-b-explanation\",\n      },\n      {\n        id: \"d003-c\",\n        label: \"d003-c-label\",\n        explanation: \"d003-c-explanation\",\n      },\n      {\n        id: \"d003-d\",\n        label: \"d003-d-label\",\n        explanation: \"d003-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"d003-d\",\n  },\n  d004: {\n    prompt: \"d004-prompt\",\n    answers: [\n      {\n        id: \"d004-a\",\n        label: \"d004-a-label\",\n        explanation: \"d004-a-explanation\",\n      },\n      {\n        id: \"d004-b\",\n        label: \"d004-b-label\",\n        explanation: \"d004-b-explanation\",\n      },\n    ],\n    correctAnswerId: \"d004-b\",\n  },\n  // Security\n  e001: {\n    prompt: \"e001-prompt\",\n    answers: [\n      {\n        id: \"e001-a\",\n        label: \"e001-a-label\",\n        explanation: \"e001-a-explanation\",\n      },\n      {\n        id: \"e001-b\",\n        label: \"e001-b-label\",\n        explanation: \"e001-b-explanation\",\n      },\n      {\n        id: \"e001-c\",\n        label: \"e001-c-label\",\n        explanation: \"e001-c-explanation\",\n      },\n      {\n        id: \"e001-d\",\n        label: \"e001-d-label\",\n        explanation: \"e001-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"e001-d\",\n  },\n  e002: {\n    prompt: \"e002-prompt\",\n    answers: [\n      {\n        id: \"e002-a\",\n        label: \"e002-a-label\",\n        explanation: \"e002-a-explanation\",\n      },\n      {\n        id: \"e002-b\",\n        label: \"e002-b-label\",\n        explanation: \"e002-b-explanation\",\n      },\n    ],\n    correctAnswerId: \"e002-b\",\n  },\n  e003: {\n    prompt: \"e003-prompt\",\n    answers: [\n      {\n        id: \"e003-a\",\n        label: \"e003-a-label\",\n        explanation: \"e003-a-explanation\",\n      },\n      {\n        id: \"e003-b\",\n        label: \"e003-b-label\",\n        explanation: \"e003-b-explanation\",\n      },\n      {\n        id: \"e003-c\",\n        label: \"e003-c-label\",\n        explanation: \"e003-c-explanation\",\n      },\n      {\n        id: \"e003-d\",\n        label: \"e003-d-label\",\n        explanation: \"e003-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"e003-d\",\n  },\n  e004: {\n    prompt: \"e004-prompt\",\n    answers: [\n      {\n        id: \"e004-a\",\n        label: \"e004-a-label\",\n        explanation: \"e004-a-explanation\",\n      },\n      {\n        id: \"e004-b\",\n        label: \"e004-b-label\",\n        explanation: \"e004-b-explanation\",\n      },\n    ],\n    correctAnswerId: \"e004-b\",\n  },\n  // NFTs\n  f001: {\n    prompt: \"f001-prompt\",\n    answers: [\n      {\n        id: \"f001-a\",\n        label: \"f001-a-label\",\n        explanation: \"f001-a-explanation\", // with an owner\n      },\n      {\n        id: \"f001-b\",\n        label: \"f001-b-label\",\n        explanation: \"f001-b-explanation\",\n      },\n      {\n        id: \"f001-c\",\n        label: \"f001-c-label\",\n        explanation: \"f001-c-explanation\",\n      },\n      {\n        id: \"f001-d\",\n        label: \"f001-d-label\",\n        explanation: \"f001-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"f001-a\",\n  },\n  f002: {\n    prompt: \"f002-prompt\",\n    answers: [\n      {\n        id: \"f002-a\",\n        label: \"f002-a-label\",\n        explanation: \"f002-a-explanation\",\n      },\n      {\n        id: \"f002-b\",\n        label: \"f002-b-label\",\n        explanation: \"f002-b-explanation\",\n      },\n    ],\n    correctAnswerId: \"f002-b\",\n  },\n  f003: {\n    prompt: \"f003-prompt\",\n    answers: [\n      {\n        id: \"f003-a\",\n        label: \"f003-a-label\",\n        explanation: \"f003-a-explanation\",\n      },\n      {\n        id: \"f003-b\",\n        label: \"f003-b-label\",\n        explanation: \"f003-b-explanation\",\n      },\n      {\n        id: \"f003-c\",\n        label: \"f003-c-label\",\n        explanation: \"f003-c-explanation\",\n      },\n      {\n        id: \"f003-d\",\n        label: \"f003-d-label\",\n        explanation: \"f003-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"f003-b\",\n  },\n  f004: {\n    prompt: \"f004-prompt\",\n    answers: [\n      {\n        id: \"f004-a\",\n        label: \"f004-a-label\",\n        explanation: \"f004-a-explanation\",\n      },\n      {\n        id: \"f004-b\",\n        label: \"f004-b-label\",\n        explanation: \"f004-b-explanation\",\n      },\n      {\n        id: \"f004-c\",\n        label: \"f004-c-label\",\n        explanation: \"f004-c-explanation\",\n      },\n      {\n        id: \"f004-d\",\n        label: \"f004-d-label\",\n        explanation: \"f004-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"f004-c\",\n  },\n  f005: {\n    prompt: \"f005-prompt\",\n    answers: [\n      {\n        id: \"f005-a\",\n        label: \"f005-a-label\",\n        explanation: \"f005-a-explanation\",\n      },\n      {\n        id: \"f005-b\",\n        label: \"f005-b-label\",\n        explanation: \"f005-b-explanation\",\n      },\n    ],\n    correctAnswerId: \"f005-b\",\n  },\n  // Layer 2\n  g001: {\n    prompt: \"g001-prompt\",\n    answers: [\n      {\n        id: \"g001-a\",\n        label: \"g001-a-label\",\n        explanation: \"g001-a-explanation\",\n      },\n      {\n        id: \"g001-b\",\n        label: \"g001-b-label\",\n        explanation: \"g001-b-explanation\",\n      },\n      {\n        id: \"g001-c\",\n        label: \"g001-c-label\",\n        explanation: \"g001-c-explanation\",\n      },\n      {\n        id: \"g001-d\",\n        label: \"g001-d-label\",\n        explanation: \"g001-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"g001-a\",\n  },\n  g002: {\n    prompt: \"g002-prompt\",\n    answers: [\n      {\n        id: \"g002-a\",\n        label: \"g002-a-label\",\n        explanation: \"g002-a-explanation\",\n      },\n      {\n        id: \"g002-b\",\n        label: \"g002-b-label\",\n        explanation: \"g002-b-explanation\",\n      },\n      {\n        id: \"g002-c\",\n        label: \"g002-c-label\",\n        explanation: \"g002-c-explanation\",\n      },\n      {\n        id: \"g002-d\",\n        label: \"g002-d-label\",\n        explanation: \"g002-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"g002-d\",\n  },\n  g003: {\n    prompt: \"g003-prompt\",\n    answers: [\n      {\n        id: \"g003-a\",\n        label: \"g003-a-label\",\n        explanation: \"g003-a-explanation\",\n      },\n      {\n        id: \"g003-b\",\n        label: \"g003-b-label\",\n        explanation: \"g003-b-explanation\",\n      },\n      {\n        id: \"g003-c\",\n        label: \"g003-c-label\",\n        explanation: \"g003-c-explanation\",\n      },\n      {\n        id: \"g003-d\",\n        label: \"g003-d-label\",\n        explanation: \"g003-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"g003-d\",\n  },\n  g004: {\n    prompt: \"g004-prompt\",\n    answers: [\n      {\n        id: \"g004-a\",\n        label: \"g004-a-label\",\n        explanation: \"g004-a-explanation\",\n      },\n      {\n        id: \"g004-b\",\n        label: \"g004-b-label\",\n        explanation: \"g004-b-explanation\",\n      },\n      {\n        id: \"g004-c\",\n        label: \"g004-c-label\",\n        explanation: \"g004-c-explanation\",\n      },\n      {\n        id: \"g004-d\",\n        label: \"g004-d-label\",\n        explanation: \"g004-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"g004-d\",\n  },\n  // The Merge\n  h001: {\n    prompt: \"h001-prompt\",\n    answers: [\n      {\n        id: \"h001-a\",\n        label: \"h001-a-label\",\n        explanation: \"h001-a-explanation\",\n      },\n      {\n        id: \"h001-b\",\n        label: \"h001-b-label\",\n        explanation: \"h001-b-explanation\",\n      },\n      {\n        id: \"h001-c\",\n        label: \"h001-c-label\",\n        explanation: \"h001-c-explanation\",\n      },\n      {\n        id: \"h001-d\",\n        label: \"h001-d-label\",\n        explanation: \"h001-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"h001-b\",\n  },\n  h002: {\n    prompt: \"h002-prompt\",\n    answers: [\n      {\n        id: \"h002-a\",\n        label: \"h002-a-label\",\n        explanation: \"h002-a-explanation\",\n      },\n      {\n        id: \"h002-b\",\n        label: \"h002-b-label\",\n        explanation: \"h002-b-explanation\",\n      },\n      {\n        id: \"h002-c\",\n        label: \"h002-c-label\",\n        explanation: \"h002-c-explanation\",\n      },\n      {\n        id: \"h002-d\",\n        label: \"h002-d-label\",\n        explanation: \"h002-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"h002-d\",\n  },\n  h003: {\n    prompt: \"h003-prompt\",\n    answers: [\n      {\n        id: \"h003-a\",\n        label: \"h003-a-label\",\n        explanation: \"h003-a-explanation\",\n      },\n      {\n        id: \"h003-b\",\n        label: \"h003-b-label\",\n        explanation: \"h003-b-explanation\",\n      },\n      {\n        id: \"h003-c\",\n        label: \"h003-c-label\",\n        explanation: \"h003-c-explanation\",\n      },\n      {\n        id: \"h003-d\",\n        label: \"h003-d-label\",\n        explanation: \"h003-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"h003-a\",\n  },\n  h004: {\n    prompt: \"h004-prompt\",\n    answers: [\n      {\n        id: \"h004-a\",\n        label: \"h004-a-label\",\n        explanation: \"h004-a-explanation\",\n      },\n      {\n        id: \"h004-b\",\n        label: \"h004-b-label\",\n        explanation: \"h004-b-explanation\",\n      },\n    ],\n    correctAnswerId: \"h004-b\",\n  },\n  h005: {\n    prompt: \"h005-prompt\",\n    answers: [\n      {\n        id: \"h005-a\",\n        label: \"h005-a-label\",\n        explanation: \"h005-a-explanation\",\n      },\n      {\n        id: \"h005-b\",\n        label: \"h005-b-label\",\n        explanation: \"h005-b-explanation\",\n      },\n      {\n        id: \"h005-c\",\n        label: \"h005-c-label\",\n        explanation: \"h005-c-explanation\",\n      },\n      {\n        id: \"h005-d\",\n        label: \"h005-d-label\",\n        explanation: \"h005-d-explanation\",\n      },\n    ],\n    correctAnswerId: \"h005-b\",\n  },\n}\n\nexport default questionBank\n","// Import libraries\nimport React, { useEffect, useState, useMemo, useCallback } from \"react\"\nimport {\n  Box,\n  Center,\n  Circle,\n  Container,\n  Flex,\n  Heading,\n  Icon,\n  Text,\n  Spinner,\n} from \"@chakra-ui/react\"\nimport { shuffle } from \"lodash\"\nimport { FaTwitter } from \"react-icons/fa\"\nimport { useIntl } from \"react-intl\"\n\n// Import components\nimport Button from \"../Button\"\nimport QuizRadioGroup from \"./QuizRadioGroup\"\nimport QuizSummary from \"./QuizSummary\"\nimport Translation from \"../Translation\"\n\n// Import SVGs\nimport {\n  CorrectIcon,\n  IncorrectIcon,\n  StarConfettiIcon,\n  TrophyIcon,\n} from \"../icons/quiz\"\n\n// Import data\nimport allQuizData from \"../../data/quizzes\"\nimport questionBank from \"../../data/quizzes/questionBank\"\n\n// Import utilities\nimport { trackCustomEvent } from \"../../utils/matomo\"\nimport { translateMessageId } from \"../../utils/translations\"\n\n// Import types\nimport { AnswerChoice, RawQuiz, Quiz, RawQuestion, Question } from \"../../types\"\n\n// Import constants\nimport { PASSING_QUIZ_SCORE } from \"../../constants\"\n\n// Constants\nconst PROGRESS_BAR_GAP = \"4px\"\n\n// Interfaces\nexport interface IProps {\n  quizKey?: string\n  maxQuestions?: number\n}\n\n// Component\nconst QuizWidget: React.FC<IProps> = ({ quizKey, maxQuestions }) => {\n  const intl = useIntl()\n  const [quizData, setQuizData] = useState<Quiz | null>(null)\n  const [userQuizProgress, setUserQuizProgress] = useState<Array<AnswerChoice>>(\n    []\n  )\n  const [showAnswer, setShowAnswer] = useState<boolean>(false)\n  const [currentQuestionAnswerChoice, setCurrentQuestionAnswerChoice] =\n    useState<AnswerChoice | null>(null)\n  const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null)\n\n  const initialize = (): void => {\n    // Reset state\n    setQuizData(null)\n    setCurrentQuestionAnswerChoice(null)\n    setUserQuizProgress([])\n    setShowAnswer(false)\n    setSelectedAnswer(null)\n\n    // Get quiz key\n    const currentQuizKey =\n      quizKey ||\n      Object.keys(allQuizData).filter((quizUri) =>\n        window?.location.href.includes(quizUri)\n      )[0] ||\n      null\n\n    if (!currentQuizKey) return\n\n    // Get quiz data from key, shuffle, then truncate if necessary\n    const rawQuiz: RawQuiz = allQuizData[currentQuizKey]\n    const questions: Array<Question> = rawQuiz.questions.map((id) => {\n      const rawQuestion: RawQuestion = questionBank[id]\n      return { id, ...rawQuestion }\n    })\n    const shuffledQuestions = shuffle(questions)\n    const trimmedQuestions = maxQuestions\n      ? shuffledQuestions.slice(0, maxQuestions)\n      : shuffledQuestions\n    const quiz: Quiz = {\n      title: translateMessageId(rawQuiz.title, intl),\n      questions: trimmedQuestions,\n    }\n    setQuizData(quiz)\n  }\n  useEffect(initialize, [quizKey])\n\n  // Memoized values\n  const currentQuestionIndex = useMemo<number>(\n    () => userQuizProgress.length || 0,\n    [userQuizProgress]\n  )\n\n  const showResults = useMemo<boolean>(\n    () => userQuizProgress.length === quizData?.questions.length,\n    [userQuizProgress, quizData]\n  )\n\n  const progressBarBackground = useCallback(\n    (index: number): string => {\n      if (\n        (showAnswer &&\n          index === currentQuestionIndex &&\n          currentQuestionAnswerChoice?.isCorrect) ||\n        userQuizProgress[index]?.isCorrect\n      )\n        return \"success\"\n      if (\n        (showAnswer &&\n          index === currentQuestionIndex &&\n          !currentQuestionAnswerChoice?.isCorrect) ||\n        (userQuizProgress[index] && !userQuizProgress[index].isCorrect)\n      )\n        return \"error\"\n      if (index === currentQuestionIndex) return \"gray.400\"\n      return \"gray.500\"\n    },\n    [\n      showAnswer,\n      currentQuestionIndex,\n      currentQuestionAnswerChoice,\n      userQuizProgress,\n    ]\n  )\n\n  const correctCount = useMemo<number>(\n    () => userQuizProgress.filter(({ isCorrect }) => isCorrect).length,\n    [userQuizProgress]\n  )\n\n  const ratioCorrect = useMemo<number>(\n    () => (!quizData ? 0 : correctCount / quizData.questions.length),\n    [quizData, correctCount]\n  )\n\n  const score = useMemo<number>(\n    () => Math.floor(ratioCorrect * 100),\n    [ratioCorrect]\n  )\n\n  const isPassingScore = useMemo<boolean>(\n    () => score > PASSING_QUIZ_SCORE,\n    [score]\n  )\n\n  const showConfetti = useMemo<boolean>(\n    () => !!quizData && showResults && isPassingScore,\n    [quizData, showResults, isPassingScore]\n  )\n\n  // Handlers\n  const handleSelectAnswerChoice = (answerId: string): void => {\n    const isCorrect =\n      answerId === quizData?.questions[currentQuestionIndex].correctAnswerId\n    setCurrentQuestionAnswerChoice({ answerId, isCorrect })\n  }\n\n  const handleSelection = (answerId: string): void => {\n    setSelectedAnswer(answerId)\n    handleSelectAnswerChoice(answerId)\n  }\n\n  const handleShowAnswer = (questionId: string, answer: AnswerChoice): void => {\n    trackCustomEvent({\n      eventCategory: \"Quiz widget\",\n      eventAction: \"Question answered\",\n      eventName: `QID: ${questionId}`,\n      eventValue: answer.isCorrect ? \"1\" : \"0\",\n    })\n    setShowAnswer(true)\n  }\n\n  const handleRetryQuestion = (): void => {\n    trackCustomEvent({\n      eventCategory: \"Quiz widget\",\n      eventAction: \"Other\",\n      eventName: \"Retry question\",\n    })\n    setCurrentQuestionAnswerChoice(null)\n    setSelectedAnswer(null)\n    setShowAnswer(false)\n  }\n\n  const handleContinue = (): void => {\n    if (!currentQuestionAnswerChoice) return\n    setUserQuizProgress((prev) => [...prev, currentQuestionAnswerChoice])\n    setCurrentQuestionAnswerChoice(null)\n    setShowAnswer(false)\n    if (showResults) {\n      trackCustomEvent({\n        eventCategory: \"Quiz widget\",\n        eventAction: \"Other\",\n        eventName: \"Submit results\",\n        eventValue: `${score}%`,\n      })\n    }\n  }\n\n  const handleShare = (): void => {\n    if (!quizData || !window) return\n    trackCustomEvent({\n      eventCategory: \"Quiz widget\",\n      eventAction: \"Other\",\n      eventName: \"Share results\",\n    })\n    const url = `https://ethereum.org${window.location.pathname}%23quiz` // %23 is # character, needs to added to already encoded tweet string\n    const tweet =\n      encodeURI(\n        `I just took the \"${quizData.title}\" quiz on ethereum.org and scored ${correctCount} out of ${quizData.questions.length}! Try it yourself at `\n      ) + url\n    window.open(\n      `https://twitter.com/intent/tweet?text=${tweet}&hashtags=${\"ethereumquiz\"}`\n    )\n  }\n\n  const AnswerIcon = () => {\n    const commonProps = {\n      color: \"neutral\",\n    }\n\n    if (!showAnswer) {\n      return <TrophyIcon {...commonProps} />\n    }\n\n    return currentQuestionAnswerChoice?.isCorrect ? (\n      <CorrectIcon {...commonProps} />\n    ) : (\n      <IncorrectIcon {...commonProps} />\n    )\n  }\n\n  // TODO: Allow user to submit quiz for storage\n  // TODO: Fix a11y keyboard tab stops\n\n  // Render QuizWidget component\n  return (\n    <Flex width=\"full\" direction=\"column\" alignItems=\"center\">\n      <Heading\n        as=\"h2\"\n        mb={12}\n        textAlign=\"center\"\n        scrollBehavior=\"smooth\"\n        scrollMarginTop={24}\n        id=\"quiz\"\n      >\n        <Translation id=\"test-your-knowledge\" />\n      </Heading>\n      <Box\n        w=\"full\"\n        maxW=\"600px\"\n        bg={\n          !showAnswer\n            ? \"neutral\"\n            : currentQuestionAnswerChoice?.isCorrect\n            ? \"successNeutral\"\n            : \"errorNeutral\"\n        }\n        borderRadius=\"base\"\n        boxShadow=\"drop\"\n        pt={12}\n        pb={[8, 12]}\n        px={[8, 12, 16]}\n        position=\"relative\"\n        isolation=\"isolate\"\n      >\n        {showConfetti && (\n          <>\n            <StarConfettiIcon\n              fontSize=\"184px\"\n              position=\"absolute\"\n              zIndex={-1}\n              top={-8}\n              left={0}\n            />\n            <StarConfettiIcon\n              fontSize=\"184px\"\n              position=\"absolute\"\n              zIndex={-1}\n              top={-8}\n              right={0}\n              transform=\"scaleX(-100%)\"\n            />\n          </>\n        )}\n        {/* Answer Icon - defaults to TrophyIcon */}\n        <Circle\n          size=\"50px\"\n          bg={\n            !showAnswer\n              ? \"primary\"\n              : currentQuestionAnswerChoice?.isCorrect\n              ? \"success\"\n              : \"error\"\n          }\n          position=\"absolute\"\n          top={0}\n          left=\"50%\"\n          transform=\"translateX(-50%) translateY(-50%)\"\n        >\n          <AnswerIcon />\n        </Circle>\n        {quizData ? (\n          <>\n            <Center>\n              <Text fontStyle=\"normal\" fontWeight=\"700\" color=\"primaryHover\">\n                {quizData.title}\n              </Text>\n            </Center>\n            {/* Progress bar */}\n            <Center gap={PROGRESS_BAR_GAP} marginBottom={6}>\n              {quizData.questions.map(({ id }, index) => {\n                /* Calculate width percent based on number of questions */\n                const width = `calc(${Math.floor(\n                  100 / quizData.questions.length\n                )}% - ${PROGRESS_BAR_GAP})`\n                return (\n                  <Container\n                    key={id}\n                    bg={progressBarBackground(index)}\n                    h=\"4px\"\n                    w={width}\n                    maxW={`min(${width}, 2rem)`}\n                    marginInline={0}\n                    p={0}\n                  />\n                )\n              })}\n            </Center>\n            <Center>\n              {showResults ? (\n                <QuizSummary\n                  correctCount={correctCount}\n                  isPassingScore={isPassingScore}\n                  questionCount={quizData.questions.length}\n                  ratioCorrect={ratioCorrect}\n                />\n              ) : (\n                <QuizRadioGroup\n                  questionData={quizData.questions[currentQuestionIndex]}\n                  showAnswer={showAnswer}\n                  handleSelection={handleSelection}\n                  selectedAnswer={selectedAnswer}\n                />\n              )}\n            </Center>\n            <Center mt={[8, 12]}>\n              <Flex\n                gap={6}\n                flex={{ base: 1, sm: \"unset\" }}\n                direction={{ base: \"column\", sm: \"row\" }}\n                sx={{\n                  button: { width: { base: \"100%\", sm: \"fit-content\" } },\n                }}\n              >\n                {showAnswer &&\n                  currentQuestionAnswerChoice &&\n                  !currentQuestionAnswerChoice.isCorrect && (\n                    <Button\n                      onClick={handleRetryQuestion}\n                      variant=\"outline-color\"\n                    >\n                      <Translation id=\"try-again\" />\n                    </Button>\n                  )}\n                {showResults ? (\n                  <>\n                    <Button\n                      leftIcon={<Icon as={FaTwitter} />}\n                      onClick={handleShare}\n                    >\n                      <Translation id=\"share-results\" />\n                    </Button>\n                    {score < 100 && (\n                      <Button onClick={initialize}>\n                        <Translation id=\"try-again\" />\n                      </Button>\n                    )}\n                  </>\n                ) : showAnswer ? (\n                  <Button onClick={handleContinue}>\n                    {userQuizProgress.length === quizData.questions.length - 1\n                      ? translateMessageId(\"see-results\", intl)\n                      : translateMessageId(\"next-question\", intl)}\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={() =>\n                      handleShowAnswer(\n                        quizData.questions[currentQuestionIndex].id,\n                        currentQuestionAnswerChoice!\n                      )\n                    }\n                    disabled={!currentQuestionAnswerChoice}\n                  >\n                    <Translation id=\"submit-answer\" />\n                  </Button>\n                )}\n              </Flex>\n            </Center>\n          </>\n        ) : (\n          <Flex justify=\"center\">\n            <Spinner />\n          </Flex>\n        )}\n      </Box>\n    </Flex>\n  )\n}\n\nexport default QuizWidget\n","import { IconProps } from \"@chakra-ui/react\"\n\nexport const commonIconDefaultProps: IconProps = {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  fill: \"currentColor\",\n}\n","export const GATSBY_FUNCTIONS_PATH = process.env.GATSBY_FUNCTIONS_PATH || \"/api\"\nexport const PASSING_QUIZ_SCORE = 65\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["getBreakpoint","theme","value","_a","breakpoints","useQuery","props","breakpoint","below","above","bpBelow","bpAbove","query","useMediaQuery","options","ssr","fallback","env","queries","Array","isArray","fallbackValues","filter","v","setValue","useState","map","query2","index","media","matches","window","matchMedia","useEffect","mql","handler","evt","prev","slice","item","forEach","mql2","addListener","addEventListener","removeListener","removeEventListener","Visibility","hide","children","show","Show","Hide","displayName","_ref","questionData","showAnswer","handleSelection","selectedAnswer","intl","useIntl","getRadioProps","getRootProps","useRadioGroup","onChange","prompt","answers","correctAnswerId","explanation","useMemo","_ref2","id","isSelectedCorrect","CustomRadio","_ref3","label","radioProps","state","getInputProps","getCheckboxProps","htmlProps","useRadio","buttonBg","isChecked","___EmotionJSX","chakra","cursor","w","hidden","Flex","p","alignItems","bg","color","borderRadius","_hover","boxShadow","outline","Circle","size","_groupHover","me","Text","m","fontWeight","fontSize","String","fromCharCode","toUpperCase","direction","mb","translateMessageId","gap","display","key","Box","mt","Translation","correctCount","isPassingScore","questionCount","ratioCorrect","locale","largerThanMobile","valueStyles","labelStyles","textAlign","justify","mx","sx","borderEnd","borderColor","div","flexDirection","overflowX","num","Intl","NumberFormat","getLocaleForNumberFormat","style","maximumFractionDigits","format","numberToPercent","CorrectIcon","createIcon","viewBox","defaultProps","width","height","d","IncorrectIcon","StarConfettiIcon","path","fill","TrophyIcon","commonIconDefaultProps","title","questions","web3","wallets","security","nfts","merge","a001","a002","a003","a004","a005","b001","b002","b003","b004","c001","c002","c003","c004","c005","d001","d002","d003","d004","e001","e002","e003","e004","f001","f002","f003","f004","f005","g001","g002","g003","g004","h001","h002","h003","h004","h005","quizKey","maxQuestions","quizData","setQuizData","userQuizProgress","setUserQuizProgress","setShowAnswer","currentQuestionAnswerChoice","setCurrentQuestionAnswerChoice","setSelectedAnswer","initialize","currentQuizKey","Object","keys","allQuizData","quizUri","_window","location","href","includes","rawQuiz","questionBank","shuffledQuestions","_shuffle","trimmedQuestions","quiz","currentQuestionIndex","length","showResults","progressBarBackground","useCallback","isCorrect","_userQuizProgress$ind","score","Math","floor","PASSING_QUIZ_SCORE","showConfetti","Heading","as","scrollBehavior","scrollMarginTop","maxW","pt","pb","px","position","isolation","zIndex","top","left","right","transform","commonProps","Center","fontStyle","marginBottom","Container","h","marginInline","QuizSummary","QuizRadioGroup","answerId","handleSelectAnswerChoice","flex","base","sm","button","Button","onClick","trackCustomEvent","eventCategory","eventAction","eventName","variant","leftIcon","Icon","FaTwitter","url","pathname","tweet","encodeURI","open","eventValue","handleShowAnswer","questionId","answer","disabled","Spinner","fillRule","clipRule","GATSBY_FUNCTIONS_PATH","process","copyArray","shuffleSelf","module","exports","array","nativeFloor","nativeRandom","random","lower","upper","values","collection","arrayMap","object","baseRandom","lastIndex","undefined","rand","arrayShuffle","baseShuffle","baseValues"],"sourceRoot":""}