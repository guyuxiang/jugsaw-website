{"version":3,"file":"113f369f-6f23246e679888940b43.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/pages/upgrades/get-involved/index.tsx"],"sourcesContent":["import React, { useState, useEffect, ReactNode } from \"react\"\nimport { useTheme } from \"@emotion/react\"\nimport styled from \"@emotion/styled\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { useIntl } from \"react-intl\"\nimport { shuffle } from \"lodash\"\nimport { translateMessageId, TranslationKey } from \"../../../utils/translations\"\nimport Card from \"../../../components/Card\"\nimport Leaderboard, { Person } from \"../../../components/Leaderboard\"\nimport CalloutBanner from \"../../../components/CalloutBanner\"\nimport Emoji from \"../../../components/OldEmoji\"\nimport ProductCard from \"../../../components/ProductCard\"\nimport ButtonLink from \"../../../components/ButtonLink\"\nimport PageMetadata from \"../../../components/PageMetadata\"\nimport CardList from \"../../../components/CardList\"\nimport Translation from \"../../../components/Translation\"\nimport Link from \"../../../components/Link\"\n\nimport {\n  CardContainer,\n  CardGrid,\n  Content,\n  Page,\n  GrayContainer,\n  Divider,\n  SloganGradient,\n} from \"../../../components/SharedStyledComponents\"\nimport Breadcrumbs from \"../../../components/Breadcrumbs\"\nimport FeedbackCard from \"../../../components/FeedbackCard\"\nimport { getImage, ImageDataLike } from \"../../../utils/image\"\n\nconst HeroContainer = styled.div`\n  padding-left: 0rem;\n  padding-top: 8rem;\n  padding-bottom: 8rem;\n  width: 50%;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    padding-top: 2rem;\n    padding-left: 0rem;\n    width: 100%;\n  }\n`\n\nconst StyledCard = styled(Card)`\n  flex: 1 1 30%;\n  min-width: 240px;\n  margin: 1rem;\n  padding: 1.5rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex: 1 1 30%;\n  }\n`\n\nconst LeaderboardContainer = styled.div`\n  padding-left: 0rem;\n  padding-top: 2rem;\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    width: 100%;\n    margin-top: 2rem;\n  }\n`\n\nconst HeroCard = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  margin-top: -2rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-top: 1rem;\n  }\n`\n\nconst Subtitle = styled.div`\n  font-size: 1.5rem;\n  line-height: 140%;\n  color: ${(props) => props.theme.colors.text200};\n  margin-top: 1rem;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n`\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    flex-direction: column;\n  }\n`\n\nconst ReverseRow = styled.div`\n  display: flex;\n  align-items: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    flex-direction: column-reverse;\n  }\n`\n\nconst StyledCardContainer = styled(CardContainer)`\n  margin-top: 2rem;\n  margin-bottom: 3rem;\n`\n\nconst StyledCardGrid = styled(CardGrid)`\n  margin-top: 2rem;\n  margin-bottom: 3rem;\n`\n\nconst StyledCardList = styled(CardList)`\n  margin-right: 2rem;\n`\n\nconst Staking = styled.div`\n  padding: 4rem;\n  background: ${(props) => props.theme.colors.cardGradient};\n  width: 100%;\n  margin-top: 2rem;\n  margin-bottom: -2rem;\n  display: flex;\n  flex-direction: column;\n`\n\nconst LeftColumn = styled.div`\n  width: 50%;\n  margin-right: 4rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    width: 100%;\n    margin-left: 4rem;\n  }\n`\n\nconst RightColumn = styled.div`\n  width: 50%;\n  margin-left: 4rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    width: 100%;\n    margin-right: 4rem;\n    margin-bottom: -2rem;\n  }\n`\n\nconst StyledBreadcrumbs = styled(Breadcrumbs)`\n  justify-content: center;\n`\n\nconst StyledGrayContainer = styled(GrayContainer)`\n  margin-bottom: 3rem;\n  padding-bottom: 2rem;\n  border-bottom: 1px solid ${(props) => props.theme.colors.border};\n`\n\nconst StyledCalloutBanner = styled(CalloutBanner)`\n  background: transparent;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    width: 100%;\n    padding: 0rem;\n    padding-top: 4rem;\n    margin-left: 0rem;\n  }\n`\n\ntype Layer = \"el\" | \"cl\"\n\ntype Client = {\n  name: string\n  background: string\n  description: ReactNode\n  alt: TranslationKey\n  url: string\n  image: (isDarkTheme?: boolean) => ImageDataLike | null\n  githubUrl: string\n  isBeta?: boolean\n  children?: ReactNode\n}\n\ntype Clients = {\n  [key in Layer]: Array<Client>\n}\n\nconst GetInvolvedPage = ({\n  data,\n  location,\n}: PageProps<Queries.GetInvolvedPageQuery>) => {\n  const intl = useIntl()\n  const theme = useTheme()\n  const isDarkTheme = theme.isDark\n\n  // TODO sort query isn't working :(\n  const bountyHunters: Array<Person> = [...data.bountyHunters.nodes].sort(\n    (a, b) => {\n      if (a.score && b.score) {\n        return b.score - a.score\n      }\n\n      return 0\n    }\n  )\n\n  const [clients, setClients] = useState<Clients>({ el: [], cl: [] })\n\n  useEffect(() => {\n    const executionClients: Array<Client> = [\n      {\n        name: \"Besu\",\n        background: \"#546D78\",\n        description: (\n          <Translation id=\"page-upgrades-get-involved-written-java\" />\n        ),\n        alt: \"consensus-client-besu-logo-alt\",\n        url: \"https://besu.hyperledger.org/en/stable/HowTo/Get-Started/Install-Binaries/\",\n        image: () => data.besu,\n        githubUrl: \"https://github.com/hyperledger/besu\",\n      },\n      {\n        name: \"Erigon\",\n        background: \"#3A4B56\",\n        description: <Translation id=\"page-upgrades-get-involved-written-go\" />,\n        alt: \"consensus-client-erigon-logo-alt\",\n        url: \"https://github.com/ledgerwatch/erigon#erigon\",\n        image: () => data.erigon,\n        githubUrl: \"https://github.com/ledgerwatch/erigon\",\n      },\n      {\n        name: \"Geth\",\n        background: \"#303D4E\",\n        description: <Translation id=\"page-upgrades-get-involved-written-go\" />,\n        alt: \"consensus-client-geth-logo-alt\",\n        url: \"https://geth.ethereum.org/docs/getting-started\",\n        image: () => data.geth,\n        githubUrl: \"https://github.com/ethereum/go-ethereum\",\n      },\n      {\n        name: \"Nethermind\",\n        background: \"#21222D\",\n        description: (\n          <Translation id=\"page-upgrades-get-involved-written-c-sharp\" />\n        ),\n        alt: \"consensus-client-lodestar-logo-alt\",\n        url: \"https://docs.nethermind.io/nethermind/\",\n        image: () => data.nethermind,\n        githubUrl: \"https://github.com/NethermindEth/nethermind\",\n      },\n    ]\n\n    const consensusClients: Array<Client> = [\n      {\n        name: \"Prysm\",\n        background: \"#23292e\",\n        description: <Translation id=\"page-upgrades-get-involved-written-go\" />,\n        alt: \"consensus-client-prysm-logo-alt\",\n        url: \"https://docs.prylabs.network/docs/getting-started/\",\n        image: () => data.prysm,\n        githubUrl: \"https://github.com/prysmaticlabs/prysm\",\n      },\n      {\n        name: \"Lighthouse\",\n        background: \"\",\n        description: (\n          <Translation id=\"page-upgrades-get-involved-written-rust\" />\n        ),\n        alt: \"consensus-client-lighthouse-logo-alt\",\n        url: \"https://lighthouse-book.sigmaprime.io/\",\n        image: (isDarkTheme) =>\n          isDarkTheme ? data.lighthouseDark : data.lighthouseLight,\n        githubUrl: \"https://github.com/sigp/lighthouse\",\n      },\n      {\n        name: \"Teku\",\n        background: \"#3359d5\",\n        description: (\n          <Translation id=\"page-upgrades-get-involved-written-java\" />\n        ),\n        alt: \"consensus-client-teku-logo-alt\",\n        url: \"https://pegasys.tech/teku\",\n        image: (isDarkTheme) => (isDarkTheme ? data.tekuLight : data.tekuDark),\n        githubUrl: \"https://github.com/ConsenSys/teku\",\n      },\n      {\n        name: \"Lodestar\",\n        background: \"#14140b\",\n        description: (\n          <Translation id=\"page-upgrades-get-involved-written-javascript\" />\n        ),\n        alt: \"consensus-client-lodestar-logo-alt\",\n        url: \"https://lodestar.chainsafe.io/\",\n        image: () => data.lodestar,\n        githubUrl: \"https://github.com/ChainSafe/lodestar\",\n        isBeta: true,\n        children: <Translation id=\"consensus-client-under-review\" />,\n      },\n      {\n        name: \"Nimbus\",\n        background: \"#dc8600\",\n        description: (\n          <Translation id=\"page-upgrades-get-involved-written-nim\" />\n        ),\n        alt: \"consensus-client-nimbus-logo-alt\",\n        url: \"https://nimbus.team/\",\n        image: () => data.nimbus,\n        githubUrl: \"https://github.com/status-im/nimbus-eth2\",\n      },\n    ]\n\n    const shuffledExecutionClients = shuffle(executionClients)\n    const shuffledConsensusClients = shuffle(consensusClients)\n    // Sort beta clients to the end\n    const pseudoShuffledConsensusClients = shuffledConsensusClients.sort(\n      (_, { isBeta }) => (isBeta ? -1 : 0)\n    )\n    setClients({\n      el: shuffledExecutionClients,\n      cl: pseudoShuffledConsensusClients,\n    })\n  }, [data])\n\n  const ethresearch = [\n    {\n      title: <Translation id=\"page-upgrades-get-involved-ethresearch-1\" />,\n      description: \"\",\n      link: \"https://ethresear.ch/c/sharding/6\",\n    },\n    {\n      title: <Translation id=\"page-upgrades-get-involved-ethresearch-2\" />,\n      description: \"\",\n      link: \"https://ethresear.ch/c/the-merge/38\",\n    },\n    {\n      title: <Translation id=\"page-upgrades-get-involved-ethresearch-3\" />,\n      description: \"\",\n      link: \"https://ethresear.ch/c/sharded-execution/35\",\n    },\n    {\n      title: <Translation id=\"page-upgrades-get-involved-ethresearch-4\" />,\n      description: \"\",\n      link: \"https://ethresear.ch/\",\n    },\n  ]\n\n  const paths = [\n    {\n      emoji: \":computer:\",\n      title: <Translation id=\"page-upgrades-get-involved-title-1\" />,\n      description: <Translation id=\"page-upgrades-get-involved-desc-1\" />,\n      url: \"#clients\",\n      button: <Translation id=\"page-upgrades-get-involved-btn-1\" />,\n    },\n    {\n      emoji: \":moneybag:\",\n      title: <Translation id=\"page-upgrades-get-involved-title-2\" />,\n      description: <Translation id=\"page-upgrades-get-involved-desc-2\" />,\n      url: \"/staking/\",\n      button: <Translation id=\"page-upgrades-get-involved-btn-2\" />,\n    },\n    {\n      emoji: \":bug:\",\n      title: <Translation id=\"page-upgrades-get-involved-title-3\" />,\n      description: <Translation id=\"page-upgrades-get-involved-desc-3\" />,\n      url: \"/bug-bounty/\",\n      button: <Translation id=\"page-upgrades-get-involved-btn-3\" />,\n    },\n  ]\n\n  const getClientCards = (layer: Layer) => {\n    if (!Object.keys(clients).includes(layer)) return\n    return (\n      <StyledCardGrid>\n        {clients[layer].map((client, idx) => (\n          <ProductCard\n            key={idx}\n            url={client.url}\n            background={client.background}\n            image={getImage(client.image(isDarkTheme))!}\n            name={client.name}\n            description={client.description}\n            alt={translateMessageId(client.alt, intl)}\n            githubUrl={client.githubUrl}\n            hideStars={true}\n          >\n            {client.children}\n          </ProductCard>\n        ))}\n      </StyledCardGrid>\n    )\n  }\n\n  return (\n    <Page>\n      <PageMetadata\n        title={translateMessageId(\"page-upgrades-get-involved\", intl)}\n        description={translateMessageId(\n          \"page-upgrades-get-involved-meta-description\",\n          intl\n        )}\n      />\n      <Content>\n        <HeroCard>\n          <HeroContainer>\n            <StyledBreadcrumbs slug={location.pathname} startDepth={1} />\n            <SloganGradient>\n              <Translation id=\"page-upgrades-get-involved\" />{\" \"}\n              <Emoji size={1} text=\":wave:\" />\n            </SloganGradient>\n            <Subtitle>\n              <Translation id=\"page-upgrades-get-involved-subtitle\" />\n            </Subtitle>\n          </HeroContainer>\n        </HeroCard>\n        <h2>\n          <Translation id=\"page-upgrades-get-involved-how\" />\n        </h2>\n        <p>\n          <Translation id=\"page-upgrades-get-involved-how-desc\" />\n        </p>\n        <StyledCardContainer>\n          {paths.map((path, idx) => (\n            <StyledCard\n              key={idx}\n              emoji={path.emoji}\n              title={path.title}\n              description={path.description}\n            >\n              <ButtonLink to={path.url}>{path.button}</ButtonLink>\n            </StyledCard>\n          ))}\n        </StyledCardContainer>\n      </Content>\n      <Divider id=\"clients\" />\n      <Content>\n        <h2>\n          <Translation id=\"page-upgrades-get-involved-run-clients\" />\n        </h2>\n        <p>\n          <Translation id=\"page-upgrades-get-involved-run-clients-desc\" />{\" \"}\n          <Link to=\"https://clientdiversity.org\">\n            <Translation id=\"page-upgrades-get-involved-run-clients-desc-link\" />\n          </Link>\n        </p>\n        <h3>\n          <Translation id=\"page-upgrades-get-involved-run-clients-execution\" />\n        </h3>\n        <p>\n          <Translation id=\"page-upgrades-get-involved-run-clients-execution-desc\" />\n        </p>\n        {getClientCards(\"el\")}\n        <h3>\n          <Translation id=\"page-upgrades-get-involved-run-clients-consensus\" />\n        </h3>\n        <p>\n          <Translation id=\"page-upgrades-get-involved-run-clients-consensus-desc\" />\n        </p>\n        {getClientCards(\"cl\")}\n      </Content>\n      <Staking>\n        <StyledCalloutBanner\n          image={getImage(data.rhino)!}\n          alt={translateMessageId(\"page-staking-image-alt\", intl)}\n          titleKey={\"page-upgrades-get-involved-stake\"}\n          descriptionKey={\"page-upgrades-get-involved-stake-desc\"}\n        >\n          <div>\n            <ButtonLink to=\"/staking/\">\n              <Translation id=\"page-upgrades-get-involved-stake-eth\" />\n            </ButtonLink>\n          </div>\n        </StyledCalloutBanner>\n      </Staking>\n      <StyledGrayContainer>\n        <Content>\n          <Row>\n            <LeftColumn>\n              <h2 id=\"#bug-bounty\">\n                <Translation id=\"page-upgrades-get-involved-bug-hunting\" />\n              </h2>\n              <p>\n                <Translation id=\"page-upgrades-get-involved-bug-hunting-desc\" />\n              </p>\n              <p>\n                <Translation id=\"page-upgrades-get-involved-bug\" />\n              </p>\n              <ul>\n                <li>\n                  <Translation id=\"page-upgrades-get-involved-bug-li\" />\n                </li>\n                <li>\n                  <Translation id=\"page-upgrades-get-involved-bug-li-2\" />\n                </li>\n                <li>\n                  <Translation id=\"page-upgrades-get-involved-bug-li-3\" />\n                </li>\n                <li>\n                  <Translation id=\"page-upgrades-get-involved-bug-li-4\" />\n                </li>\n              </ul>\n              <ButtonLink to=\"/bug-bounty/\">\n                <Translation id=\"page-upgrades-get-involved-bug-hunting\" />\n              </ButtonLink>\n            </LeftColumn>\n            <LeaderboardContainer>\n              <Leaderboard content={bountyHunters} limit={5} />\n            </LeaderboardContainer>\n          </Row>\n        </Content>\n      </StyledGrayContainer>\n      <Content>\n        <ReverseRow>\n          <LeftColumn>\n            <StyledCardList content={ethresearch} />\n          </LeftColumn>\n          <RightColumn>\n            <h2>\n              <Translation id=\"page-upgrades-get-involved-join\" />\n            </h2>\n            <p>\n              <Translation id=\"page-upgrades-get-involved-join-desc\" />\n            </p>\n          </RightColumn>\n        </ReverseRow>\n      </Content>\n      <FeedbackCard />\n    </Page>\n  )\n}\n\nexport default GetInvolvedPage\n\nexport const Clients = graphql`\n  fragment Clients on File {\n    childImageSharp {\n      gatsbyImageData(\n        width: 80\n        layout: FIXED\n        placeholder: BLURRED\n        quality: 100\n      )\n    }\n  }\n`\n\nexport const query = graphql`\n  query GetInvolvedPage {\n    bountyHunters: allConsensusBountyHuntersCsv(sort: { score: DESC }) {\n      nodes {\n        username\n        name\n        score\n      }\n    }\n    rhino: file(relativePath: { eq: \"upgrades/upgrade_rhino.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 800\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    besu: file(relativePath: { eq: \"upgrades/besu-card.png\" }) {\n      ...Clients\n    }\n    erigon: file(relativePath: { eq: \"upgrades/erigon-card.png\" }) {\n      ...Clients\n    }\n    geth: file(relativePath: { eq: \"upgrades/geth.png\" }) {\n      ...Clients\n    }\n    lighthouseLight: file(\n      relativePath: { eq: \"upgrades/lighthouse-light.png\" }\n    ) {\n      ...Clients\n    }\n    lighthouseDark: file(relativePath: { eq: \"upgrades/lighthouse-dark.png\" }) {\n      ...Clients\n    }\n    lodestar: file(relativePath: { eq: \"upgrades/lodestar.png\" }) {\n      ...Clients\n    }\n    nethermind: file(relativePath: { eq: \"upgrades/nethermind-card.png\" }) {\n      ...Clients\n    }\n    nimbus: file(relativePath: { eq: \"upgrades/nimbus.png\" }) {\n      ...Clients\n    }\n    prysm: file(relativePath: { eq: \"upgrades/prysm.png\" }) {\n      ...Clients\n    }\n    tekuDark: file(relativePath: { eq: \"upgrades/teku-dark.png\" }) {\n      ...Clients\n    }\n    tekuLight: file(relativePath: { eq: \"upgrades/teku-light.png\" }) {\n      ...Clients\n    }\n  }\n`\n"],"names":["HeroContainer","target","props","theme","breakpoints","l","StyledCard","Card","LeaderboardContainer","m","HeroCard","Subtitle","colors","text200","Row","ReverseRow","StyledCardContainer","CardContainer","name","styles","StyledCardGrid","CardGrid","StyledCardList","CardList","Staking","cardGradient","LeftColumn","RightColumn","StyledBreadcrumbs","Breadcrumbs","StyledGrayContainer","GrayContainer","border","StyledCalloutBanner","CalloutBanner","_ref","data","location","intl","useIntl","isDarkTheme","useTheme","isDark","bountyHunters","_toConsumableArray","nodes","sort","a","b","score","clients","setClients","useState","el","cl","useEffect","executionClients","background","description","___EmotionJSX","Translation","id","alt","url","image","besu","githubUrl","erigon","geth","nethermind","consensusClients","prysm","lighthouseDark","lighthouseLight","tekuLight","tekuDark","lodestar","isBeta","children","nimbus","shuffledExecutionClients","_shuffle","pseudoShuffledConsensusClients","_","ethresearch","title","link","paths","emoji","button","getClientCards","layer","Object","keys","includes","map","client","idx","ProductCard","key","getImage","translateMessageId","hideStars","Page","PageMetadata","Content","slug","pathname","startDepth","SloganGradient","Emoji","size","text","path","ButtonLink","to","Divider","Link","rhino","titleKey","descriptionKey","Leaderboard","content","limit","FeedbackCard"],"sourceRoot":""}