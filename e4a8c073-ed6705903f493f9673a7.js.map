{"version":3,"file":"e4a8c073-ed6705903f493f9673a7.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/Layer2/Layer2Onboard.tsx"],"sourcesContent":["// Libraries\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport React, { useState } from \"react\"\nimport styled from \"@emotion/styled\"\nimport { useIntl } from \"react-intl\"\n\n// Components\nimport ButtonLink from \"../ButtonLink\"\nimport Link from \"../Link\"\nimport Translation from \"../Translation\"\nimport { StyledSelect as Select } from \"../SharedStyledComponents\"\n\n// Data\nimport cexSupport from \"../../data/layer-2/cex-layer-2-support.json\"\n\n//Utils\nimport { trackCustomEvent } from \"../../utils/matomo\"\nimport { translateMessageId } from \"../../utils/translations\"\n\n// Styles\nconst Content = styled.div`\n  background: ${(props) => props.theme.colors.layer2Gradient};\n  padding: 2.5rem;\n  border-radius: 2px;\n`\n\nconst Description = styled.div`\n  text-align: center;\n  max-width: 75ch;\n  margin: auto;\n`\n\nconst H3 = styled.h3`\n  margin-top: 0;\n`\n\nconst Flex50 = styled.div`\n  flex: 50%;\n  @media (max-width: ${({ theme }) => theme.breakpoints.m}) {\n    flex: 100%;\n  }\n`\n\nconst TwoColumnContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 2rem;\n  @media (max-width: ${({ theme }) => theme.breakpoints.l}) {\n    flex-direction: column;\n    align-items: flex-start;\n    margin-left: 0rem;\n    margin-right: 0rem;\n  }\n`\n\n// https://react-select.com/styles#using-classnames\n// Pass menuIsOpen={true} to component to debug\nconst StyledSelect = styled(Select)`\n  max-width: none;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    .react-select__control {\n      padding: 14px 0;\n    }\n  }\n`\n\nconst SelectedContainer = styled.div`\n  background: rgba(255, 255, 255, 0.02);\n  margin-top: 0.5rem;\n  padding: 21px;\n`\n\nconst ButtonLinkMargin = styled(ButtonLink)`\n  margin-top: 2.5rem;\n`\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(21, 1fr);\n  gap: 10px;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    grid-template-columns: repeat(11, 1fr);\n    margin: auto;\n  }\n`\n\nconst LeftDescription = styled.div`\n  grid-column: 1/11;\n  grid-row: 1;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    grid-column: 1/12;\n    grid-row: 1;\n  }\n`\n\nconst LeftSelect = styled.div`\n  grid-column: 1/11;\n  grid-row: 2;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    grid-column: 1/12;\n    grid-row: 2;\n  }\n`\n\nconst RightDescription = styled.div`\n  grid-column: 12/22;\n  grid-row: 1;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    grid-column: 1/12;\n    grid-row: 5;\n  }\n`\n\nconst RightSelect = styled.div`\n  grid-column: 12/22;\n  grid-row: 2;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    grid-column: 1/12;\n    grid-row: 6;\n  }\n`\n\nconst LeftSelected = styled.div`\n  grid-column: 1/11;\n  grid-row: 3/6;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    grid-column: 1/12;\n    grid-row: 3;\n  }\n`\n\nconst EthLogo = styled.div`\n  grid-column: 11;\n  grid-row: 4;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    grid-column: 1/12;\n    grid-row: 4;\n  }\n`\n\nconst Image = styled(GatsbyImage)`\n  width: 100%;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    margin-top: 1.5rem;\n  }\n`\n\nconst RightSelected = styled.div`\n  grid-column: 12/22;\n  grid-row: 3/6;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    grid-column: 1/12;\n    grid-row: 7;\n  }\n`\n\ninterface Exchange {\n  name: string\n  supports_deposits: Array<string>\n  supports_withdrawals: Array<string>\n  url: string\n}\n\ninterface Layer2 {\n  name: string\n  bridgeWallets: Array<string>\n  bridge: string\n}\n\ninterface Option {\n  value: string\n  label: string\n}\n\ninterface Layer2Option extends Option {\n  l2: Layer2\n}\n\ninterface ExchangeOption extends Option {\n  cex: Exchange\n}\n\nexport interface IProps {\n  layer2DataCombined: Array<Layer2>\n  ethIcon: IGatsbyImageData\n  ethIconAlt: string\n}\n\nconst Layer2Onboard: React.FC<IProps> = ({\n  layer2DataCombined,\n  ethIcon,\n  ethIconAlt,\n}) => {\n  const intl = useIntl()\n\n  const [selectedExchange, setSelectedExchange] = useState<Exchange>()\n  const [selectedL2, setSelectedL2] = useState<Layer2>()\n\n  const layer2Options: Array<Layer2Option> = layer2DataCombined.map((l2) => {\n    return {\n      label: l2.name,\n      value: l2.name,\n      l2,\n    }\n  })\n\n  const cexSupportOptions: Array<ExchangeOption> = cexSupport.map(\n    (cex: Exchange) => {\n      return {\n        label: cex.name,\n        value: cex.name,\n        cex,\n      }\n    }\n  )\n\n  return (\n    <Content>\n      <Description>\n        <h2>\n          <Translation id=\"layer-2-onboard-title\" />\n        </h2>\n        <p>\n          <Translation id=\"layer-2-onboard-1\" />\n        </p>\n      </Description>\n      <Grid>\n        <LeftDescription>\n          <h4>\n            <Translation id=\"layer-2-onboard-wallet-title\" />\n          </h4>\n          <p>\n            <Translation id=\"layer-2-onboard-wallet-1\" />\n          </p>\n          <p>\n            <Link to=\"/bridges/\">\n              <Translation id=\"layer-2-more-on-bridges\" />\n            </Link>\n          </p>\n        </LeftDescription>\n        <LeftSelect>\n          <StyledSelect\n            className=\"react-select-container\"\n            classNamePrefix=\"react-select\"\n            options={layer2Options}\n            onChange={(selectedOption: Layer2Option) => {\n              trackCustomEvent({\n                eventCategory: `Selected layer 2 to bridge to`,\n                eventAction: `Clicked`,\n                eventName: `${selectedOption.l2.name} bridge selected`,\n                eventValue: `${selectedOption.l2.name}`,\n              })\n              setSelectedL2(selectedOption.l2)\n            }}\n            placeholder={translateMessageId(\n              \"layer-2-onboard-wallet-input-placeholder\",\n              intl\n            )}\n          />\n        </LeftSelect>\n        {selectedL2 && (\n          <LeftSelected>\n            <SelectedContainer>\n              <p>\n                <b>{`${translateMessageId(\n                  \"layer-2-onboard-wallet-selected-1\",\n                  intl\n                )} ${selectedL2.name} ${translateMessageId(\n                  \"layer-2-onboard-wallet-selected-2\",\n                  intl\n                )}`}</b>\n              </p>\n              <p>{selectedL2.bridgeWallets.join(\", \")}</p>\n              <ButtonLinkMargin to={selectedL2.bridge}>\n                {`${selectedL2.name} ${translateMessageId(\n                  \"layer-2-bridge\",\n                  intl\n                )}`}\n              </ButtonLinkMargin>\n            </SelectedContainer>\n          </LeftSelected>\n        )}\n        <RightDescription>\n          <h4>\n            <Translation id=\"layer-2-onboard-exchange-title\" />\n          </h4>\n          <p>\n            <Translation id=\"layer-2-onboard-exchange-1\" />\n          </p>\n          <p>\n            <Translation id=\"layer-2-onboard-exchange-2\" />{\" \"}\n            <Link to=\"/wallets/find-wallet/\">\n              <Translation id=\"layer-2-onboard-find-a-wallet\" />\n            </Link>\n          </p>\n        </RightDescription>\n        <RightSelect>\n          <StyledSelect\n            className=\"react-select-container\"\n            classNamePrefix=\"react-select\"\n            options={cexSupportOptions}\n            onChange={(selectedOption: ExchangeOption) => {\n              trackCustomEvent({\n                eventCategory: `Selected cex to onboard`,\n                eventAction: `Clicked`,\n                eventName: `${selectedOption.cex.name} selected`,\n                eventValue: `${selectedOption.cex.name}`,\n              })\n              setSelectedExchange(selectedOption.cex)\n            }}\n            placeholder={translateMessageId(\n              \"layer-2-onboard-exchange-input-placeholder\",\n              intl\n            )}\n          />\n        </RightSelect>\n        <EthLogo>\n          <Image image={ethIcon} objectFit=\"contain\" alt={ethIconAlt} />\n        </EthLogo>\n        {selectedExchange && (\n          <RightSelected>\n            <SelectedContainer>\n              <TwoColumnContent>\n                <Flex50>\n                  <H3>\n                    <Translation id=\"layer-2-deposits\" />\n                  </H3>\n                  <ul>\n                    {selectedExchange.supports_deposits.map((l2) => (\n                      <li key={l2}>{l2}</li>\n                    ))}\n                  </ul>\n                </Flex50>\n                <Flex50>\n                  <H3>\n                    <Translation id=\"layer-2-withdrawals\" />\n                  </H3>\n                  <ul>\n                    {selectedExchange.supports_withdrawals.map((l2) => (\n                      <li key={l2}>{l2}</li>\n                    ))}\n                  </ul>\n                </Flex50>\n              </TwoColumnContent>\n              <ButtonLink to={selectedExchange.url}>\n                {`${translateMessageId(\"layer-2-go-to\", intl)} ${\n                  selectedExchange.name\n                }`}\n              </ButtonLink>\n            </SelectedContainer>\n          </RightSelected>\n        )}\n      </Grid>\n    </Content>\n  )\n}\n\nexport default Layer2Onboard\n"],"names":["Content","props","theme","colors","layer2Gradient","Description","H3","Flex50","_ref","breakpoints","m","TwoColumnContent","_ref2","l","StyledSelect","Select","s","SelectedContainer","ButtonLinkMargin","ButtonLink","Grid","LeftDescription","LeftSelect","RightDescription","RightSelect","LeftSelected","EthLogo","Image","GatsbyImage","RightSelected","_ref3","layer2DataCombined","ethIcon","ethIconAlt","intl","useIntl","selectedExchange","setSelectedExchange","useState","selectedL2","setSelectedL2","layer2Options","map","l2","label","name","value","cexSupportOptions","cexSupport","cex","___EmotionJSX","Translation","id","Link","to","className","classNamePrefix","options","onChange","selectedOption","trackCustomEvent","eventCategory","eventAction","eventName","eventValue","placeholder","translateMessageId","bridgeWallets","join","bridge","image","objectFit","alt","supports_deposits","key","supports_withdrawals","url"],"sourceRoot":""}