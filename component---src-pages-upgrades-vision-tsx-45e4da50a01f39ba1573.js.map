{"version":3,"file":"component---src-pages-upgrades-vision-tsx-45e4da50a01f39ba1573.js","mappings":"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","sources":["webpack://ethereum-org-website/./node_modules/@chakra-ui/media-query/dist/index.esm.js","webpack://ethereum-org-website/./node_modules/@chakra-ui/breadcrumb/dist/index.esm.js","webpack://ethereum-org-website/./src/components/Breadcrumbs.tsx","webpack://ethereum-org-website/./src/components/Button/index.tsx","webpack://ethereum-org-website/./src/components/FeedbackCard.tsx","webpack://ethereum-org-website/./src/components/InfoBanner.tsx","webpack://ethereum-org-website/./src/components/PageHero.tsx","webpack://ethereum-org-website/./src/components/Trilemma/Triangle.tsx","webpack://ethereum-org-website/./src/components/Trilemma/index.tsx","webpack://ethereum-org-website/./src/components/Trilemma/useTrilemma.tsx","webpack://ethereum-org-website/./src/pages/upgrades/vision.tsx"],"sourcesContent":["// ../../react-shim.js\nimport React from \"react\";\n\n// src/media-query.tsx\nimport { useTheme } from \"@chakra-ui/system\";\nvar getBreakpoint = (theme, value) => {\n  var _a;\n  return ((_a = theme == null ? void 0 : theme.breakpoints) == null ? void 0 : _a[value]) ?? value;\n};\nfunction useQuery(props) {\n  const { breakpoint = \"\", below, above } = props;\n  const theme = useTheme();\n  const bpBelow = getBreakpoint(theme, below);\n  const bpAbove = getBreakpoint(theme, above);\n  let query = breakpoint;\n  if (bpBelow) {\n    query = `(max-width: ${bpBelow})`;\n  } else if (bpAbove) {\n    query = `(min-width: ${bpAbove})`;\n  }\n  return query;\n}\n\n// src/use-media-query.ts\nimport { useEnvironment } from \"@chakra-ui/react-env\";\nimport { useEffect, useState } from \"react\";\nfunction useMediaQuery(query, options = {}) {\n  const { ssr = true, fallback } = options;\n  const env = useEnvironment();\n  const queries = Array.isArray(query) ? query : [query];\n  let fallbackValues = Array.isArray(fallback) ? fallback : [fallback];\n  fallbackValues = fallbackValues.filter((v) => v != null);\n  const [value, setValue] = useState(() => {\n    return queries.map((query2, index) => ({\n      media: query2,\n      matches: ssr ? !!fallbackValues[index] : env.window.matchMedia(query2).matches\n    }));\n  });\n  useEffect(() => {\n    setValue(queries.map((query2) => ({\n      media: query2,\n      matches: env.window.matchMedia(query2).matches\n    })));\n    const mql = queries.map((query2) => env.window.matchMedia(query2));\n    const handler = (evt) => {\n      setValue((prev) => {\n        return prev.slice().map((item) => {\n          if (item.media === evt.media)\n            return { ...item, matches: evt.matches };\n          return item;\n        });\n      });\n    };\n    mql.forEach((mql2) => {\n      if (typeof mql2.addListener === \"function\") {\n        mql2.addListener(handler);\n      } else {\n        mql2.addEventListener(\"change\", handler);\n      }\n    });\n    return () => {\n      mql.forEach((mql2) => {\n        if (typeof mql2.removeListener === \"function\") {\n          mql2.removeListener(handler);\n        } else {\n          mql2.removeEventListener(\"change\", handler);\n        }\n      });\n    };\n  }, [env.window]);\n  return value.map((item) => item.matches);\n}\n\n// src/media-query.hook.ts\nfunction usePrefersReducedMotion(options) {\n  const [prefersReducedMotion] = useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n  return prefersReducedMotion;\n}\nfunction useColorModePreference(options) {\n  const [isLight, isDark] = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"], options);\n  if (isLight)\n    return \"light\";\n  if (isDark)\n    return \"dark\";\n  return void 0;\n}\n\n// src/use-breakpoint.ts\nimport { useTheme as useTheme2 } from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !Array.isArray(value);\n}\n\n// src/use-breakpoint.ts\nfunction useBreakpoint(arg) {\n  var _a;\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const theme = useTheme2();\n  const breakpoints = theme.__breakpoints.details.map(({ minMaxQuery, breakpoint }) => ({\n    breakpoint,\n    query: minMaxQuery.replace(\"@media screen and \", \"\")\n  }));\n  const fallback = breakpoints.map((bp) => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(breakpoints.map((bp) => bp.query), { fallback, ssr: opts.ssr });\n  const index = values.findIndex((value) => value == true);\n  return ((_a = breakpoints[index]) == null ? void 0 : _a.breakpoint) ?? opts.fallback;\n}\n\n// src/use-breakpoint-value.ts\nimport { useTheme as useTheme3 } from \"@chakra-ui/system\";\nimport { arrayToObjectNotation } from \"@chakra-ui/breakpoint-utils\";\n\n// src/media-query.utils.ts\nimport { breakpoints as defaultBreakPoints } from \"@chakra-ui/breakpoint-utils\";\nfunction getClosestValue(values, breakpoint, breakpoints = defaultBreakPoints) {\n  let index = Object.keys(values).indexOf(breakpoint);\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n  let stopIndex = breakpoints.indexOf(breakpoint);\n  while (stopIndex >= 0) {\n    const key = breakpoints[stopIndex];\n    if (values.hasOwnProperty(key)) {\n      index = stopIndex;\n      break;\n    }\n    stopIndex -= 1;\n  }\n  if (index !== -1) {\n    const key = breakpoints[index];\n    return values[key];\n  }\n  return void 0;\n}\n\n// src/use-breakpoint-value.ts\nfunction useBreakpointValue(values, arg) {\n  var _a;\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const breakpoint = useBreakpoint(opts);\n  const theme = useTheme3();\n  if (!breakpoint)\n    return;\n  const breakpoints = Array.from(((_a = theme.__breakpoints) == null ? void 0 : _a.keys) || []);\n  const obj = Array.isArray(values) ? Object.fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(([key, value]) => [key, value])) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\n// src/visibility.tsx\nfunction Visibility(props) {\n  const { breakpoint, hide, children, ssr } = props;\n  const [show] = useMediaQuery(breakpoint, { ssr });\n  const isVisible = hide ? !show : show;\n  const rendered = isVisible ? children : null;\n  return rendered;\n}\n\n// src/show.tsx\nfunction Show(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ React.createElement(Visibility, {\n    breakpoint: query,\n    ssr\n  }, children);\n}\nShow.displayName = \"Show\";\n\n// src/hide.tsx\nfunction Hide(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true,\n    ssr\n  }, children);\n}\nHide.displayName = \"Hide\";\nexport {\n  Hide,\n  Show,\n  useBreakpoint,\n  useBreakpointValue,\n  useColorModePreference,\n  useMediaQuery,\n  usePrefersReducedMotion,\n  useQuery\n};\n","// ../../react-shim.js\nimport React from \"react\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\n// src/breadcrumb.tsx\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cloneElement } from \"react\";\n\n// src/breadcrumb-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [BreadcrumbStylesProvider, useBreadcrumbStyles] = createContext({\n  name: `BreadcrumbStylesContext`,\n  errorMessage: `useBreadcrumbStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Breadcrumb />\" `\n});\n\n// src/breadcrumb.tsx\nvar Breadcrumb = forwardRef(function Breadcrumb2(props, ref) {\n  const styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  const ownProps = omitThemingProps(props);\n  const {\n    children,\n    spacing = \"0.5rem\",\n    separator = \"/\",\n    className,\n    ...rest\n  } = ownProps;\n  const validChildren = getValidChildren(children);\n  const count = validChildren.length;\n  const clones = validChildren.map((child, index) => cloneElement(child, {\n    separator,\n    spacing,\n    isLastChild: count === index + 1\n  }));\n  const _className = cx(\"chakra-breadcrumb\", className);\n  return /* @__PURE__ */ React.createElement(chakra.nav, {\n    ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container,\n    ...rest\n  }, /* @__PURE__ */ React.createElement(BreadcrumbStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(chakra.ol, {\n    className: \"chakra-breadcrumb__list\"\n  }, clones)));\n});\nBreadcrumb.displayName = \"Breadcrumb\";\n\n// src/breadcrumb-item.tsx\nimport {\n  chakra as chakra4,\n  forwardRef as forwardRef4\n} from \"@chakra-ui/system\";\nimport { getValidChildren as getValidChildren2 } from \"@chakra-ui/react-children-utils\";\n\n// src/breadcrumb-separator.tsx\nimport {\n  chakra as chakra2,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\nvar BreadcrumbSeparator = forwardRef2(function BreadcrumbSeparator2(props, ref) {\n  const { spacing, ...rest } = props;\n  const styles = useBreadcrumbStyles();\n  const separatorStyles = {\n    mx: spacing,\n    ...styles.separator\n  };\n  return /* @__PURE__ */ React.createElement(chakra2.span, {\n    ref,\n    role: \"presentation\",\n    ...rest,\n    __css: separatorStyles\n  });\n});\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n\n// src/breadcrumb-link.tsx\nimport { chakra as chakra3, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar BreadcrumbLink = forwardRef3(function BreadcrumbLink2(props, ref) {\n  const { isCurrentPage, as, className, href, ...rest } = props;\n  const styles = useBreadcrumbStyles();\n  const sharedProps = {\n    ref,\n    as,\n    className: cx(\"chakra-breadcrumb__link\", className),\n    ...rest\n  };\n  if (isCurrentPage) {\n    return /* @__PURE__ */ React.createElement(chakra3.span, {\n      \"aria-current\": \"page\",\n      __css: styles.link,\n      ...sharedProps\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra3.a, {\n    __css: styles.link,\n    href,\n    ...sharedProps\n  });\n});\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\n\n// src/breadcrumb-item.tsx\nimport { cloneElement as cloneElement2 } from \"react\";\nvar BreadcrumbItem = forwardRef4(function BreadcrumbItem2(props, ref) {\n  const {\n    isCurrentPage,\n    separator,\n    isLastChild,\n    spacing,\n    children,\n    className,\n    ...rest\n  } = props;\n  const validChildren = getValidChildren2(children);\n  const clones = validChildren.map((child) => {\n    if (child.type === BreadcrumbLink) {\n      return cloneElement2(child, {\n        isCurrentPage\n      });\n    }\n    if (child.type === BreadcrumbSeparator) {\n      return cloneElement2(child, {\n        spacing,\n        children: child.props.children || separator\n      });\n    }\n    return child;\n  });\n  const styles = useBreadcrumbStyles();\n  const itemStyles = {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    ...styles.item\n  };\n  const _className = cx(\"chakra-breadcrumb__list-item\", className);\n  return /* @__PURE__ */ React.createElement(chakra4.li, {\n    ref,\n    className: _className,\n    ...rest,\n    __css: itemStyles\n  }, clones, !isLastChild && /* @__PURE__ */ React.createElement(BreadcrumbSeparator, {\n    spacing\n  }, separator));\n});\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\nexport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbSeparator,\n  useBreadcrumbStyles\n};\n","import React from \"react\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbProps,\n} from \"@chakra-ui/react\"\nimport { useIntl } from \"react-intl\"\n\nimport Link from \"./Link\"\nimport { isLang } from \"../utils/languages\"\nimport { isTranslationKey, translateMessageId } from \"../utils/translations\"\n\nexport interface IProps extends BreadcrumbProps {\n  slug: string\n  startDepth?: number\n}\n\n// Generate crumbs from slug\n// e.g. \"/en/eth2/proof-of-stake/\" will generate:\n// [\n//   { fullPath: \"/en/\", text: \"HOME\" },\n//   { fullPath: \"/en/eth2/\", text: \"ETH2\" },\n//   { fullPath: \"/en/eth2/proof-of-stake/\", text: \"PROOF OF STAKE\" },\n// ]\n// `startDepth` will trim breadcrumbs\n// e.g. startDepth=1 will generate:\n// [\n//   { fullPath: \"/en/eth2/\", text: \"ETH2\" },\n//   { fullPath: \"/en/eth2/proof-of-stake/\", text: \"PROOF OF STAKE\" },\n// ]\nconst Breadcrumbs: React.FC<IProps> = ({\n  slug,\n  startDepth = 0,\n  ...restProps\n}) => {\n  const intl = useIntl()\n\n  const slugChunk = slug.split(\"/\")\n  const sliced = slugChunk.filter((item) => !!item).slice(startDepth)\n\n  const crumbs = sliced.map((path, idx) => {\n    // If homepage (e.g. \"en\"), set text to \"home\" translation\n    const text = isLang(path)\n      ? translateMessageId(\"page-index-meta-title\", intl)\n      : isTranslationKey(path)\n      ? translateMessageId(path, intl)\n      : \"\"\n\n    return {\n      fullPath: slugChunk.slice(0, idx + 2 + startDepth).join(\"/\") + \"/\",\n      text: text.toUpperCase(),\n    }\n  })\n\n  return (\n    <Breadcrumb\n      dir=\"auto\"\n      position=\"relative\"\n      zIndex=\"1\"\n      mb={8}\n      sx={{\n        // TODO: Move this to `listProps` upon upgrading `@chakra-ui/react`\n        // to at least v2.4.2\n        ol: {\n          m: 0,\n          lineHeight: 1,\n        },\n      }}\n      {...restProps}\n    >\n      {crumbs.map((crumb, idx) => {\n        const isCurrentPage = slug === crumb.fullPath\n        return (\n          <BreadcrumbItem\n            key={idx}\n            isCurrentPage={isCurrentPage}\n            color=\"textTableOfContents\"\n            fontSize=\"sm\"\n            letterSpacing=\"wider\"\n            lineHeight=\"140%\"\n            m={0}\n          >\n            <BreadcrumbLink\n              as={Link}\n              to={crumb.fullPath}\n              isPartiallyActive={isCurrentPage}\n              _hover={{ color: \"primary\", textDecor: \"none\" }}\n              _active={{ color: \"primary\" }}\n            >\n              {crumb.text}\n            </BreadcrumbLink>\n          </BreadcrumbItem>\n        )\n      })}\n    </Breadcrumb>\n  )\n}\n\nexport default Breadcrumbs\n","import React from \"react\"\nimport { Button as ChakraButton, ButtonProps } from \"@chakra-ui/react\"\n\nimport { scrollIntoView } from \"../../utils/scrollIntoView\"\n\nexport interface IProps extends ButtonProps {\n  toId?: string\n}\n\nconst Button: React.FC<IProps> = ({ toId, children, ...props }) => {\n  const handleOnClick = () => {\n    if (!toId) {\n      return\n    }\n\n    scrollIntoView(toId)\n  }\n\n  return (\n    <ChakraButton onClick={handleOnClick} {...props}>\n      {children}\n    </ChakraButton>\n  )\n}\n\nexport default Button\n","// Library imports\nimport React, { ReactNode, useState } from \"react\"\nimport { Flex, FlexProps, Heading } from \"@chakra-ui/react\"\n// Component imports\nimport Button from \"./Button\"\nimport Translation from \"./Translation\"\n// SVG imports\nimport { FeedbackThumbsUpIcon } from \"./icons\"\n// Utility imports\nimport { trackCustomEvent } from \"../utils/matomo\"\n// Hook imports\nimport { useSurvey } from \"../hooks/useSurvey\"\n\nexport interface IProps extends FlexProps {\n  prompt?: string\n  isArticle?: boolean\n}\n\nconst FeedbackCard: React.FC<IProps> = ({\n  prompt,\n  isArticle = false,\n  ...props\n}) => {\n  const [feedbackSubmitted, setFeedbackSubmitted] = useState(false)\n  const surveyUrl = useSurvey(feedbackSubmitted)\n\n  const location = typeof window !== \"undefined\" ? window.location.href : \"\"\n  const isTutorial = location.includes(\"tutorials\")\n\n  const getTitle = (feedbackSubmitted: boolean): ReactNode => {\n    if (!feedbackSubmitted) {\n      if (prompt) return prompt\n      if (isTutorial) return <Translation id=\"feedback-card-prompt-tutorial\" />\n      if (isArticle) return <Translation id=\"feedback-card-prompt-article\" />\n      return <Translation id=\"feedback-card-prompt-page\" />\n    }\n    return <Translation id=\"feedback-widget-thank-you-title\" />\n  }\n\n  const handleSubmit = (choice: boolean): void => {\n    trackCustomEvent({\n      eventCategory: `Page is helpful feedback`,\n      eventAction: `Clicked`,\n      eventName: String(choice),\n    })\n    setFeedbackSubmitted(true)\n  }\n  const handleSurveyOpen = (): void => {\n    trackCustomEvent({\n      eventCategory: `Feedback survey opened`,\n      eventAction: `Clicked`,\n      eventName: \"Feedback survey opened\",\n    })\n    window && surveyUrl && window.open(surveyUrl, \"_blank\")\n  }\n  return (\n    <Flex\n      border=\"1px\"\n      borderColor=\"border\"\n      bg=\"feedbackGradient\"\n      borderRadius=\"base\"\n      p={6}\n      direction=\"column\"\n      mb={4}\n      mt={8}\n      w=\"full\"\n      {...props}\n    >\n      <Flex direction=\"column\" gap={4}>\n        <Heading as=\"h3\" m={0} mb={2} fontSize=\"1.375rem\" fontWeight=\"bold\">\n          {getTitle(feedbackSubmitted)}\n        </Heading>\n        {feedbackSubmitted && (\n          <p>\n            <Translation id=\"feedback-widget-thank-you-subtitle\" />{\" \"}\n            <Translation id=\"feedback-widget-thank-you-subtitle-ext\" />\n          </p>\n        )}\n        <Flex gap={4}>\n          {!feedbackSubmitted ? (\n            <>\n              <Button\n                variant=\"outline-color\"\n                leftIcon={<FeedbackThumbsUpIcon />}\n                onClick={() => handleSubmit(true)}\n              >\n                <Translation id=\"yes\" />\n              </Button>\n              <Button\n                variant=\"outline-color\"\n                leftIcon={<FeedbackThumbsUpIcon transform=\"scaleY(-1)\" />}\n                onClick={() => handleSubmit(false)}\n              >\n                <Translation id=\"no\" />\n              </Button>\n            </>\n          ) : (\n            <Button variant=\"outline-color\" onClick={handleSurveyOpen}>\n              <Translation id=\"feedback-widget-thank-you-cta\" />\n            </Button>\n          )}\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default FeedbackCard\n","import React from \"react\"\nimport { Flex } from \"@chakra-ui/react\"\nimport Emoji from \"./Emoji\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  className?: string\n  emoji?: string\n  isWarning?: boolean\n  shouldCenter?: boolean\n  shouldSpaceBetween?: boolean\n}\n\nconst InfoBanner: React.FC<IProps> = ({\n  children,\n  className,\n  emoji,\n  isWarning = false,\n  shouldCenter = false,\n  shouldSpaceBetween = false,\n  ...props\n}) => {\n  const banner = (\n    <Flex\n      align=\"center\"\n      p={6}\n      borderRadius={\"sm\"}\n      maxW={shouldCenter ? \"55rem\" : \"100%\"}\n      color=\"black300\"\n      bg={isWarning ? \"warning\" : \"infoBanner\"}\n      direction={{ base: \"column\", sm: \"row\" }}\n      {...props}\n    >\n      {emoji && (\n        <Emoji\n          flexGrow=\"0\"\n          flexShrink=\"0\"\n          mr={{ base: 0, sm: 6 }}\n          mb={{ base: 2, sm: 0 }}\n          alignSelf={{ base: \"flex-start\", sm: \"auto\" }}\n          text={emoji}\n          fontSize=\"4xl\"\n        />\n      )}\n      <Flex\n        display={{ base: \"block\", sm: shouldSpaceBetween ? \"flex\" : \"block\" }}\n        align={shouldSpaceBetween ? \"center\" : \"auto\"}\n        w={shouldSpaceBetween ? \"100%\" : \"auto\"}\n        justify={shouldSpaceBetween ? \"space-between\" : \"auto\"}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  )\n  return shouldCenter ? <Flex justify=\"center\">{banner}</Flex> : banner\n}\n\nexport default InfoBanner\n","import React, { ReactNode } from \"react\"\nimport { Box, Flex, Heading, Wrap, WrapItem } from \"@chakra-ui/react\"\n\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\n\nimport ButtonLink, { IProps as IButtonLinkProps } from \"./ButtonLink\"\nimport Button, { IProps as IButtonProps } from \"./Button\"\n\nexport interface IButtonLink extends IButtonLinkProps {\n  content: ReactNode\n}\n\nexport interface IButton extends IButtonProps {\n  content: ReactNode\n}\n\nexport interface IContent {\n  buttons?: Array<IButtonLink | IButton>\n  title: ReactNode\n  header: ReactNode\n  subtitle: ReactNode\n  image: IGatsbyImageData\n  alt: string\n}\n\nexport interface IProps {\n  content: IContent\n  isReverse?: boolean\n  children?: ReactNode\n  className?: string\n}\n\nfunction isButtonLink(button: IButton | IButtonLink): button is IButtonLink {\n  return (button as IButtonLink).to !== undefined\n}\n\nconst PageHero: React.FC<IProps> = ({\n  content,\n  isReverse = false,\n  children,\n  className,\n}) => {\n  const { buttons, title, header, subtitle, image, alt } = content\n  return (\n    <Box py={4} px={8} width=\"full\">\n      <Flex\n        justifyContent=\"space-between\"\n        mt={8}\n        px={{ base: 0, lg: 16 }}\n        direction={{ base: isReverse ? \"column\" : \"column-reverse\", lg: \"row\" }}\n        className={className}\n      >\n        <Box\n          maxW={{ base: \"full\", lg: \"container.sm\" }}\n          py={{ base: 16, lg: 32 }}\n          pl={{ base: 0, lg: 8 }}\n          mr={4}\n        >\n          <Heading\n            as=\"h1\"\n            textTransform=\"uppercase\"\n            fontSize=\"md\"\n            fontWeight=\"normal\"\n            mb={4}\n            color=\"text300\"\n            lineHeight={1.4}\n          >\n            {title}\n          </Heading>\n          <Heading\n            as=\"h2\"\n            fontWeight=\"bold\"\n            fontSize={{ base: \"2.5rem\", lg: \"5xl\" }}\n            maxW=\"full\"\n            mb={0}\n            color=\"text00\"\n            lineHeight={1.4}\n          >\n            {header}\n          </Heading>\n          <Box\n            fontSize={{ base: \"xl\", lg: \"2xl\" }}\n            lineHeight={1.4}\n            color=\"text200\"\n            mt={4}\n            mb={8}\n          >\n            {subtitle}\n          </Box>\n          {buttons && (\n            <Wrap spacing={2}>\n              {buttons.map((button, idx) => {\n                if (isButtonLink(button)) {\n                  return (\n                    <WrapItem>\n                      <ButtonLink\n                        key={idx}\n                        variant={button.variant}\n                        to={button.to}\n                      >\n                        {button.content}\n                      </ButtonLink>\n                    </WrapItem>\n                  )\n                }\n\n                if (button.toId) {\n                  return (\n                    <WrapItem>\n                      <Button\n                        key={idx}\n                        variant={button.variant}\n                        toId={button.toId}\n                      >\n                        {button.content}\n                      </Button>\n                    </WrapItem>\n                  )\n                }\n              })}\n            </Wrap>\n          )}\n          {children}\n        </Box>\n        <Box\n          as={GatsbyImage}\n          flex=\"1 1 50%\"\n          alignSelf=\"center\"\n          mt={{ base: 0, lg: 12 }}\n          ml={{ base: 0, lg: 12 }}\n          w=\"full\"\n          maxWidth={{ base: \"560px\", lg: \"624px\" }}\n          image={image}\n          imgStyle={{\n            objectFit: \"contain\",\n          }}\n          alt={alt}\n          loading=\"eager\"\n        />\n      </Flex>\n    </Box>\n  )\n}\n\nexport default PageHero\n","import React, { ReactNode } from \"react\"\nimport { useIntl } from \"react-intl\"\nimport { chakra, HTMLChakraProps } from \"@chakra-ui/react\"\nimport { translateMessageId } from \"../../utils/translations\"\nimport { HandleClickParam } from \"./useTrilemma\"\n\nexport interface IProps {\n  handleClick: (selection: HandleClickParam) => void\n  isDecentralizedAndSecure: boolean\n  isScalableAndSecure: boolean\n  isDecentralizedAndScalable: boolean\n  isEthereum: boolean\n  isDecentralized: boolean\n  isSecure: boolean\n  isScalable: boolean\n}\n\nexport const TriangleSVG: React.FC<IProps> = ({\n  handleClick,\n  isDecentralizedAndSecure,\n  isScalableAndSecure,\n  isDecentralizedAndScalable,\n  isEthereum,\n  isDecentralized,\n  isSecure,\n  isScalable,\n}) => {\n  const intl = useIntl()\n\n  const Path = () => (\n    <chakra.path\n      d=\"M111.183 479.532L566.904 181.217L598.824 787.211L111.183 479.532Z\"\n      stroke=\"border\"\n      strokeWidth=\"2\"\n    />\n  )\n\n  const CircleSelect = ({ children, onClick }) => (\n    <chakra.g\n      cursor=\"pointer\"\n      sx={{\n        \"circle:first-of-type\": {\n          fill: \"white\",\n        },\n      }}\n      onClick={onClick}\n    >\n      {children}\n    </chakra.g>\n  )\n\n  const FillCircle = ({ isEthereum = false, isActive, ...rest }) => {\n    return (\n      <chakra.circle\n        fill={\n          (isActive && (isEthereum ? \"primary300\" : \"primary\")) || \"background\"\n        }\n        _hover={{\n          fill: isActive ? \"primary\" : \"primary100\",\n        }}\n        {...rest}\n      />\n    )\n  }\n\n  const Text = ({\n    isActive,\n    children,\n    ...rest\n  }: { isActive: boolean; children: ReactNode } & HTMLChakraProps<\"text\">) => (\n    <chakra.text\n      fill={isActive ? \"primary400\" : \"text200\"}\n      fontWeight={isActive ? 700 : 500}\n      opacity={isActive ? 1.0 : 0.6}\n      fontSize={{ base: \"2rem\", sm: \"1.4rem\" }}\n      textTransform=\"uppercase\"\n      transform={{ base: \"translate(-80px, 0px)\", sm: \"none\" }}\n      {...rest}\n    >\n      {children}\n    </chakra.text>\n  )\n\n  const commonCircleStyles = {\n    stroke: \"black\",\n    strokeOpacity: \"0.12\",\n  }\n\n  const topCircleStyles = {\n    cx: \"337.5\",\n    cy: \"326.5\",\n    ...commonCircleStyles,\n  }\n  const centerCircleStyles = {\n    cx: \"400\",\n    cy: \"480\",\n    ...commonCircleStyles,\n  }\n  const bottomCircleStyles = {\n    cx: \"321.5\",\n    cy: \"611.501\",\n    ...commonCircleStyles,\n  }\n  const rightCircleStyles = {\n    cx: \"582.5\",\n    cy: \"460.5\",\n    ...commonCircleStyles,\n  }\n  const OUTER_CIRCLE_RADIUS = \"27\"\n  const INNER_CIRCLE_RADIUS = \"21\"\n\n  return (\n    <chakra.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"620px\"\n      viewBox=\"-100 100 850 915\"\n      fill=\"background\"\n      width={{ base: \"full\", lg: \"auto\" }}\n      my={{ base: -28, sm: -16, lg: 0 }}\n      mt={{ lg: 32 }}\n      mr={{ lg: 32 }}\n    >\n      <Path />\n      <Path />\n      <Path />\n      <CircleSelect onClick={() => handleClick(\"isDecentralizedAndSecure\")}>\n        <circle r={OUTER_CIRCLE_RADIUS} fill=\"white\" {...topCircleStyles} />\n        <FillCircle\n          isEthereum={isEthereum}\n          isActive={isDecentralizedAndSecure}\n          r={INNER_CIRCLE_RADIUS}\n          {...topCircleStyles}\n        />\n      </CircleSelect>\n      <CircleSelect onClick={() => handleClick(\"isEthereum\")}>\n        <circle r={OUTER_CIRCLE_RADIUS} fill=\"white\" {...centerCircleStyles} />\n        <FillCircle\n          isActive={isEthereum}\n          r={INNER_CIRCLE_RADIUS}\n          {...centerCircleStyles}\n        />\n      </CircleSelect>\n      <CircleSelect onClick={() => handleClick(\"isScalableAndSecure\")}>\n        <circle r={OUTER_CIRCLE_RADIUS} fill=\"white\" {...bottomCircleStyles} />\n        <FillCircle\n          isEthereum={isEthereum}\n          isActive={isScalableAndSecure}\n          r={INNER_CIRCLE_RADIUS}\n          {...bottomCircleStyles}\n        />\n      </CircleSelect>\n      <CircleSelect onClick={() => handleClick(\"isDecentralizedAndScalable\")}>\n        <circle r={OUTER_CIRCLE_RADIUS} fill=\"white\" {...rightCircleStyles} />\n        <FillCircle\n          isEthereum={isEthereum}\n          isActive={isDecentralizedAndScalable}\n          r={INNER_CIRCLE_RADIUS}\n          {...rightCircleStyles}\n        />\n      </CircleSelect>\n      <Text x=\"400\" y=\"540\" isActive={isEthereum}>\n        {translateMessageId(\"ethereum\", intl)}\n      </Text>\n      <Text x=\"460\" y=\"150\" isActive={isDecentralized}>\n        {translateMessageId(\"page-upgrades-vision-trilemma-text-1\", intl)}\n      </Text>\n      <Text x=\"-24\" y=\"486\" isActive={isSecure}>\n        {translateMessageId(\"page-upgrades-vision-trilemma-text-2\", intl)}\n      </Text>\n      <Text x=\"540\" y=\"835\" isActive={isScalable}>\n        {translateMessageId(\"page-upgrades-vision-trilemma-text-3\", intl)}\n      </Text>\n    </chakra.svg>\n  )\n}\n","import React from \"react\"\nimport {\n  Drawer,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerOverlay,\n  Flex,\n  Heading,\n  Hide,\n  Show,\n  Text,\n  useToken,\n} from \"@chakra-ui/react\"\nimport Card from \"../Card\"\nimport Translation from \"../Translation\"\nimport { TriangleSVG, IProps as TriangleSVGProps } from \"./Triangle\"\nimport { useTrilemma } from \"./useTrilemma\"\n\nexport interface IProps {}\n\nconst Trilemma: React.FC<IProps> = () => {\n  const {\n    trilemmaChecks,\n    mobileModalOpen,\n    handleClick,\n    handleModalClose,\n    cardDetail,\n  } = useTrilemma()\n\n  const triangleSVGProps: TriangleSVGProps = {\n    handleClick,\n    ...trilemmaChecks,\n  }\n\n  // TODO: Replace with direct token implementation after UI migration is completed\n  const lgBp = useToken(\"breakpoints\", \"lg\")\n\n  return (\n    <Flex\n      alignItems=\"flex-start\"\n      flexDirection={{ base: \"column\", lg: \"row\" }}\n      justifyContent=\"space-between\"\n    >\n      <Flex\n        flexDirection=\"column\"\n        my={{ base: 8, md: 12 }}\n        mx={{ md: 12 }}\n        py={8}\n        flex={{\n          base: \"1 1 100%\",\n          lg: \"0 1 500px\",\n        }}\n      >\n        <Heading fontSize=\"2rem\" mt={0}>\n          <Translation id=\"page-upgrades-vision-trilemma-h2\" />\n        </Heading>\n        <Text>\n          <Translation id=\"page-upgrades-vision-trilemma-p\" />\n        </Text>\n        <Text>\n          <Translation id=\"page-upgrades-vision-trilemma-p-1\" />\n        </Text>\n        <Text>\n          <Translation id=\"page-upgrades-vision-trilemma-p-2\" />\n        </Text>\n        <Show below={lgBp}>\n          <Text fontWeight={600}>\n            <Translation id=\"page-upgrades-vision-trilemma-modal-tip\" />:\n          </Text>\n        </Show>\n        <Hide below={lgBp}>\n          <Card {...cardDetail} mt={8} minH=\"300px\" />\n        </Hide>\n      </Flex>\n      <Hide above={lgBp}>\n        <Drawer\n          isOpen={mobileModalOpen}\n          onClose={handleModalClose}\n          placement=\"bottom\"\n        >\n          <DrawerOverlay background=\"rgba(0,0,0,0.3)\" />\n          <DrawerContent\n            border=\"none\"\n            borderTopRadius=\"1rem\"\n            background=\"background\"\n          >\n            <Card\n              {...cardDetail}\n              background=\"none\"\n              border=\"none\"\n              justifyContent=\"flex-start\"\n              my={8}\n            />\n            <DrawerCloseButton top={6} right={6} />\n          </DrawerContent>\n        </Drawer>\n      </Hide>\n      <TriangleSVG {...triangleSVGProps} />\n    </Flex>\n  )\n}\n\nexport default Trilemma\n","import React, { useState } from \"react\"\nimport Translation from \"../Translation\"\nimport { IProps as CardProps } from \"../Card\"\n\n/**\n * The `selection` param accepted values for the click handler\n */\nexport type HandleClickParam =\n  | \"isEthereum\"\n  | \"isDecentralizedAndSecure\"\n  | \"isDecentralizedAndScalable\"\n  | \"isScalableAndSecure\"\n\nexport const useTrilemma = () => {\n  const [state, setState] = useState({\n    isDecentralizedAndSecure: false,\n    isDecentralizedAndScalable: false,\n    isScalableAndSecure: false,\n    mobileModalOpen: false,\n  })\n\n  const setTrilemmaState = (newState: Partial<typeof state>) => {\n    setState((prevState) => ({ ...prevState, ...newState }))\n  }\n\n  const isDecentralized =\n    state.isDecentralizedAndScalable || state.isDecentralizedAndSecure\n  const isScalable =\n    state.isDecentralizedAndScalable || state.isScalableAndSecure\n  const isSecure = state.isScalableAndSecure || state.isDecentralizedAndSecure\n  const isEthereum = isDecentralized && isScalable && isSecure\n\n  const handleClick = (selection: HandleClickParam) => {\n    if (selection === \"isEthereum\") {\n      return setTrilemmaState({\n        isDecentralizedAndSecure: true,\n        isDecentralizedAndScalable: true,\n        isScalableAndSecure: true,\n        mobileModalOpen: true,\n      })\n    }\n    if (selection === \"isDecentralizedAndSecure\") {\n      return setTrilemmaState({\n        isDecentralizedAndSecure: true,\n        isDecentralizedAndScalable: false,\n        isScalableAndSecure: false,\n        mobileModalOpen: true,\n      })\n    }\n\n    if (selection === \"isDecentralizedAndScalable\") {\n      return setTrilemmaState({\n        isDecentralizedAndSecure: false,\n        isDecentralizedAndScalable: true,\n        isScalableAndSecure: false,\n        mobileModalOpen: true,\n      })\n    }\n    if (selection === \"isScalableAndSecure\") {\n      return setTrilemmaState({\n        isDecentralizedAndSecure: false,\n        isDecentralizedAndScalable: false,\n        isScalableAndSecure: true,\n        mobileModalOpen: true,\n      })\n    }\n  }\n\n  const handleModalClose = () => {\n    setTrilemmaState({\n      mobileModalOpen: false,\n    })\n  }\n\n  let cardTitle = <Translation id=\"page-upgrades-vision-trilemma-title-1\" />\n  let cardText = <Translation id=\"page-upgrades-vision-trilemma-press-button\" />\n  if (isEthereum) {\n    cardTitle = <Translation id=\"page-upgrades-vision-trilemma-title-2\" />\n    cardText = <Translation id=\"page-upgrades-vision-trilemma-cardtext-1\" />\n  } else if (state.isDecentralizedAndSecure) {\n    cardTitle = <Translation id=\"page-upgrades-vision-trilemma-title-3\" />\n    cardText = <Translation id=\"page-upgrades-vision-trilemma-cardtext-2\" />\n  } else if (state.isDecentralizedAndScalable) {\n    cardTitle = <Translation id=\"page-upgrades-vision-trilemma-title-4\" />\n    cardText = <Translation id=\"page-upgrades-vision-trilemma-cardtext-3\" />\n  } else if (state.isScalableAndSecure) {\n    cardTitle = <Translation id=\"page-upgrades-vision-trilemma-title-5\" />\n    cardText = <Translation id=\"page-upgrades-vision-trilemma-cardtext-4\" />\n  }\n\n  return {\n    trilemmaChecks: {\n      isDecentralizedAndSecure: state.isDecentralizedAndSecure,\n      isScalableAndSecure: state.isScalableAndSecure,\n      isDecentralizedAndScalable: state.isDecentralizedAndScalable,\n      isEthereum,\n      isDecentralized,\n      isSecure,\n      isScalable,\n    },\n    mobileModalOpen: state.mobileModalOpen,\n    handleClick,\n    handleModalClose,\n    cardDetail: {\n      title: cardTitle,\n      description: cardText,\n    } as Pick<CardProps, \"title\" | \"description\">,\n  }\n}\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { useIntl } from \"react-intl\"\n\nimport Translation from \"../../components/Translation\"\nimport Card from \"../../components/Card\"\nimport ActionCard from \"../../components/ActionCard\"\nimport Link from \"../../components/Link\"\nimport Emoji from \"../../components/OldEmoji\"\nimport Trilemma from \"../../components/Trilemma\"\nimport PageHero, {\n  IContent as IPageHeroContent,\n} from \"../../components/PageHero\"\nimport Breadcrumbs from \"../../components/Breadcrumbs\"\nimport ButtonLink from \"../../components/ButtonLink\"\nimport PageMetadata from \"../../components/PageMetadata\"\nimport InfoBanner from \"../../components/InfoBanner\"\nimport {\n  CardContainer,\n  Content,\n  Page,\n  Divider,\n} from \"../../components/SharedStyledComponents\"\nimport FeedbackCard from \"../../components/FeedbackCard\"\n\nimport { translateMessageId } from \"../../utils/translations\"\nimport { getImage } from \"../../utils/image\"\n\nconst ProblemCardContainer = styled(CardContainer)`\n  max-width: ${(props) => props.theme.breakpoints.l};\n  margin: 0 auto;\n`\n\nconst StyledCardContainer = styled(CardContainer)`\n  margin-top: 2rem;\n  margin-bottom: 3rem;\n`\n\nconst H2 = styled.h2`\n  margin-top: 0;\n`\n\nconst CenterH2 = styled(H2)`\n  text-align: center;\n  margin-bottom: 2rem;\n`\n\nconst CentreCard = styled(Card)`\n  flex: 1 1 30%;\n  min-width: 240px;\n  margin: 1rem;\n  padding: 1.5rem;\n  border: 0px;\n  text-align: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex: 1 1 30%;\n  }\n`\n\nconst CentralContent = styled.div`\n  margin: 0rem 12rem;\n  justify-content: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin: 0rem 0rem;\n  }\n`\n\nconst TrilemmaContent = styled.div`\n  width: 100%;\n  margin: 2rem 0;\n  background: ${(props) => props.theme.colors.cardGradient};\n  padding: 2rem;\n`\n\nconst StyledBreadcrumbs = styled(Breadcrumbs)`\n  justify-content: center;\n`\n\nconst paths = [\n  {\n    emoji: \":vertical_traffic_light:\",\n    title: <Translation id=\"page-upgrades-vision-title-1\" />,\n    description: <Translation id=\"page-upgrades-vision-desc-1\" />,\n  },\n  {\n    emoji: \":minidisc:\",\n    title: <Translation id=\"page-upgrades-vision-title-2\" />,\n    description: <Translation id=\"page-upgrades-vision-desc-2\" />,\n  },\n]\n\nconst VisionPage = ({\n  data,\n  location,\n}: PageProps<Queries.UpgradesVisionPageQuery>) => {\n  const intl = useIntl()\n\n  const heroContent: IPageHeroContent = {\n    title: translateMessageId(\"page-upgrades-vision-title\", intl),\n    header: translateMessageId(\"page-upgrades-vision-future\", intl),\n    subtitle: translateMessageId(\"page-upgrades-vision-subtitle\", intl),\n    image: getImage(data.oldship)!,\n    alt: translateMessageId(\"page-eth-whats-eth-hero-alt\", intl),\n  }\n\n  const upgrades = [\n    // TODO: Check/update string keys after affiliates pre-merge content changes are pulled in\n    {\n      image: getImage(data.beaconchain),\n      title: <Translation id=\"page-upgrades-beacon-chain-title\" />,\n      description: <Translation id=\"page-upgrades-beacon-chain-desc\" />,\n      to: \"/upgrades/beacon-chain/\",\n      date: <Translation id=\"page-upgrades-beacon-chain-estimate\" />,\n    },\n    {\n      image: getImage(data.themerge),\n      title: <Translation id=\"page-upgrades-docking\" />,\n      description: <Translation id=\"page-upgrades-merge-desc\" />,\n      to: \"/upgrades/merge/\",\n      date: <Translation id=\"page-upgrades-merge-estimate\" />,\n    },\n    {\n      image: getImage(data.shards),\n      title: <Translation id=\"page-upgrades-shard-title\" />,\n      description: <Translation id=\"page-upgrades-shard-desc\" />,\n      to: \"/upgrades/sharding/\",\n      date: <Translation id=\"page-upgrades-shard-estimate\" />,\n    },\n  ]\n\n  return (\n    <Page>\n      <PageMetadata\n        title={translateMessageId(\"page-upgrades-vision-meta-title\", intl)}\n        description={translateMessageId(\"page-upgrades-vision-meta-desc\", intl)}\n      />\n      <PageHero content={heroContent} />\n      <Divider />\n      <Content>\n        <StyledBreadcrumbs slug={location.pathname} startDepth={1} />\n        <CentralContent>\n          <CenterH2>\n            <Translation id=\"page-upgrades-vision-upgrade-needs\" />\n          </CenterH2>\n          <p>\n            <Translation id=\"page-upgrades-vision-upgrade-needs-desc\" />\n          </p>\n          <p>\n            <Translation id=\"page-upgrades-vision-upgrade-needs-desc-2\" />\n          </p>\n          <p>\n            <Translation id=\"page-upgrades-vision-upgrade-needs-desc-3\" />{\" \"}\n          </p>\n          <ul>\n            <li>\n              <Link to=\"https://members.delphidigital.io/reports/the-hitchhikers-guide-to-ethereum\">\n                <Translation id=\"page-upgrades-vision-2022\" />\n              </Link>\n            </li>\n            <li>\n              <Link to=\"https://trent.mirror.xyz/82eyq_NXZzzqFmCNXiKJgSdayf6omCW7BgDQIneyPoA\">\n                <Translation id=\"page-upgrades-vision-2021-updates\" />\n              </Link>\n            </li>\n            <li>\n              <Link to=\"https://tim.mirror.xyz/CHQtTJb1NDxCK41JpULL-zAJe7YOtw-m4UDw6KDju6c\">\n                <Translation id=\"page-upgrades-vision-2021\" />\n              </Link>\n            </li>\n            <li>\n              <Link to=\"https://blog.ethereum.org/2015/03/03/ethereum-launch-process/\">\n                <Translation id=\"page-upgrades-vision-upgrade-needs-serenity\" />\n              </Link>\n            </li>\n            <li>\n              <Link to=\"https://blog.ethereum.org/2014/01/15/slasher-a-punitive-proof-of-stake-algorithm/\">\n                <Translation id=\"page-upgrades-vision-2014\" />\n              </Link>\n            </li>\n          </ul>\n          <p>\n            <Translation id=\"page-upgrades-vision-upgrade-needs-desc-5\" />\n          </p>\n          <p>\n            <Translation id=\"page-upgrades-vision-upgrade-needs-desc-6\" />\n          </p>\n        </CentralContent>\n      </Content>\n      <Divider />\n      <Content>\n        <CenterH2>\n          <Translation id=\"page-upgrades-vision-problems\" />\n        </CenterH2>\n        <ProblemCardContainer>\n          {paths.map((path, idx) => (\n            <CentreCard\n              key={idx}\n              emoji={path.emoji}\n              title={path.title}\n              description={path.description}\n            />\n          ))}\n        </ProblemCardContainer>\n      </Content>\n      <TrilemmaContent>\n        <Trilemma />\n      </TrilemmaContent>\n      <Divider />\n      <Content>\n        <CentralContent>\n          <CenterH2>\n            <Translation id=\"page-upgrades-vision-understanding\" />\n          </CenterH2>\n          <h3>\n            <Translation id=\"page-upgrades-vision-scalability\" />{\" \"}\n            <Emoji text=\":rocket:\" />\n          </h3>\n          <p>\n            <Translation id=\"page-upgrades-vision-scalability-desc\" />\n          </p>\n          <p>\n            <Translation id=\"page-upgrades-vision-scalability-desc-3\" />\n          </p>\n          <p>\n            <Translation id=\"page-upgrades-vision-scalability-desc-4\" />{\" \"}\n            <Link to=\"/upgrades/sharding/\">\n              <Translation id=\"page-upgrades-vision-shard-upgrade\" />\n            </Link>{\" \"}\n          </p>\n          <h3>\n            <Translation id=\"page-upgrades-vision-security\" />{\" \"}\n            <Emoji text=\":shield:\" />\n          </h3>\n          <p>\n            <Translation id=\"page-upgrades-vision-security-desc\" />\n          </p>\n          <p>\n            <Translation id=\"page-upgrades-vision-security-desc-3\" />{\" \"}\n            <Link to=\"/developers/docs/consensus-mechanisms/pos/\">\n              <Translation id=\"page-upgrades-proof-stake-link\" />\n            </Link>{\" \"}\n          </p>\n          <p>\n            <Translation id=\"page-upgrades-vision-security-desc-5\" />{\" \"}\n            <Link to=\"/developers/docs/consensus-mechanisms/pow/\">\n              <Translation id=\"page-upgrades-vision-security-desc-5-link\" />\n            </Link>\n          </p>\n          <p>\n            <Translation id=\"page-upgrades-vision-security-desc-8\" />\n          </p>\n          <p>\n            <Translation id=\"page-upgrades-vision-security-desc-10\" />\n          </p>\n          <p>\n            <Translation id=\"page-upgrades-vision-security-validator\" />{\" \"}\n            <Link to=\"/run-a-node/\">\n              <Translation id=\"page-upgrades-vision-ethereum-node\" />\n            </Link>\n          </p>\n          <ButtonLink to=\"/staking/\">\n            <Translation id=\"page-upgrades-vision-security-staking\" />\n          </ButtonLink>\n          <h3>\n            <Translation id=\"page-upgrades-vision-sustainability\" />{\" \"}\n            <Emoji text=\":evergreen_tree:\" />\n          </h3>\n          <p>\n            <Translation id=\"page-upgrades-vision-sustainability-subtitle\" />\n          </p>\n          <p>\n            <Translation id=\"page-upgrades-vision-sustainability-desc-1\" />{\" \"}\n            <Link to=\"/developers/docs/consensus-mechanisms/pow/mining/\">\n              <Translation id=\"page-upgrades-vision-mining\" />\n            </Link>\n          </p>\n          <p>\n            <Translation id=\"page-upgrades-vision-sustainability-desc-2\" />{\" \"}\n            <Link to=\"/staking/\">\n              <Translation id=\"page-upgrades-vision-staking-lower\" />\n            </Link>\n          </p>\n          <p>\n            <Translation id=\"page-upgrades-vision-sustainability-desc-3\" />\n          </p>\n          <InfoBanner>\n            <p>\n              <Translation id=\"page-upgrades-vision-sustainability-desc-8\" />\n            </p>\n            <ButtonLink to=\"/upgrades/merge/\">\n              <Translation id=\"page-upgrades-merge-btn\" />\n            </ButtonLink>\n          </InfoBanner>\n        </CentralContent>\n      </Content>\n      <Divider />\n      <Content>\n        <H2>\n          <Translation id=\"page-upgrades-vision-explore-upgrades\" />\n        </H2>\n        <StyledCardContainer>\n          {upgrades.map((upgrade, idx) => (\n            <ActionCard\n              isRight\n              key={idx}\n              image={upgrade.image!}\n              title={upgrade.title}\n              description={upgrade.description}\n              to={upgrade.to}\n            >\n              <h6>{upgrade.date}</h6>\n            </ActionCard>\n          ))}\n        </StyledCardContainer>\n      </Content>\n      <FeedbackCard />\n    </Page>\n  )\n}\n\nexport default VisionPage\n\nexport const query = graphql`\n  query UpgradesVisionPage {\n    oldship: file(relativePath: { eq: \"upgrades/oldship.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 800\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    rhino: file(relativePath: { eq: \"upgrades/upgrade_rhino.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 600\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    merge: file(relativePath: { eq: \"upgrades/merge.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, quality: 100)\n      }\n    }\n    beaconchain: file(relativePath: { eq: \"upgrades/core.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 420\n          layout: FIXED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    shards: file(relativePath: { eq: \"upgrades/newrings.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 420\n          layout: FIXED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    themerge: file(relativePath: { eq: \"upgrades/merge.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 420\n          layout: FIXED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n  }\n`\n"],"names":["getBreakpoint","theme","value","_a","breakpoints","useQuery","props","breakpoint","below","above","bpBelow","bpAbove","query","useMediaQuery","options","ssr","fallback","env","queries","Array","isArray","fallbackValues","filter","v","setValue","useState","map","query2","index","media","matches","window","matchMedia","useEffect","mql","handler","evt","prev","slice","item","forEach","mql2","addListener","addEventListener","removeListener","removeEventListener","Visibility","hide","children","show","Show","Hide","displayName","cx","classNames","Boolean","join","BreadcrumbStylesProvider","useBreadcrumbStyles","name","errorMessage","Breadcrumb","ref","styles","ownProps","spacing","separator","className","rest","validChildren","count","length","clones","child","cloneElement","isLastChild","_className","__css","container","BreadcrumbSeparator","separatorStyles","mx","role","BreadcrumbLink","isCurrentPage","as","href","sharedProps","link","BreadcrumbItem","type","itemStyles","display","alignItems","_ref","slug","startDepth","restProps","intl","useIntl","slugChunk","split","crumbs","path","idx","text","isLang","translateMessageId","isTranslationKey","fullPath","toUpperCase","___EmotionJSX","dir","position","zIndex","mb","sx","ol","m","lineHeight","crumb","key","color","fontSize","letterSpacing","Link","to","isPartiallyActive","_hover","textDecor","_active","toId","ChakraButton","onClick","scrollIntoView","prompt","isArticle","feedbackSubmitted","setFeedbackSubmitted","surveyUrl","useSurvey","isTutorial","location","includes","handleSubmit","choice","trackCustomEvent","eventCategory","eventAction","eventName","String","Flex","border","borderColor","bg","borderRadius","p","direction","mt","w","gap","Heading","fontWeight","Translation","id","getTitle","Button","variant","open","leftIcon","FeedbackThumbsUpIcon","transform","emoji","isWarning","shouldCenter","shouldSpaceBetween","banner","align","maxW","base","sm","Emoji","flexGrow","flexShrink","mr","alignSelf","justify","content","isReverse","buttons","title","header","subtitle","image","alt","Box","py","px","width","justifyContent","lg","pl","textTransform","Wrap","button","undefined","isButtonLink","WrapItem","ButtonLink","GatsbyImage","flex","ml","maxWidth","imgStyle","objectFit","loading","TriangleSVG","handleClick","isDecentralizedAndSecure","isScalableAndSecure","isDecentralizedAndScalable","isEthereum","isDecentralized","isSecure","isScalable","Path","chakra","d","stroke","strokeWidth","CircleSelect","_ref2","cursor","fill","FillCircle","_ref3","isActive","Text","_ref4","opacity","commonCircleStyles","strokeOpacity","topCircleStyles","cy","centerCircleStyles","bottomCircleStyles","rightCircleStyles","OUTER_CIRCLE_RADIUS","INNER_CIRCLE_RADIUS","xmlns","height","viewBox","my","r","x","y","trilemmaChecks","mobileModalOpen","handleModalClose","cardDetail","state","setState","setTrilemmaState","newState","prevState","cardTitle","cardText","selection","description","useTrilemma","triangleSVGProps","lgBp","useToken","flexDirection","md","Card","minH","Drawer","isOpen","onClose","placement","DrawerOverlay","background","DrawerContent","borderTopRadius","DrawerCloseButton","top","right","ProblemCardContainer","CardContainer","target","l","StyledCardContainer","H2","CenterH2","CentreCard","CentralContent","TrilemmaContent","colors","cardGradient","StyledBreadcrumbs","Breadcrumbs","paths","data","heroContent","getImage","oldship","upgrades","beaconchain","date","themerge","shards","Page","PageMetadata","PageHero","Divider","Content","pathname","Trilemma","InfoBanner","upgrade","ActionCard","isRight","FeedbackCard"],"sourceRoot":""}