{"version":3,"file":"component---src-pages-conditional-dapps-tsx-00ec80bfc41204e59c0c.js","mappings":"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","sources":["webpack://ethereum-org-website/./node_modules/@chakra-ui/image/dist/index.esm.js","webpack://ethereum-org-website/./src/components/BoxGrid.tsx","webpack://ethereum-org-website/./src/components/Callout.tsx","webpack://ethereum-org-website/./src/components/DocLink.tsx","webpack://ethereum-org-website/./src/components/GhostCard.tsx","webpack://ethereum-org-website/./src/components/InfoBanner.tsx","webpack://ethereum-org-website/./src/components/PageHero.tsx","webpack://ethereum-org-website/./src/components/GitStars.tsx","webpack://ethereum-org-website/./src/components/ProductCard.tsx","webpack://ethereum-org-website/./src/components/ProductList.tsx","webpack://ethereum-org-website/./src/utils/image.ts"],"sourcesContent":["// ../../react-shim.js\nimport React from \"react\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/dist/index.esm.js\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(\"img\", {\n    width: htmlWidth,\n    height: htmlHeight,\n    ref,\n    alt,\n    ...rest\n  });\n});\nNativeImage.displayName = \"NativeImage\";\n\n// src/image.tsx\nvar Image2 = forwardRef2(function Image3(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ React.createElement(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage2.displayName = \"Image\";\n\n// src/img.tsx\nimport { chakra as chakra2, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar Img = forwardRef3((props, ref) => /* @__PURE__ */ React.createElement(chakra2.img, {\n  ref,\n  as: NativeImage,\n  className: \"chakra-image\",\n  ...props\n}));\nexport {\n  Image2 as Image,\n  Img,\n  shouldShowFallbackImage,\n  useImage\n};\n","import React, { useState } from \"react\"\nimport {\n  Box,\n  Flex,\n  GridItem,\n  Heading,\n  SimpleGrid,\n  Text,\n} from \"@chakra-ui/react\"\n\nimport Emoji from \"./Emoji\"\n\nexport interface IBoxItem {\n  emoji: string\n  title: string\n  description: string\n}\n\nexport interface IProps {\n  items: Array<IBoxItem>\n}\n\n// Represent string as 32-bit integer\nconst hashCode = (stringPhrase: string): number => {\n  let hash = 0\n  for (const char of stringPhrase) {\n    const code = char.charCodeAt(0)\n    hash = (hash << 5) - hash + code\n    hash |= 0\n  }\n  return Math.abs(hash)\n}\n\n// Theme variables from Theme.js\nconst colors = [\n  \"gridYellow\",\n  \"gridRed\",\n  \"gridBlue\",\n  \"gridGreen\",\n  \"gridOrange\",\n  \"gridPink\",\n  \"gridPurple\",\n]\n\nconst BoxGrid: React.FC<IProps> = ({ items }) => {\n  const [indexOpen, setOpenIndex] = useState(0)\n\n  return (\n    <SimpleGrid columns={{ base: 1, lg: 4 }} my={16} borderRadius=\"sm\">\n      {items.map((item, idx: number) => {\n        let columnNumber = idx + 1\n        if (columnNumber > 4) {\n          columnNumber = columnNumber - 3\n        }\n        const colorIdx = hashCode(item.emoji) % colors.length\n        const color = colors[colorIdx]\n        const isOpen = idx === indexOpen\n\n        return (\n          <GridItem\n            as={Flex}\n            rowStart={{ ...(isOpen && { lg: 1 }) }}\n            rowEnd={{ ...(isOpen && { lg: 3 }) }}\n            colStart={{ ...(isOpen && { lg: columnNumber }) }}\n            color={isOpen ? \"black300\" : \"text\"}\n            cursor=\"pointer\"\n            bg={isOpen ? color : \"background\"}\n            direction={{\n              base: isOpen ? \"column\" : \"column-reverse\",\n              sm: isOpen ? \"column\" : \"row-reverse\",\n              lg: isOpen ? \"column\" : \"column-reverse\",\n            }}\n            align={{ base: \"center\", lg: \"stretch\" }}\n            justify=\"space-between\"\n            border=\"1px solid\"\n            borderColor=\"text\"\n            p={6}\n            _hover={{\n              bg: isOpen ? color : \"ednBackground\",\n              transition: \"transform 0.5s\",\n              transform: \"skewX(-5deg)\",\n              boxShadow: \"tableBoxShadow\",\n            }}\n            onClick={() => setOpenIndex(idx)}\n            key={idx}\n          >\n            <Emoji\n              m={2}\n              text={item.emoji}\n              fontSize=\"8xl\"\n              {...(isOpen\n                ? { mb: 8 }\n                : {\n                    alignSelf: \"center\",\n                    _hover: {\n                      transition: \"transform 50s\",\n                      transform: \"rotate(10turn)\",\n                    },\n                  })}\n            />\n            <Box>\n              <Heading\n                as=\"h3\"\n                fontSize=\"2.5rem\"\n                fontWeight=\"normal\"\n                mt={0}\n                lineHeight={1.4}\n              >\n                {item.title}\n              </Heading>\n              {isOpen && (\n                <Text fontSize=\"xl\" lineHeight={1.4} color=\"black300\">\n                  {item.description}\n                </Text>\n              )}\n            </Box>\n          </GridItem>\n        )\n      })}\n    </SimpleGrid>\n  )\n}\n\nexport default BoxGrid\n","// Libraries\nimport React from \"react\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Translation from \"./Translation\"\nimport { TranslationKey } from \"../utils/translations\"\n// Components\nimport Emoji from \"./Emoji\"\nimport { Flex, Heading, Image, Text } from \"@chakra-ui/react\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  image?: IGatsbyImageData\n  emoji?: string\n  alt?: string\n  titleKey: TranslationKey\n  descriptionKey: TranslationKey\n  className?: string\n}\n\nconst Callout: React.FC<IProps> = ({\n  image,\n  emoji,\n  alt,\n  titleKey,\n  descriptionKey,\n  children,\n  className,\n}) => (\n  <Flex\n    direction=\"column\"\n    bgGradient=\"linear-gradient(\n    49.21deg,\n    rgba(127, 127, 213, 0.2) 19.87%,\n    rgba(134, 168, 231, 0.2) 58.46%,\n    rgba(145, 234, 228, 0.2) 97.05%\n  )\"\n    p={6}\n    m={4}\n    mt={32}\n    mb={{ base: 16, lg: 4 }}\n    borderRadius=\"base\"\n    className={className}\n  >\n    {image && (\n      <Image\n        as={GatsbyImage}\n        image={image}\n        alt={alt || \"\"}\n        mt={-40}\n        alignSelf=\"center\"\n        maxW=\"263px\"\n        minH=\"200px\"\n      />\n    )}\n    <Flex direction=\"column\" justify=\"space-between\" mt={10} h=\"full\">\n      <div>\n        {emoji && <Emoji text={emoji} fontSize=\"5xl\" />}\n        <Heading as=\"h3\" fontSize=\"2xl\" lineHeight={1.4}>\n          <Translation id={titleKey} />\n        </Heading>\n        <Text color=\"text200\" fontSize=\"xl\" lineHeight=\"140%\">\n          <Translation id={descriptionKey} />\n        </Text>\n      </div>\n      {children}\n    </Flex>\n  </Flex>\n)\n\nexport default Callout\n","import React from \"react\"\nimport {\n  Icon,\n  Box,\n  Text,\n  Flex,\n  LinkBox,\n  LinkOverlay,\n  useToken,\n} from \"@chakra-ui/react\"\nimport { AiOutlineArrowRight } from \"react-icons/ai\"\nimport Emoji from \"./Emoji\"\nimport Link from \"./Link\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  to: string\n  isExternal?: boolean\n}\n\nconst DocLink: React.FC<IProps> = ({ to, children, isExternal = false }) => {\n  const linkBoxShadowColor = useToken(\"colors\", \"primary\")\n\n  return (\n    <LinkBox\n      padding={4}\n      borderRadius=\"sm\"\n      color=\"text\"\n      border=\"1px\"\n      borderStyle=\"solid\"\n      borderColor=\"border\"\n      _hover={{\n        background: \"tableBackgroundHover\",\n        borderRadius: \"base\",\n        boxShadow: `0 0 1px ${linkBoxShadowColor}`,\n      }}\n    >\n      <Flex\n        zIndex={1}\n        display=\"flex\"\n        flexDirection=\"row\"\n        flex={1}\n        justifyContent=\"space-between\"\n      >\n        <Flex align=\"center\">\n          <Emoji fontSize=\"md\" mr={4} text=\":page_with_curl:\" />\n        </Flex>\n        <Box flex={1} flexDirection=\"column\">\n          <LinkOverlay\n            href={to}\n            as={Link}\n            isExternal={isExternal}\n            textDecoration=\"none\"\n            _hover={{ textDecoration: \"none\" }}\n            hideArrow\n          >\n            <Text color=\"text300\" fontWeight=\"semibold\" margin={0}>\n              {children}\n            </Text>\n          </LinkOverlay>\n        </Box>\n        <Icon\n          as={AiOutlineArrowRight}\n          alignSelf=\"center\"\n          minWidth={8}\n          boxSize={6}\n          marginX={6}\n          _groupHover={{\n            fill: \"primary\",\n            transition: \"transform 0.1s\",\n            transform: \"scale(1.2)\",\n            rotate: isExternal ? \"-45deg\" : \"0\",\n          }}\n        />\n      </Flex>\n    </LinkBox>\n  )\n}\n\nexport default DocLink\n","import React from \"react\"\nimport { Box } from \"@chakra-ui/react\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  className?: string\n}\n\nconst GhostCard: React.FC<IProps> = ({ children, className }) => (\n  <Box position=\"relative\" mt=\"2\" alignSelf=\"stretch\" className={className}>\n    <Box\n      zIndex=\"hide\"\n      position=\"absolute\"\n      backgroundColor=\"ghostCardGhost\"\n      bottom=\"2\"\n      left=\"2\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      borderRadius=\"2px\"\n      height=\"full\"\n      width=\"full\"\n    />\n    <Box\n      className=\"ghost-card-base\"\n      height=\"full\"\n      width=\"full\"\n      borderRadius=\"2px\"\n      zIndex={2}\n      padding=\"6\"\n      background=\"ghostCardBackground\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      textAlign=\"left\"\n    >\n      {children}\n    </Box>\n  </Box>\n)\n\nexport default GhostCard\n","import React from \"react\"\nimport { Flex } from \"@chakra-ui/react\"\nimport Emoji from \"./Emoji\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  className?: string\n  emoji?: string\n  isWarning?: boolean\n  shouldCenter?: boolean\n  shouldSpaceBetween?: boolean\n}\n\nconst InfoBanner: React.FC<IProps> = ({\n  children,\n  className,\n  emoji,\n  isWarning = false,\n  shouldCenter = false,\n  shouldSpaceBetween = false,\n  ...props\n}) => {\n  const banner = (\n    <Flex\n      align=\"center\"\n      p={6}\n      borderRadius={\"sm\"}\n      maxW={shouldCenter ? \"55rem\" : \"100%\"}\n      color=\"black300\"\n      bg={isWarning ? \"warning\" : \"infoBanner\"}\n      direction={{ base: \"column\", sm: \"row\" }}\n      {...props}\n    >\n      {emoji && (\n        <Emoji\n          flexGrow=\"0\"\n          flexShrink=\"0\"\n          mr={{ base: 0, sm: 6 }}\n          mb={{ base: 2, sm: 0 }}\n          alignSelf={{ base: \"flex-start\", sm: \"auto\" }}\n          text={emoji}\n          fontSize=\"4xl\"\n        />\n      )}\n      <Flex\n        display={{ base: \"block\", sm: shouldSpaceBetween ? \"flex\" : \"block\" }}\n        align={shouldSpaceBetween ? \"center\" : \"auto\"}\n        w={shouldSpaceBetween ? \"100%\" : \"auto\"}\n        justify={shouldSpaceBetween ? \"space-between\" : \"auto\"}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  )\n  return shouldCenter ? <Flex justify=\"center\">{banner}</Flex> : banner\n}\n\nexport default InfoBanner\n","import React, { ReactNode } from \"react\"\nimport { Box, Flex, Heading, Wrap, WrapItem } from \"@chakra-ui/react\"\n\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\n\nimport ButtonLink, { IProps as IButtonLinkProps } from \"./ButtonLink\"\nimport Button, { IProps as IButtonProps } from \"./Button\"\n\nexport interface IButtonLink extends IButtonLinkProps {\n  content: ReactNode\n}\n\nexport interface IButton extends IButtonProps {\n  content: ReactNode\n}\n\nexport interface IContent {\n  buttons?: Array<IButtonLink | IButton>\n  title: ReactNode\n  header: ReactNode\n  subtitle: ReactNode\n  image: IGatsbyImageData\n  alt: string\n}\n\nexport interface IProps {\n  content: IContent\n  isReverse?: boolean\n  children?: ReactNode\n  className?: string\n}\n\nfunction isButtonLink(button: IButton | IButtonLink): button is IButtonLink {\n  return (button as IButtonLink).to !== undefined\n}\n\nconst PageHero: React.FC<IProps> = ({\n  content,\n  isReverse = false,\n  children,\n  className,\n}) => {\n  const { buttons, title, header, subtitle, image, alt } = content\n  return (\n    <Box py={4} px={8} width=\"full\">\n      <Flex\n        justifyContent=\"space-between\"\n        mt={8}\n        px={{ base: 0, lg: 16 }}\n        direction={{ base: isReverse ? \"column\" : \"column-reverse\", lg: \"row\" }}\n        className={className}\n      >\n        <Box\n          maxW={{ base: \"full\", lg: \"container.sm\" }}\n          py={{ base: 16, lg: 32 }}\n          pl={{ base: 0, lg: 8 }}\n          mr={4}\n        >\n          <Heading\n            as=\"h1\"\n            textTransform=\"uppercase\"\n            fontSize=\"md\"\n            fontWeight=\"normal\"\n            mb={4}\n            color=\"text300\"\n            lineHeight={1.4}\n          >\n            {title}\n          </Heading>\n          <Heading\n            as=\"h2\"\n            fontWeight=\"bold\"\n            fontSize={{ base: \"2.5rem\", lg: \"5xl\" }}\n            maxW=\"full\"\n            mb={0}\n            color=\"text00\"\n            lineHeight={1.4}\n          >\n            {header}\n          </Heading>\n          <Box\n            fontSize={{ base: \"xl\", lg: \"2xl\" }}\n            lineHeight={1.4}\n            color=\"text200\"\n            mt={4}\n            mb={8}\n          >\n            {subtitle}\n          </Box>\n          {buttons && (\n            <Wrap spacing={2}>\n              {buttons.map((button, idx) => {\n                if (isButtonLink(button)) {\n                  return (\n                    <WrapItem>\n                      <ButtonLink\n                        key={idx}\n                        variant={button.variant}\n                        to={button.to}\n                      >\n                        {button.content}\n                      </ButtonLink>\n                    </WrapItem>\n                  )\n                }\n\n                if (button.toId) {\n                  return (\n                    <WrapItem>\n                      <Button\n                        key={idx}\n                        variant={button.variant}\n                        toId={button.toId}\n                      >\n                        {button.content}\n                      </Button>\n                    </WrapItem>\n                  )\n                }\n              })}\n            </Wrap>\n          )}\n          {children}\n        </Box>\n        <Box\n          as={GatsbyImage}\n          flex=\"1 1 50%\"\n          alignSelf=\"center\"\n          mt={{ base: 0, lg: 12 }}\n          ml={{ base: 0, lg: 12 }}\n          w=\"full\"\n          maxWidth={{ base: \"560px\", lg: \"624px\" }}\n          image={image}\n          imgStyle={{\n            objectFit: \"contain\",\n          }}\n          alt={alt}\n          loading=\"eager\"\n        />\n      </Flex>\n    </Box>\n  )\n}\n\nexport default PageHero\n","import React from \"react\"\nimport { Icon, Text, Center, Flex } from \"@chakra-ui/react\"\nimport { FaGithub } from \"react-icons/fa\"\nimport Emoji from \"./Emoji\"\nimport Link from \"./Link\"\n\nexport interface GitHubRepo {\n  stargazerCount: number\n  url: string\n}\n\nexport interface IProps {\n  gitHubRepo: GitHubRepo\n  className?: string\n  hideStars: boolean\n}\n\nconst GitStars: React.FC<IProps> = ({ gitHubRepo, className, hideStars }) => {\n  // Stringify with commas\n  let starsString = gitHubRepo.stargazerCount.toString()\n  const rgx = /(\\d+)(\\d{3})/\n  while (rgx.test(starsString)) {\n    starsString = starsString.replace(rgx, \"$1,$2\")\n  }\n\n  return (\n    <Link className={className} to={gitHubRepo.url} hideArrow={true}>\n      <Flex\n        background=\"lightBorder\"\n        textDecoration=\"none\"\n        border=\"1px solid\"\n        borderColor=\"lightBorder\"\n        borderRadius=\"base\"\n        float=\"right\"\n        color=\"text\"\n        _hover={{\n          boxShadow: \"0 0 1px var(--eth-colors-primary)\",\n          path: { fill: \"primary\" },\n        }}\n      >\n        {hideStars ? (\n          <Icon as={FaGithub} m={1} />\n        ) : (\n          <>\n            <Center\n              w=\"36px\"\n              justifyContent=\"space-between\"\n              fontSize=\"s\"\n              mx=\"0.325rem\"\n            >\n              <Icon as={FaGithub} />\n              <Emoji text=\":star:\" />\n            </Center>\n            <Text\n              fontSize=\"0.8125rem\"\n              px=\"0.325rem\"\n              my=\"0\"\n              background=\"searchBackgroundEmpty\"\n            >\n              {starsString}\n            </Text>\n          </>\n        )}\n      </Flex>\n    </Link>\n  )\n}\n\nexport default GitStars\n","import React, { ReactNode } from \"react\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport { useQuery, gql } from \"@apollo/client\"\nimport {\n  Badge,\n  Box,\n  Center,\n  Flex,\n  Heading,\n  HStack,\n  Img,\n  Text,\n  TextProps,\n} from \"@chakra-ui/react\"\n\nimport GitStars from \"./GitStars\"\nimport ButtonLink from \"./ButtonLink\"\n\nconst REPO_DATA = gql`\n  query RepoData(\n    $repoOwner: String!\n    $repoName: String!\n    $repoLangCount: Int!\n  ) {\n    repository(owner: $repoOwner, name: $repoName) {\n      stargazerCount\n      languages(\n        orderBy: { field: SIZE, direction: DESC }\n        first: $repoLangCount\n      ) {\n        nodes {\n          name\n        }\n      }\n      url\n    }\n  }\n`\n\nconst SubjectBadge: React.FC<{\n  subject: string\n  children: React.ReactNode\n}> = ({ subject, children }) => {\n  const backgroundProp = () => {\n    switch (subject) {\n      case \"Solidity\":\n        return \"tagYellow\"\n      case \"Vyper\":\n        return \"tagBlue\"\n      case \"web3\":\n        return \"tagTurquoise\"\n      case \"JavaScript\":\n        return \"tagRed\"\n      case \"TypeScript\":\n        return \"tagBlue\"\n      case \"Go\":\n        return \"tagTurquoise\"\n      case \"Python\":\n        return \"tagMint\"\n      case \"Rust\":\n        return \"tagOrange\"\n      case \"C#\":\n        return \"tagBlue\"\n      case \"Java\":\n        return \"tagPink\"\n      default:\n        return \"tagGray\"\n    }\n  }\n  return (\n    <Badge size=\"sm\" textTransform=\"unset\" background={backgroundProp()}>\n      {children}\n    </Badge>\n  )\n}\n\nexport interface IProps {\n  children?: React.ReactNode\n  url: string\n  background: string\n  image: IGatsbyImageData | string\n  name: string\n  description?: ReactNode\n  note?: string\n  alt?: string\n  githubUrl?: string\n  repoLangCount?: number\n  subjects?: Array<string>\n  hideStars?: boolean\n}\n\nconst ProductCard: React.FC<IProps> = ({\n  url,\n  background: bgProp,\n  image,\n  name,\n  description,\n  note = \"\",\n  alt = \"\",\n  children,\n  githubUrl = \"\",\n  repoLangCount = 1,\n  subjects,\n  hideStars = false,\n}) => {\n  const split = githubUrl.split(\"/\")\n  const repoOwner = split[split.length - 2]\n  const repoName = split[split.length - 1]\n\n  // TODO add loading state\n  const { error, data } = useQuery(REPO_DATA, {\n    variables: {\n      repoOwner,\n      repoName,\n      repoLangCount,\n    },\n    skip: !githubUrl,\n  })\n\n  const hasRepoData = data && data.repository && !error\n\n  const isImgSrc = typeof image === \"string\"\n\n  const DESCRIPTION_STYLES: TextProps = {\n    opacity: 0.8,\n    fontSize: \"sm\",\n    mb: 2,\n    lineHeight: \"140%\",\n  }\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n      color=\"text\"\n      background=\"searchBackground\"\n      boxShadow=\"0px 14px 66px rgba(0, 0, 0, 0.07)\"\n      borderRadius=\"base\"\n      border=\"1px\"\n      borderColor=\"lightBorder\"\n      textDecoration=\"none\"\n      _hover={{\n        transition: \"transform 0.1s\",\n        transform: \"scale(1.02)\",\n      }}\n    >\n      <Center\n        background={bgProp}\n        boxShadow=\"inset 0px -1px 0px rgba(0, 0, 0, 0.1)\"\n        minH=\"200px\"\n      >\n        {isImgSrc ? (\n          <img src={image} alt={alt} />\n        ) : (\n          <Img\n            as={GatsbyImage}\n            image={image}\n            alt={alt}\n            objectFit=\"contain\"\n            width=\"100%\"\n            alignSelf=\"center\"\n            maxW={{ base: \"311px\", sm: \"372px\" }}\n            maxH=\"257px\"\n          />\n        )}\n      </Center>\n      <Flex flexDirection=\"column\" p={6} textAlign=\"left\" height=\"100%\">\n        {hasRepoData && (\n          <GitStars gitHubRepo={data.repository} hideStars={hideStars} />\n        )}\n        <Heading\n          as=\"h3\"\n          fontSize=\"2xl\"\n          fontWeight={600}\n          mt={!hasRepoData ? 8 : 12}\n          mb={3}\n        >\n          {name}\n        </Heading>\n        {description && <Text {...DESCRIPTION_STYLES}>{description}</Text>}\n        {note.length > 0 && <Text {...DESCRIPTION_STYLES}>Note: {note}</Text>}\n        {children && <Box mt={4}>{children}</Box>}\n      </Flex>\n      <HStack mt={5} mb={2} px={6} spacing={3}>\n        {subjects &&\n          subjects.map((subject, idx) => (\n            <SubjectBadge key={idx} subject={subject}>\n              {subject}\n            </SubjectBadge>\n          ))}\n        {hasRepoData &&\n          data.repository.languages.nodes.map(\n            ({ name }: { name: string }, idx: number) => (\n              <SubjectBadge key={idx} subject={name}>\n                {name.toUpperCase()}\n              </SubjectBadge>\n            )\n          )}\n      </HStack>\n      <ButtonLink to={url} m={4} height={20}>\n        Open {name}\n      </ButtonLink>\n    </Flex>\n  )\n}\n\nexport default ProductCard\n","import React from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { Box, Flex, Heading, Image, useColorModeValue } from \"@chakra-ui/react\"\n\nimport ButtonLink from \"./ButtonLink\"\nimport Translation from \"./Translation\"\n\nexport interface Content {\n  title: string\n  description: string\n  link?: string\n  image?: any\n  alt: string\n  id?: string\n}\n\nexport interface IProps {\n  content: Array<Content>\n  category: string\n}\n\nconst ProductList: React.FC<IProps> = ({ content, category }) => {\n  const shadow = useColorModeValue(\"tableBox.light\", \"tableBox.dark\")\n\n  return (\n    <Box width=\"full\">\n      <Heading\n        as=\"h3\"\n        fontSize=\"2xl\"\n        borderBottom=\"2px solid\"\n        borderColor=\"border\"\n        paddingBottom={4}\n        marginBottom={0}\n      >\n        {category}\n      </Heading>\n      {content.map(({ title, description, link, image, alt, id }, idx) => (\n        <Flex\n          key={id || idx}\n          color=\"text\"\n          marginBottom=\"px\"\n          marginTop={8}\n          alignItems={{ sm: \"flex-start\" }}\n        >\n          <Box width=\"5rem\">\n            {image && (\n              <Image\n                as={GatsbyImage}\n                image={image}\n                alt={alt}\n                boxShadow={shadow}\n                borderRadius=\"sm\"\n              />\n            )}\n          </Box>\n          <Flex\n            paddingBottom={4}\n            width=\"full\"\n            alignItems={{ base: \"flex-start\", sm: \"center\" }}\n            marginLeft={{ base: 4, sm: 6 }}\n            justifyContent=\"space-between\"\n            borderBottom=\"1px solid\"\n            borderColor=\"border\"\n            flexDir={{ base: \"column\", sm: \"row\" }}\n          >\n            <Box flexDir=\"column\">\n              <Box>{title}</Box>\n              <Box fontSize=\"sm\" marginBottom={0} opacity=\"0.6\">\n                {description}\n              </Box>\n            </Box>\n            {link && (\n              <ButtonLink\n                variant=\"outline\"\n                to={link}\n                marginLeft={{ base: 0, sm: 8 }}\n                paddingY={1}\n                paddingX={6}\n                borderRadius=\"sm\"\n                marginTop={{ base: 4, sm: 0 }}\n              >\n                <Translation id=\"page-dapps-ready-button\" />\n              </ButtonLink>\n            )}\n          </Flex>\n        </Flex>\n      ))}\n    </Box>\n  )\n}\n\nexport default ProductList\n","import { Node } from \"gatsby\"\nimport {\n  getSrc as getGatsbySrc,\n  getImage as getGatsbyImage,\n  IGatsbyImageData,\n} from \"gatsby-plugin-image\"\nimport {\n  IGatsbyImageDataParent,\n  ImageDataLike as GatsbyImageDataLike,\n} from \"gatsby-plugin-image/dist/src/components/hooks\"\n\ntype FileNodeNull = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>> | null\n}\n\nexport type ImageDataLike = GatsbyImageDataLike | FileNodeNull\n\nconst isFileNodeNull = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: FileNodeNull | any\n): node is FileNodeNull => node?.childImageSharp === null\n\n/**\n * Custom temporary `getImage` function to accept `null` values in the passed\n * node image.\n *\n * This was partially fixed in https://github.com/gatsbyjs/gatsby/issues/35748#issuecomment-1188884754\n * but it still does not accept null values which are generated by GraphQL Typegen\n */\nexport function getImage(\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined {\n  if (!node) {\n    return\n  }\n\n  if (isFileNodeNull(node)) {\n    return\n  }\n\n  return getGatsbyImage(node)\n}\n\n/**\n * Custom temporary `getSrc` function to accept `null` values in the passed\n * node image.\n */\nexport function getSrc(node: ImageDataLike | null): string | undefined {\n  if (!node) {\n    return\n  }\n\n  if (isFileNodeNull(node)) {\n    return\n  }\n\n  return getGatsbySrc(node)\n}\n"],"names":["omit","object","keysToOmit","clone","Object","assign","key","useImage","props","loading","src","srcSet","onLoad","onError","crossOrigin","sizes","ignoreFallback","status","setStatus","useState","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","NativeImage","ref","htmlWidth","htmlHeight","alt","rest","width","height","displayName","Image2","fallbackSrc","fallback","align","fit","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","as","className","Img","colors","_ref","items","indexOpen","setOpenIndex","___EmotionJSX","SimpleGrid","columns","base","lg","my","borderRadius","map","item","idx","columnNumber","colorIdx","stringPhrase","hash","char","charCodeAt","Math","abs","hashCode","emoji","length","color","isOpen","GridItem","Flex","rowStart","rowEnd","colStart","cursor","bg","direction","sm","justify","border","borderColor","p","_hover","transition","transform","boxShadow","onClick","Emoji","m","text","fontSize","mb","alignSelf","Box","Heading","fontWeight","mt","lineHeight","title","Text","description","image","titleKey","descriptionKey","children","bgGradient","GatsbyImage","maxW","minH","h","Translation","id","to","isExternal","linkBoxShadowColor","useToken","LinkBox","padding","borderStyle","background","zIndex","display","flexDirection","flex","justifyContent","mr","LinkOverlay","href","Link","textDecoration","hideArrow","margin","Icon","AiOutlineArrowRight","minWidth","boxSize","marginX","_groupHover","fill","rotate","position","backgroundColor","bottom","left","textAlign","isWarning","shouldCenter","shouldSpaceBetween","banner","flexGrow","flexShrink","w","content","isReverse","buttons","header","subtitle","py","px","pl","textTransform","Wrap","spacing","button","undefined","isButtonLink","WrapItem","ButtonLink","variant","toId","Button","ml","maxWidth","imgStyle","gitHubRepo","hideStars","starsString","stargazerCount","toString","rgx","test","replace","url","float","path","FaGithub","Center","mx","REPO_DATA","gql","SubjectBadge","subject","Badge","size","backgroundProp","_ref2","bgProp","name","note","githubUrl","repoLangCount","subjects","split","repoOwner","repoName","data","useQuery","variables","skip","hasRepoData","repository","isImgSrc","DESCRIPTION_STYLES","opacity","maxH","GitStars","HStack","languages","nodes","toUpperCase","category","shadow","useColorModeValue","borderBottom","paddingBottom","marginBottom","link","marginTop","alignItems","marginLeft","flexDir","paddingY","paddingX","isFileNodeNull","node","childImageSharp","getImage","getGatsbyImage","getSrc","getGatsbySrc"],"sourceRoot":""}