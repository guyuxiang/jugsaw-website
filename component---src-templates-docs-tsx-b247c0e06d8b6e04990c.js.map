{"version":3,"file":"component---src-templates-docs-tsx-b247c0e06d8b6e04990c.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/DocsNav.tsx","webpack://ethereum-org-website/./src/components/DeveloperDocsLinks.tsx","webpack://ethereum-org-website/./src/components/RollupProductDevDoc.tsx","webpack://ethereum-org-website/./src/templates/docs.tsx"],"sourcesContent":["import React from \"react\"\nimport {\n  Box,\n  Flex,\n  FlexProps,\n  LinkBox,\n  LinkOverlay,\n  Spacer,\n  Text,\n} from \"@chakra-ui/react\"\n\nimport Link from \"./Link\"\nimport Emoji from \"./Emoji\"\nimport Translation from \"./Translation\"\n\nimport docLinks from \"../data/developer-docs-links.yaml\"\nimport { DeveloperDocsLink } from \"../types\"\nimport { TranslationKey } from \"../utils/translations\"\n\nconst TextDiv: React.FC<FlexProps> = ({ children, ...props }) => (\n  <Flex\n    direction=\"column\"\n    justify=\"space-between\"\n    maxW=\"166px\"\n    h=\"100%\"\n    wordWrap=\"break-word\"\n    p={4}\n    lineHeight={4}\n    {...props}\n  >\n    {children}\n  </Flex>\n)\n\nexport interface DocsArrayProps {\n  to: string\n  id: TranslationKey\n}\n\nconst CardLink = (props: {\n  docData: DocsArrayProps\n  isPrev?: boolean\n  isNext?: boolean\n}) => {\n  const { docData, isPrev, isNext } = props\n\n  const xPadding = {\n    ...(isPrev && { ps: \"0\" }),\n    ...(isNext && { pe: \"0\" }),\n  }\n  return (\n    <LinkBox\n      as={Flex}\n      alignItems=\"center\"\n      mt={4}\n      w=\"262px\"\n      h=\"82px\"\n      bg=\"background\"\n      border=\"1px\"\n      borderColor=\"border\"\n      borderRadius={1}\n      justify={isPrev ? \"flex-start\" : \"flex-end\"}\n    >\n      <Box textDecoration=\"none\" p={4} h=\"100%\" order={isPrev ? 0 : 1}>\n        <Emoji\n          text={isPrev ? \":point_left:\" : \":point_right:\"}\n          fontSize=\"5xl\"\n        />\n      </Box>\n      <TextDiv {...xPadding} {...(isNext && { textAlign: \"right\" })}>\n        <Text textTransform=\"uppercase\" m=\"0\">\n          <Translation id={isPrev ? \"previous\" : \"next\"} />\n        </Text>\n        <LinkOverlay\n          as={Link}\n          href={docData.to}\n          textAlign={isPrev ? \"start\" : \"end\"}\n          rel={isPrev ? \"prev\" : \"next\"}\n        >\n          <Translation id={docData.id} />\n        </LinkOverlay>\n      </TextDiv>\n    </LinkBox>\n  )\n}\n\nexport interface IProps {\n  relativePath: string\n}\n\nconst DocsNav: React.FC<IProps> = ({ relativePath }) => {\n  // Construct array of all linkable documents in order recursively\n  const docsArray: DocsArrayProps[] = []\n  const getDocs = (links: Array<DeveloperDocsLink>): void => {\n    for (let item of links) {\n      // If object has 'items' key\n      if (item.items) {\n        // And if item has a 'to' key\n        // Add 'to' path and 'id' to docsArray\n        item.to && docsArray.push({ to: item.to, id: item.id })\n        // Then recursively add sub-items\n        getDocs(item.items)\n      } else {\n        // If object has no further 'items', add and continue\n        docsArray.push({ to: item.to, id: item.id })\n      }\n    }\n  }\n\n  // Initiate recursive loop with full docLinks yaml\n  getDocs(docLinks)\n\n  // Find index that matches current page\n  let currentIndex = 0\n  for (let i = 0; i < docsArray.length; i++) {\n    if (relativePath.indexOf(docsArray[i].to) > -1) {\n      currentIndex = i\n    }\n  }\n\n  // Extract previous and next doc based on current index +/- 1\n  const previousDoc = currentIndex - 1 > 0 ? docsArray[currentIndex - 1] : null\n  const nextDoc =\n    currentIndex + 1 < docsArray.length ? docsArray[currentIndex + 1] : null\n\n  return (\n    <Flex\n      as=\"nav\"\n      aria-label=\"Paginate to document\"\n      direction={{ base: \"column-reverse\", md: \"row\" }}\n      justify=\"space-between\"\n      alignItems={{ base: \"center\", md: \"flex-start\" }}\n    >\n      {previousDoc ? <CardLink docData={previousDoc} isPrev /> : <Spacer />}\n      {nextDoc ? <CardLink docData={nextDoc} isNext /> : <Spacer />}\n    </Flex>\n  )\n}\n\nexport default DocsNav\n","import React from \"react\"\nimport { ListItem, UnorderedList } from \"@chakra-ui/react\"\nimport Translation from \"./Translation\"\nimport Link from \"./Link\"\nimport docLinks from \"../data/developer-docs-links.yaml\"\n\nexport interface IProps {\n  headerId: string\n}\n\nconst DeveloperDocsLinks: React.FC<IProps> = ({ headerId }) => (\n  <React.Fragment>\n    {docLinks\n      .filter(({ id }) => id.includes(headerId))\n      .map(({ items, id }) => (\n        <UnorderedList ml={6} spacing={3} key={id}>\n          {items &&\n            items.map(({ id, to, path, description, items }) => (\n              <ListItem key={id}>\n                {to || path ? (\n                  <Link to={to || path}>\n                    <Translation id={id} />\n                  </Link>\n                ) : (\n                  <Translation id={id} />\n                )}\n                <i>\n                  {\" – \"}\n                  <Translation id={description} />\n                </i>\n                <UnorderedList\n                  ml={6}\n                  mt={3}\n                  spacing={3}\n                  style={{ listStyleType: \"circle\" }}\n                >\n                  {items &&\n                    items.map(({ id, to, path }) => (\n                      <ListItem key={id}>\n                        <Link to={to || path}>\n                          <Translation id={id} />\n                        </Link>\n                      </ListItem>\n                    ))}\n                </UnorderedList>\n              </ListItem>\n            ))}\n        </UnorderedList>\n      ))}\n  </React.Fragment>\n)\n\nexport default DeveloperDocsLinks\n","// Libraries\nimport React from \"react\"\nimport {\n  Box,\n  Flex,\n  Heading,\n  ListItem,\n  Text,\n  UnorderedList,\n} from \"@chakra-ui/react\"\n\n// Components\nimport Link from \"./Link\"\nimport Translation from \"./Translation\"\n\n// Data\nimport _rollups from \"../data/layer-2/layer-2.json\"\n\nimport { TranslationKey } from \"../utils/translations\"\n\ntype RollupType = \"optimistic\" | \"zk\"\n\ninterface Rollup {\n  name: string\n  website: string\n  developerDocs: string\n  l2beat: string\n  bridge: string\n  bridgeWallets: Array<string>\n  blockExplorer: string\n  ecosystemPortal: string\n  tokenLists: string\n  noteKey: TranslationKey\n  purpose: Array<string>\n  descriptionKey: string\n  imageKey: string\n  background: string\n}\n\ntype Rollups = { [type in RollupType]: Array<Rollup> }\n\nconst rollups = _rollups as Rollups\n\nexport interface IProps {\n  rollupType: RollupType\n}\n\nconst RollupProductDevDoc: React.FC<IProps> = ({ rollupType }) => {\n  return (\n    <Box>\n      {rollups[rollupType].map(\n        ({ name, noteKey, website, developerDocs, l2beat }) => {\n          return (\n            <Flex my={4} background=\"rollupDevDocList\">\n              <Box p={4} pb={0}>\n                <Box>\n                  <Heading\n                    as=\"h4\"\n                    fontSize={{ base: \"md\", md: \"xl\" }}\n                    fontWeight=\"500\"\n                    lineHeight=\"1.4\"\n                    my={4}\n                  >\n                    {name}\n                  </Heading>\n                  {noteKey.length > 0 && (\n                    <Text>\n                      * <Translation id={noteKey} />\n                    </Text>\n                  )}\n                  <UnorderedList>\n                    <ListItem>\n                      <Link to={website}>\n                        <Translation id=\"rollup-component-website\" />\n                      </Link>\n                    </ListItem>\n                    <ListItem>\n                      <Link to={developerDocs}>\n                        <Translation id=\"rollup-component-developer-docs\" />\n                      </Link>\n                    </ListItem>\n                    <ListItem>\n                      <Link to={l2beat}>\n                        <Translation id=\"rollup-component-technology-and-risk-summary\" />\n                      </Link>\n                    </ListItem>\n                  </UnorderedList>\n                </Box>\n              </Box>\n            </Flex>\n          )\n        }\n      )}\n    </Box>\n  )\n}\n\nexport default RollupProductDevDoc\n","import React, { useContext } from \"react\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport styled from \"@emotion/styled\"\nimport { Badge } from \"@chakra-ui/react\"\n\nimport BannerNotification from \"../components/BannerNotification\"\nimport ButtonLink from \"../components/ButtonLink\"\nimport CallToContribute from \"../components/CallToContribute\"\nimport Card from \"../components/Card\"\nimport Codeblock from \"../components/Codeblock\"\nimport FeedbackCard from \"../components/FeedbackCard\"\nimport FileContributors from \"../components/FileContributors\"\nimport InfoBanner from \"../components/InfoBanner\"\nimport Link from \"../components/Link\"\nimport MarkdownTable from \"../components/MarkdownTable\"\nimport PageMetadata from \"../components/PageMetadata\"\nimport TableOfContents, {\n  Item as ItemTableOfContents,\n} from \"../components/TableOfContents\"\nimport SectionNav from \"../components/SectionNav\"\nimport Translation from \"../components/Translation\"\nimport Emoji from \"../components/OldEmoji\"\nimport DocsNav from \"../components/DocsNav\"\nimport DeveloperDocsLinks from \"../components/DeveloperDocsLinks\"\nimport RollupProductDevDoc from \"../components/RollupProductDevDoc\"\nimport YouTube from \"../components/YouTube\"\nimport {\n  Divider,\n  Paragraph,\n  Header1,\n  Header2,\n  Header3,\n  Header4,\n  ListItem,\n} from \"../components/SharedStyledComponents\"\nimport PostMergeBanner from \"../components/Banners/PostMergeBanner\"\n\nimport { ZenModeContext } from \"../contexts/ZenModeContext\"\nimport { isLangRightToLeft } from \"../utils/translations\"\nimport { Lang } from \"../utils/languages\"\nimport { Context } from \"../types\"\n\nconst Page = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-bottom: 1px solid ${(props) => props.theme.colors.border};\n`\n\nconst ContentContainer = styled.div<{ isZenMode: boolean }>`\n  display: flex;\n  justify-content: ${(props) => (props.isZenMode ? \"center\" : \"space-between\")};\n  width: 100%;\n  padding: 0 2rem 0 0;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    padding: 0;\n  }\n  background-color: ${(props) => props.theme.colors.ednBackground};\n`\n\n// Apply styles for classes within markdown here\nconst Content = styled.article`\n  flex: 1 1 ${(props) => props.theme.breakpoints.m};\n  max-width: ${(props) => props.theme.breakpoints.m};\n  padding: 3rem 4rem 4rem;\n  margin: 0px auto;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    max-width: 100%;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    padding: 8rem 2rem 2rem;\n  }\n\n  .featured {\n    padding-left: 1rem;\n    margin-left: -1rem;\n    border-left: 1px dotted ${(props) => props.theme.colors.primary};\n  }\n\n  .citation {\n    p {\n      color: ${(props) => props.theme.colors.text200};\n    }\n  }\n`\n\nconst H1 = styled(Header1)`\n  font-size: 2.5rem;\n  font-family: ${(props) => props.theme.fonts.monospace};\n  text-transform: uppercase;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    font-size: 2rem;\n    line-height: 1.2;\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n`\n\nconst H2 = styled(Header2)`\n  font-family: ${(props) => props.theme.fonts.monospace};\n  text-transform: uppercase;\n\n  font-size: 1.5rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid ${(props) => props.theme.colors.border};\n`\n\nconst H3 = styled(Header3)`\n  margin-top: 3rem;\n\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    font-size: 1rem;\n    font-weight: 600;\n  }\n`\n\nconst H4 = styled(Header4)`\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    font-size: 1rem;\n    font-weight: 600;\n  }\n`\n\nconst BackToTop = styled.div`\n  margin-top: 3rem;\n  display: flex;\n  padding-top: 2rem;\n  border-top: 1px solid ${(props) => props.theme.colors.border};\n  @media (min-width: ${(props) => props.theme.breakpoints.l}) {\n    display: none;\n  }\n`\n\n// Note: you must pass components to MDXProvider in order to render them in markdown files\n// https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx/#mdxprovider\nconst components = {\n  a: Link,\n  h1: H1,\n  h2: H2,\n  h3: H3,\n  h4: H4,\n  p: Paragraph,\n  li: ListItem,\n  pre: Codeblock,\n  table: MarkdownTable,\n  ButtonLink,\n  InfoBanner,\n  Card,\n  Divider,\n  SectionNav,\n  Badge,\n  CallToContribute,\n  Emoji,\n  DeveloperDocsLinks,\n  YouTube,\n  RollupProductDevDoc,\n}\n\nconst Contributors = styled(FileContributors)`\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    padding-bottom: 2rem;\n  }\n`\n\nconst DocsPage = ({\n  data: { siteData, pageData: mdx },\n  pageContext: { relativePath, slug },\n}: PageProps<Queries.DocsPageQuery, Context>) => {\n  const { isZenMode } = useContext(ZenModeContext)\n\n  if (!siteData || !mdx?.frontmatter)\n    throw new Error(\"Docs page template query does not return expected values\")\n  if (!mdx?.frontmatter?.title)\n    throw new Error(\"Required `title` property missing for docs template\")\n  if (!relativePath)\n    throw new Error(\"Required `relativePath` is missing on pageContext\")\n\n  const isRightToLeft = isLangRightToLeft(mdx.frontmatter.lang as Lang)\n\n  const tocItems = mdx.tableOfContents?.items as Array<ItemTableOfContents>\n  const isPageIncomplete = !!mdx.frontmatter.incomplete\n\n  const { editContentUrl } = siteData.siteMetadata || {}\n  const absoluteEditPath = `${editContentUrl}${relativePath}`\n\n  return (\n    <Page dir={isRightToLeft ? \"rtl\" : \"ltr\"}>\n      <PageMetadata\n        title={mdx.frontmatter.title}\n        description={mdx.frontmatter.description}\n      />\n      {isPageIncomplete && (\n        <BannerNotification shouldShow={isPageIncomplete}>\n          <Translation id=\"banner-page-incomplete\" />\n        </BannerNotification>\n      )}\n      <ContentContainer isZenMode={isZenMode}>\n        <Content>\n          <H1 id=\"top\">{mdx.frontmatter.title}</H1>\n          <Contributors\n            relativePath={relativePath}\n            editPath={absoluteEditPath}\n          />\n          <TableOfContents\n            slug={slug}\n            editPath={absoluteEditPath}\n            items={tocItems}\n            isMobile={true}\n            maxDepth={mdx.frontmatter.sidebarDepth!}\n            hideEditButton={!!mdx.frontmatter.hideEditButton}\n          />\n          <MDXProvider components={components}>\n            <MDXRenderer>{mdx.body}</MDXRenderer>\n          </MDXProvider>\n          {isPageIncomplete && <CallToContribute editPath={absoluteEditPath} />}\n          <BackToTop>\n            <a href=\"#top\">\n              <Translation id=\"back-to-top\" /> ↑\n            </a>\n          </BackToTop>\n          <FeedbackCard isArticle />\n          <DocsNav relativePath={relativePath}></DocsNav>\n        </Content>\n        {tocItems && (\n          <TableOfContents\n            slug={slug}\n            editPath={absoluteEditPath}\n            items={tocItems}\n            maxDepth={mdx.frontmatter.sidebarDepth!}\n            hideEditButton={!!mdx.frontmatter.hideEditButton}\n            pt={isPageIncomplete ? \"5rem\" : \"3rem\"}\n          />\n        )}\n      </ContentContainer>\n    </Page>\n  )\n}\n\nexport const query = graphql`\n  query DocsPage($relativePath: String) {\n    siteData: site {\n      siteMetadata {\n        editContentUrl\n      }\n    }\n    pageData: mdx(fields: { relativePath: { eq: $relativePath } }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        description\n        lang\n        incomplete\n        sidebarDepth\n        isOutdated\n        hideEditButton\n      }\n      body\n      tableOfContents\n    }\n  }\n`\n\nexport default DocsPage\n"],"names":["TextDiv","_ref","children","props","___EmotionJSX","Flex","direction","justify","maxW","h","wordWrap","p","lineHeight","CardLink","docData","isPrev","isNext","xPadding","ps","pe","LinkBox","as","alignItems","mt","w","bg","border","borderColor","borderRadius","Box","textDecoration","order","Emoji","text","fontSize","textAlign","Text","textTransform","m","Translation","id","LinkOverlay","Link","href","to","rel","_ref2","relativePath","docsArray","getDocs","links","item","items","push","docLinks","currentIndex","i","length","indexOf","previousDoc","nextDoc","base","md","Spacer","headerId","React","includes","map","_ref3","UnorderedList","ml","spacing","key","_ref4","path","description","ListItem","style","listStyleType","_ref5","rollups","rollupType","name","noteKey","website","developerDocs","l2beat","my","background","pb","Heading","fontWeight","Page","target","theme","colors","ContentContainer","isZenMode","breakpoints","l","ednBackground","Content","primary","text200","H1","Header1","fonts","monospace","H2","Header2","H3","Header3","H4","Header4","BackToTop","components","a","h1","h2","h3","h4","Paragraph","li","pre","Codeblock","table","MarkdownTable","ButtonLink","InfoBanner","Card","Divider","SectionNav","Badge","CallToContribute","DeveloperDocsLinks","YouTube","RollupProductDevDoc","Contributors","FileContributors","data","siteData","pageData","mdx","pageContext","slug","useContext","ZenModeContext","frontmatter","Error","_mdx$frontmatter","title","isRightToLeft","isLangRightToLeft","lang","tocItems","tableOfContents","_mdx$tableOfContents","isPageIncomplete","incomplete","editContentUrl","siteMetadata","absoluteEditPath","dir","PageMetadata","BannerNotification","shouldShow","editPath","TableOfContents","isMobile","maxDepth","sidebarDepth","hideEditButton","MDXProvider","MDXRenderer","body","FeedbackCard","isArticle","DocsNav","pt"],"sourceRoot":""}