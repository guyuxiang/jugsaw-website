{"version":3,"file":"a39c196d-9ed3710136aa79961086.js","mappings":"qZAkCA,MAAMA,GAAO,OAAOC,EAAAA,EAAW,qBAAlB,CAAmB,2IAS1BC,GAAgB,OAAOC,EAAAA,GAAO,qBAAd,CAAe,uBACbC,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,oBAKrDC,GAAE,qHAKgBJ,GAAUA,EAAMC,MAAMC,YAAYG,GAAC,sBAKrDC,GAAI,6IASJC,GAAM,wKASNC,GAAS,yGAISR,GAAUA,EAAMC,MAAMC,YAAYO,GAAC,6BAKrDC,GAAmB,OAAOC,EAAAA,EAAU,qBAAjB,CAAkB,kFAKnBX,GAAUA,EAAMC,MAAMC,YAAYO,GAAC,wCAMrDG,GAAqB,OAAOb,EAAAA,GAAO,qBAAd,CAAe,uBACnBc,IAAAA,IAAC,MAAEZ,GAAO,SAAKA,EAAMC,YAAYG,CAAC,uBAKnDS,GAAe,OAAOC,EAAAA,EAAS,qBAAhB,CAAiB,kOAoBhCC,GAAQ,6HAKUhB,GAAUA,EAAMC,MAAMC,YAAYO,GAAC,iDAMrDQ,GAAU,kGAGQjB,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,wDAMrDe,GAAG,6GAIelB,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,wDAMrDgB,GAAc,mHAKInB,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,iBAKrDiB,GAAW,2CACLpB,GAAUA,EAAMC,MAAMoB,OAAOC,SAAO,0FAQ1CC,GAAsB,OAAOC,EAAAA,GAAa,qBAApB,CAAqB,iCAE1CxB,GAAUA,EAAMC,MAAMoB,OAAOI,oBAAkB,sDAKhDC,GAAa,OAAOC,EAAAA,EAAU,qBAAjB,CAAkB,mEAId3B,GAAUA,EAAMC,MAAMoB,OAAOO,MAAI,gBACvC5B,GAAUA,EAAMC,MAAMoB,OAAOQ,YAAU,gBACvC7B,GAAUA,EAAMC,MAAMoB,OAAOS,eAAa,wBACnC9B,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,2CAKrD4B,GAAO,OAAOJ,EAAAA,EAAU,qBAAjB,CAAkB,mEAIR3B,GAAUA,EAAMC,MAAMoB,OAAOO,MAAI,gBACvC5B,GAAUA,EAAMC,MAAMoB,OAAOQ,YAAU,gBACvC7B,GAAUA,EAAMC,MAAMoB,OAAOS,eAAa,wBACnC9B,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,2CAKrD6B,GAAsB,OAAOC,EAAAA,GAAa,qBAApB,CAAqB,wGAMzBjC,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,kHAQrD+B,GAAa,OAAOrC,EAAAA,EAAW,qBAAlB,CAAmB,qFAMhCsC,GAAe,OAAOtC,EAAAA,EAAW,qBAAlB,CAAmB,sCAIlCuC,GAAQ,gHAIUpC,GAAUA,EAAMC,MAAMC,YAAYG,GAAC,sBAKrDgC,GAAsB,kDACXrC,GAAUA,EAAMC,MAAMoB,OAAOiB,kBAAgB,+IAQnCtC,GAAUA,EAAMC,MAAMoB,OAAOO,MAAI,6BAC9B5B,GAAUA,EAAMC,MAAMoB,OAAOO,MAAI,wBACvC5B,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,wGASrDoC,GAAgB,kDACLvC,GAAUA,EAAMC,MAAMoB,OAAOmB,eAAa,qHAOhCxC,GAAUA,EAAMC,MAAMoB,OAAOO,MAAI,6BAC9B5B,GAAUA,EAAMC,MAAMoB,OAAOO,MAAI,wBACvC5B,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,qHAUrDsC,GAAY,kDACDzC,GAAUA,EAAMC,MAAMoB,OAAOqB,aAAW,qHAO9B1C,GAAUA,EAAMC,MAAMoB,OAAOO,MAAI,6BAC9B5B,GAAUA,EAAMC,MAAMoB,OAAOO,MAAI,wBACvC5B,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,qHAUrDwC,GAAiB,iDACN3C,GAAUA,EAAMC,MAAMoB,OAAOuB,aAAW,kKAS9B5C,GAAUA,EAAMC,MAAMoB,OAAOO,MAAI,6BAC9B5B,GAAUA,EAAMC,MAAMoB,OAAOO,MAAI,wBACvC5B,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,wGASrD0C,GAAkB,iDACP7C,GAAUA,EAAMC,MAAMoB,OAAOyB,eAAa,qHAOhC9C,GAAUA,EAAMC,MAAMoB,OAAOO,MAAI,6BAC9B5B,GAAUA,EAAMC,MAAMoB,OAAOO,MAAI,wBACvC5B,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,iDAMrD4C,GAAiB,OAAOC,EAAAA,GAAU,oBAAjB,CAAkB,8HAQjBhD,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,oBAKrD8C,IAAiB,uHAMjBC,IAAkB,OAAOF,EAAAA,GAAU,oBAAjB,CAAkB,oEAKlBhD,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,uCAGnCH,GAAUA,EAAMC,MAAMC,YAAYG,GAAC,oBAKrD8C,IAAa,OAAOC,EAAAA,EAAI,oBAAX,CAAY,SACpBpD,GAAUA,EAAMC,MAAMoB,OAAOO,MAAI,wBACpB5B,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,oBAG9CH,GAAUA,EAAMC,MAAMoB,OAAOgC,SAAO,oBAGpCrD,GAAUA,EAAMC,MAAMoB,OAAOgC,SAAO,mBAGpCrD,GAAUA,EAAMC,MAAMoB,OAAOgC,SAAO,MAI3CC,IAAE,6EAIFC,IAAQ,oGAGUvD,GAAUA,EAAMC,MAAMC,YAAYG,GAAC,wBAKrDmD,IAAiB,OAAOC,EAAAA,EAAa,oBAApB,CAAqB,sDAGrBzD,GAAUA,EAAMC,MAAMoB,OAAOO,MAAI,gBACvC5B,GAAUA,EAAMC,MAAMoB,OAAOS,eAAa,wBACnC9B,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,uCAMrDuD,IAAsB,OAAOC,EAAAA,EAAa,oBAApB,CAAqB,4DAGzB3D,GAAUA,EAAMC,MAAMC,YAAYC,GAAC,uCAga3D,UA1ZiByD,IAGkC,IAHjC,KAChBC,EACAC,aAAa,SAAEC,EAAW,OACiB,EAC3C,MAAMC,GAAOC,EAAAA,EAAAA,MACP,EAACC,EAAY,EAACC,IAAgBC,EAAAA,EAAAA,WAAS,IACvC,EAACC,EAAW,EAACC,IAAiBF,EAAAA,EAAAA,UAAS,GACvCG,GAAMC,EAAAA,EAAAA,IAAkBT,GAAY,MAAQ,OAOlDU,EAAAA,EAAAA,KAEA,MAAMC,EAAQ,CACZ,CACEC,OAAOC,EAAAA,EAAAA,GAASf,EAAKgB,YACrBC,OAAOC,EAAAA,EAAAA,IAAmB,sCAAuCf,GACjEgB,aAAaD,EAAAA,EAAAA,IACX,4CACAf,GAEFiB,KAAKF,EAAAA,EAAAA,IAAmB,0CAA2Cf,GACnEkB,GAAI,yBAEN,CACEP,OAAOC,EAAAA,EAAAA,GAASf,EAAKsB,UACrBL,OAAOC,EAAAA,EAAAA,IAAmB,mCAAoCf,GAC9DgB,aAAaD,EAAAA,EAAAA,IACX,yCACAf,GAEFiB,KAAKF,EAAAA,EAAAA,IAAmB,uCAAwCf,GAChEkB,GAAI,aAEN,CACEP,OAAOC,EAAAA,EAAAA,GAASf,EAAKuB,WACrBN,OAAOC,EAAAA,EAAAA,IAAmB,qCAAsCf,GAChEgB,aAAaD,EAAAA,EAAAA,IACX,2CACAf,GAEFiB,KAAKF,EAAAA,EAAAA,IAAmB,yCAA0Cf,GAClEkB,GAAI,WAEN,CACEP,OAAOC,EAAAA,EAAAA,GAASf,EAAKwB,UACrBP,OAAOC,EAAAA,EAAAA,IAAmB,oCAAqCf,GAC/DgB,aAAaD,EAAAA,EAAAA,IACX,0CACAf,GAEFiB,KAAKF,EAAAA,EAAAA,IAAmB,wCAAyCf,GACjEkB,GAAI,iBAIFI,EAAQ,CACZ,CACEX,OAAOC,EAAAA,EAAAA,GAASf,EAAK0B,OACrBN,KAAKF,EAAAA,EAAAA,IAAmB,qCAAsCf,GAC9Dc,OAAOC,EAAAA,EAAAA,IAAmB,iCAAkCf,GAC5DgB,aAAaD,EAAAA,EAAAA,IACX,uCACAf,GAEFkB,GAAI,cAEN,CACEP,OAAOC,EAAAA,EAAAA,GAASf,EAAK2B,qBACrBP,KAAKF,EAAAA,EAAAA,IAAmB,uCAAwCf,GAChEc,OAAOC,EAAAA,EAAAA,IAAmB,mCAAoCf,GAC9DgB,aAAaD,EAAAA,EAAAA,IACX,yCACAf,GAEFkB,GAAI,gBAEN,CACEP,OAAOC,EAAAA,EAAAA,GAASf,EAAK4B,YACrBR,KAAKF,EAAAA,EAAAA,IAAmB,sCAAuCf,GAC/Dc,OAAOC,EAAAA,EAAAA,IAAmB,kCAAmCf,GAC7DgB,aAAaD,EAAAA,EAAAA,IACX,wCACAf,GAEFkB,GAAI,gBASFQ,GAAmC,CACvC,CACEZ,OAAOC,EAAAA,EAAAA,IACL,6CACAf,GAEFgB,aAAaD,EAAAA,EAAAA,IACX,mDACAf,GAEF2B,aAAc,oBACdC,KAAMC,EAAAA,GAER,CACEf,OAAOC,EAAAA,EAAAA,IACL,6CACAf,GAEFgB,aAAaD,EAAAA,EAAAA,IACX,mDACAf,GAEF2B,aAAc,oBACdC,KAAME,EAAAA,GAER,CACEhB,OAAOC,EAAAA,EAAAA,IACL,6CACAf,GAEFgB,aAAaD,EAAAA,EAAAA,IACX,mDACAf,GAEF2B,aAAc,sBACdC,KAAMG,EAAAA,GAER,CACEjB,OAAOC,EAAAA,EAAAA,IACL,6CACAf,GAEFgB,aAAaD,EAAAA,EAAAA,IACX,mDACAf,GAEF2B,aAAc,oBACdC,KAAMI,EAAAA,IAIV,OACEC,EAAAA,EAAAA,IAAC3F,EAAI,CAACiE,IAAKA,IACT0B,EAAAA,EAAAA,IAACC,EAAAA,EAAY,CACXpB,OAAOC,EAAAA,EAAAA,IAAmB,wBAAyBf,GACnDgB,aAAaD,EAAAA,EAAAA,IAAmB,8BAA+Bf,MAEjEiC,EAAAA,EAAAA,IAACrG,EAAI,CACH+E,OAAOC,EAAAA,EAAAA,GAASf,EAAKsC,MACrBlB,KAAKF,EAAAA,EAAAA,IAAmB,4BAA6Bf,GACrDoC,QAAQ,WAEVH,EAAAA,EAAAA,IAACI,EAAAA,EAAO,OACRJ,EAAAA,EAAAA,IAAC1F,EAAM,MACL0F,EAAAA,EAAAA,IAAC7F,EAAE,MACD6F,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,uBAElBN,EAAAA,EAAAA,IAAC7E,EAAW,MACV6E,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,6BAElBN,EAAAA,EAAAA,IAACtF,EAAAA,EAAU,CAAC6F,QAAQ,UAAUtB,GAAG,YAC/Be,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,+BAGpBN,EAAAA,EAAAA,IAAC1E,EAAmB,MAClB0E,EAAAA,EAAAA,IAACnG,EAAa,MACZmG,EAAAA,EAAAA,IAACjF,EAAQ,MACPiF,EAAAA,EAAAA,IAAC/C,GAAe,MACd+C,EAAAA,EAAAA,IAAC3C,GAAE,MACD2C,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,6BAElBN,EAAAA,EAAAA,IAAC7D,EAAQ,MACP6D,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,0CAGpBN,EAAAA,EAAAA,IAAC9E,EAAc,MACb8E,EAAAA,EAAAA,IAAC/D,EAAU,CACTyC,OAAOC,EAAAA,EAAAA,GAASf,EAAK4C,WACrBxB,KAAKF,EAAAA,EAAAA,IACH,mCACAf,QAKRiC,EAAAA,EAAAA,IAACjE,EAAmB,KACjB0C,EAAMgC,KAAI,CAACC,EAAMC,KAChBX,EAAAA,EAAAA,IAACvE,EAAU,CACTmF,IAAKD,EACL9B,MAAO6B,EAAK7B,MACZE,YAAa2B,EAAK3B,YAClBE,GAAIyB,EAAKzB,GACTP,MAAOgC,EAAKhC,MACZM,IAAK0B,EAAK1B,YAMpBgB,EAAAA,EAAAA,IAAC5D,EAAsB,MACrB4D,EAAAA,EAAAA,IAAChF,EAAU,MACTgF,EAAAA,EAAAA,IAAClD,EAAc,MACbkD,EAAAA,EAAAA,IAAC1C,GAAQ,MACP0C,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,kCAElBN,EAAAA,EAAAA,IAAC7D,EAAQ,MACP6D,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,8CAElBN,EAAAA,EAAAA,IAACzF,EAAS,MACRyF,EAAAA,EAAAA,IAACtF,EAAAA,EAAU,CAACuE,GAAG,uBACbe,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,yCAElBN,EAAAA,EAAAA,IAACvF,EAAgB,CAAC8F,QAAQ,UAAUtB,GAAG,UACrCe,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,qDAItBN,EAAAA,EAAAA,IAAC9E,EAAc,MACb8E,EAAAA,EAAAA,IAAC9D,EAAY,CACXwC,OAAOC,EAAAA,EAAAA,GAASf,EAAKiD,UACrB7B,KAAKF,EAAAA,EAAAA,IACH,wCACAf,SAMViC,EAAAA,EAAAA,IAAC1D,EAAgB,MACf0D,EAAAA,EAAAA,IAAC/E,EAAG,MACF+E,EAAAA,EAAAA,IAAClD,EAAc,MACbkD,EAAAA,EAAAA,IAAChD,GAAiB,MAChBgD,EAAAA,EAAAA,IAAC1C,GAAQ,MACP0C,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,sBAElBN,EAAAA,EAAAA,IAAC7D,EAAQ,MACP6D,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,kCAElBN,EAAAA,EAAAA,IAAAA,MAAAA,MACEA,EAAAA,EAAAA,IAACtF,EAAAA,EAAU,CAACuE,GAAG,WACbe,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,gCAKxBN,EAAAA,EAAAA,IAAC9E,EAAc,MACb8E,EAAAA,EAAAA,IAAC9D,EAAY,CACXwC,OAAOC,EAAAA,EAAAA,GAASf,EAAKkD,QACrB9B,KAAKF,EAAAA,EAAAA,IAAmB,4BAA6Bf,SAK7DiC,EAAAA,EAAAA,IAACxD,EAAY,MACXwD,EAAAA,EAAAA,IAAC/E,EAAG,MACF+E,EAAAA,EAAAA,IAAC9E,EAAc,MACb8E,EAAAA,EAAAA,IAAC9D,EAAY,CACXwC,OAAOC,EAAAA,EAAAA,GAASf,EAAKmD,gBACrB/B,KAAKF,EAAAA,EAAAA,IAAmB,qBAAsBf,OAGlDiC,EAAAA,EAAAA,IAAClD,EAAc,MACbkD,EAAAA,EAAAA,IAAChD,GAAiB,MAChBgD,EAAAA,EAAAA,IAAC1C,GAAQ,MACP0C,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,qBAElBN,EAAAA,EAAAA,IAAC7D,EAAQ,MACP6D,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,iCAElBN,EAAAA,EAAAA,IAAAA,MAAAA,MACEA,EAAAA,EAAAA,IAACtF,EAAAA,EAAU,CAACuE,GAAG,UACbe,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,iCAO5BN,EAAAA,EAAAA,IAACtD,EAAiB,MAChBsD,EAAAA,EAAAA,IAAC/E,EAAG,MACF+E,EAAAA,EAAAA,IAAClD,EAAc,MACbkD,EAAAA,EAAAA,IAAChD,GAAiB,MAChBgD,EAAAA,EAAAA,IAAC1C,GAAQ,MACP0C,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,0BAElBN,EAAAA,EAAAA,IAAC7D,EAAQ,MACP6D,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,sCAElBN,EAAAA,EAAAA,IAACzF,EAAS,MACRyF,EAAAA,EAAAA,IAACtF,EAAAA,EAAU,CAACuE,GAAG,gCACbe,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,iCAElBN,EAAAA,EAAAA,IAACvF,EAAgB,CAAC8F,QAAQ,UAAUtB,GAAG,cACrCe,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,8CAKxBN,EAAAA,EAAAA,IAAC9E,EAAc,MACb8E,EAAAA,EAAAA,IAAC9D,EAAY,CACXwC,OAAOC,EAAAA,EAAAA,GAASf,EAAKoD,QACrBhC,KAAKF,EAAAA,EAAAA,IAAmB,gCAAiCf,SAKjEiC,EAAAA,EAAAA,IAACpD,EAAkB,MACjBoD,EAAAA,EAAAA,IAACrF,EAAkB,MACjBqF,EAAAA,EAAAA,IAACzC,GAAc,CACb0D,QAASxB,GACTyB,aApTiBZ,IACzBjC,EAAciC,GACdpC,GAAa,EAAK,EAmTViD,UAAU,sCACVC,KAAK,OACLC,QAAM,MAGVrB,EAAAA,EAAAA,IAAClD,EAAc,MACbkD,EAAAA,EAAAA,IAAChD,GAAiB,MAChBgD,EAAAA,EAAAA,IAAC1C,GAAQ,MACP0C,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,4BAElBN,EAAAA,EAAAA,IAAC7D,EAAQ,MACP6D,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,wCAElBN,EAAAA,EAAAA,IAACzF,EAAS,MACRyF,EAAAA,EAAAA,IAACtF,EAAAA,EAAU,CAACuE,GAAG,iBACbe,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,sCAKxBN,EAAAA,EAAAA,IAACnF,EAAY,CACXyG,OAAQrD,EACRsD,UAAWrD,EACXW,MAAOY,GAAarB,GAAYS,QAEhCmB,EAAAA,EAAAA,IAACwB,EAAAA,EAAS,CACR9B,aAAcD,GAAarB,GAAYsB,aACvC+B,eAAe,EACfC,cAAY,GAEXjC,GAAarB,GAAYuB,SAIhCK,EAAAA,EAAAA,IAAC1E,EAAmB,MAClB0E,EAAAA,EAAAA,IAACnG,EAAa,MACZmG,EAAAA,EAAAA,IAAAA,KAAAA,MACEA,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,qCAElBN,EAAAA,EAAAA,IAAC7D,EAAQ,MACP6D,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,yCAGpBN,EAAAA,EAAAA,IAAC2B,EAAAA,EAAY,QAEf3B,EAAAA,EAAAA,IAACnG,EAAa,MACZmG,EAAAA,EAAAA,IAAAA,KAAAA,MACEA,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,+BAGpBN,EAAAA,EAAAA,IAACnG,EAAa,MACZmG,EAAAA,EAAAA,IAACjE,EAAmB,KACjBsD,EAAMoB,KAAI,CAACmB,EAAMjB,KAEdX,EAAAA,EAAAA,IAAClE,EAAI,CACH8E,IAAKD,EACL9B,MAAO+C,EAAK/C,MACZE,YAAa6C,EAAK7C,YAClBC,IAAK4C,EAAK5C,IACVC,GAAI2C,EAAK3C,GACTP,MAAOkD,EAAKlD,YAKpBsB,EAAAA,EAAAA,IAACvC,GAAmB,CAClBoE,SAAU,uCACVC,eAAgB,6CAChBpD,OAAOC,EAAAA,EAAAA,GAASf,EAAKmE,SACrBC,cAAe,IACfhD,KAAKF,EAAAA,EAAAA,IACH,2CACAf,KAGFiC,EAAAA,EAAAA,IAACzF,EAAS,MACRyF,EAAAA,EAAAA,IAACtF,EAAAA,EAAU,CAACuE,GAAG,mBACbe,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAACC,GAAG,4CAElBN,EAAAA,EAAAA,IAACvF,EAAgB,CACf8F,QAAQ,UACRtB,GAAG,qDAEHe,EAAAA,EAAAA,IAAC9C,GAAU,CAAC+E,KAAK,WAAW,cAK/B,C","sources":["webpack://ethereum-org-website/./src/pages/index.tsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport { useIntl } from \"react-intl\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport styled from \"@emotion/styled\"\n\nimport type { Context } from \"../types\"\n\nimport ActionCard from \"../components/ActionCard\"\nimport ButtonLink from \"../components/ButtonLink\"\nimport Icon from \"../components/Icon\"\nimport CalloutBanner from \"../components/CalloutBanner\"\nimport CodeModal from \"../components/CodeModal\"\nimport Codeblock from \"../components/Codeblock\"\nimport Morpher from \"../components/Morpher\"\nimport PageMetadata from \"../components/PageMetadata\"\nimport StatsBoxGrid from \"../components/StatsBoxGrid\"\nimport Translation from \"../components/Translation\"\nimport TitleCardList, { ITitleCardItem } from \"../components/TitleCardList\"\nimport {\n  CardContainer,\n  Content,\n  GrayContainer,\n  LeftColumn,\n} from \"../components/SharedStyledComponents\"\nimport { translateMessageId, isLangRightToLeft } from \"../utils/translations\"\nimport { getImage } from \"../utils/image\"\n\nimport SimpleWalletContent from \"!!raw-loader!../data/SimpleWallet.sol\"\nimport SimpleTokenContent from \"!!raw-loader!../data/SimpleToken.sol\"\nimport CreateWalletContent from \"!!raw-loader!../data/CreateWallet.js\"\nimport SimpleDomainRegistryContent from \"!!raw-loader!../data/SimpleDomainRegistry.sol\"\nimport { useConsoleEasterEgg } from \"../hooks/useConsoleEasterEgg\"\n\nconst Hero = styled(GatsbyImage)`\n  width: 100%;\n  min-height: 380px;\n  max-height: 440px;\n  background-size: cover;\n  background: no-repeat 50px;\n  margin-bottom: 2rem;\n`\n\nconst StyledContent = styled(Content)`\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    padding: 1rem;\n  }\n`\n\nconst H1 = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin: 0;\n  text-align: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    font-size: 2rem;\n  }\n`\n\nconst Page = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 100%;\n  margin: 0 auto;\n`\n\nconst Header = styled.header`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n  padding: 0 2rem;\n`\n\nconst ButtonRow = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: 0.5rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    flex-direction: column;\n  }\n`\n\nconst StyledButtonLink = styled(ButtonLink)`\n  gap: 0.5rem;\n  margin-top: 0rem;\n  display: flex;\n  align-items: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    margin-top: 1rem;\n    margin-left: 0rem;\n  }\n`\n\nconst CodeExampleContent = styled(Content)`\n  @media (max-width: ${({ theme }) => theme.breakpoints.s}) {\n    padding: 1rem;\n  }\n`\n\nconst CodeboxModal = styled(CodeModal)`\n  .modal-component-container {\n    padding: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 50%;\n  }\n  .modal-component {\n    max-width: 100%;\n    max-height: 50%;\n    padding: 0rem;\n  }\n  .modal-component-content {\n    margin-top: 3rem;\n    width: 100%;\n    overflow: auto;\n  }\n`\n\nconst IntroRow = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 3rem;\n  margin-top: 1rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    flex-direction: column-reverse;\n    margin: 0rem;\n  }\n`\n\nconst RowReverse = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column-reverse;\n    align-items: center;\n  }\n`\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column-reverse;\n    align-items: center;\n  }\n`\n\nconst ImageContainer = styled.div`\n  background: \"#f1fffd\";\n  display: flex;\n  height: 100%;\n  width: 100%;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    width: 75%;\n  }\n`\n\nconst Description = styled.p`\n  color: ${(props) => props.theme.colors.text200};\n  max-width: 55ch;\n  text-align: center;\n  align-self: center;\n  font-size: 1.25rem;\n  margin-top: 1rem;\n`\n\nconst StyledGrayContainer = styled(GrayContainer)`\n  box-shadow: inset 0px 0px 0px\n    ${(props) => props.theme.colors.tableItemBoxShadow};\n  padding: 0rem;\n  padding-bottom: 4rem;\n  margin-top: 0rem;\n`\nconst StyledCard = styled(ActionCard)`\n  min-width: 480px;\n  margin: 1rem;\n  border-radius: 2px;\n  border: 1px solid ${(props) => props.theme.colors.text};\n  background: ${(props) => props.theme.colors.background};\n  box-shadow: ${(props) => props.theme.colors.cardBoxShadow};\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin: 0;\n    min-width: min(100%, 240px);\n  }\n`\nconst Tout = styled(ActionCard)`\n  min-width: 400px;\n  margin: 1rem;\n  border-radius: 2px;\n  border: 1px solid ${(props) => props.theme.colors.text};\n  background: ${(props) => props.theme.colors.background};\n  box-shadow: ${(props) => props.theme.colors.cardBoxShadow};\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin: 0;\n    min-width: min(100%, 240px);\n  }\n`\nconst StyledCardContainer = styled(CardContainer)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: 100%;\n  margin: 0rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    display: grid;\n    gap: 2rem;\n    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n    grid-template-columns: 1fr;\n  }\n`\n\nconst IntroImage = styled(GatsbyImage)`\n  width: 100%;\n  background-size: cover;\n  background: no-repeat 50px;\n`\n\nconst FeatureImage = styled(GatsbyImage)`\n  width: 100%;\n`\n\nconst Subtitle = styled.div`\n  margin-bottom: 2rem;\n  font-size: 1.25rem;\n  line-height: 140%;\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    font-size: 1rem;\n  }\n`\n\nconst EthereumIntroContainer = styled.div`\n  background: ${(props) => props.theme.colors.homeBoxTurquoise};\n  display: flex;\n  align-items: center;\n  flex-direction: row-reverse;\n  padding-left: 2rem;\n  width: 100%;\n  height: 720px;\n  margin-top: -1px;\n  border-top: 1px solid ${(props) => props.theme.colors.text};\n  border-bottom: 1px solid ${(props) => props.theme.colors.text};\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column-reverse;\n    height: 100%;\n    padding-top: 2rem;\n    padding-left: 0rem;\n    padding-bottom: 2rem;\n  }\n`\n\nconst FinanceContainer = styled.div`\n  background: ${(props) => props.theme.colors.homeBoxOrange};\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  width: 100%;\n  height: 720px;\n  margin-top: -1px;\n  border-top: 1px solid ${(props) => props.theme.colors.text};\n  border-bottom: 1px solid ${(props) => props.theme.colors.text};\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column-reverse;\n    height: 100%;\n    height: 100%;\n    padding-top: 2rem;\n    padding-right: 0rem;\n    padding-bottom: 2rem;\n  }\n`\n\nconst NftContainer = styled.div`\n  background: ${(props) => props.theme.colors.homeBoxMint};\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  width: 100%;\n  height: 720px;\n  margin-top: -1px;\n  border-top: 1px solid ${(props) => props.theme.colors.text};\n  border-bottom: 1px solid ${(props) => props.theme.colors.text};\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column-reverse;\n    height: 100%;\n    height: 100%;\n    padding-top: 2rem;\n    padding-right: 0rem;\n    padding-bottom: 2rem;\n  }\n`\n\nconst InternetContainer = styled.div`\n  background: ${(props) => props.theme.colors.homeBoxPink};\n  display: flex;\n  align-items: center;\n  flex-direction: row-reverse;\n  padding-left: 2rem;\n  height: 720px;\n  width: 100%;\n  margin-top: -1px;\n  margin-bottom: 0rem;\n  border-top: 1px solid ${(props) => props.theme.colors.text};\n  border-bottom: 1px solid ${(props) => props.theme.colors.text};\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column-reverse;\n    height: 100%;\n    padding-top: 2rem;\n    padding-left: 0rem;\n    padding-bottom: 2rem;\n  }\n`\n\nconst DeveloperContainer = styled.div`\n  background: ${(props) => props.theme.colors.homeBoxPurple};\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  height: 720px;\n  width: 100%;\n  margin-top: -1px;\n  border-top: 1px solid ${(props) => props.theme.colors.text};\n  border-bottom: 1px solid ${(props) => props.theme.colors.text};\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column-reverse;\n    height: 100%;\n  }\n`\n\nconst FeatureContent = styled(LeftColumn)`\n  padding: 6rem;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    padding: 2rem;\n  }\n`\n\nconst LeftColumnContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst IntroLeftColumn = styled(LeftColumn)`\n  padding: 6rem;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    padding: 2rem;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    padding: 0rem;\n  }\n`\n\nconst StyledIcon = styled(Icon)`\n  fill: ${(props) => props.theme.colors.text};\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n  }\n  &:hover {\n    fill: ${(props) => props.theme.colors.primary};\n  }\n  &:active {\n    fill: ${(props) => props.theme.colors.primary};\n  }\n  &:focus {\n    fill: ${(props) => props.theme.colors.primary};\n  }\n`\n\nconst H2 = styled.h2`\n  margin: 0 0 1.5rem;\n`\n\nconst StyledH2 = styled.h2`\n  margin-bottom: 0.5rem;\n  font-family: sans-serif;\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    font-size: 1.5rem;\n  }\n`\n\nconst StyledCardList = styled(TitleCardList)`\n  margin-left: 4rem;\n  max-width: 624px;\n  border: 1px solid ${(props) => props.theme.colors.text};\n  box-shadow: ${(props) => props.theme.colors.cardBoxShadow};\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-left: 0rem;\n    max-width: 100%;\n  }\n`\n\nconst StyledCalloutBanner = styled(CalloutBanner)`\n  margin: 8rem 0 4rem;\n  padding: 2rem 4rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-bottom: 4rem;\n    padding: 2rem;\n  }\n`\n\nconst HomePage = ({\n  data,\n  pageContext: { language = \"en\" },\n}: PageProps<Queries.IndexPageQuery, Context>) => {\n  const intl = useIntl()\n  const [isModalOpen, setModalOpen] = useState(false)\n  const [activeCode, setActiveCode] = useState(0)\n  const dir = isLangRightToLeft(language) ? \"rtl\" : \"ltr\"\n\n  const toggleCodeExample = (id: number): void => {\n    setActiveCode(id)\n    setModalOpen(true)\n  }\n\n  useConsoleEasterEgg()\n\n  const cards = [\n    {\n      image: getImage(data.robotfixed),\n      title: translateMessageId(\"page-index-get-started-wallet-title\", intl),\n      description: translateMessageId(\n        \"page-index-get-started-wallet-description\",\n        intl\n      ),\n      alt: translateMessageId(\"page-index-get-started-wallet-image-alt\", intl),\n      to: \"/wallets/find-wallet/\",\n    },\n    {\n      image: getImage(data.ethfixed),\n      title: translateMessageId(\"page-index-get-started-eth-title\", intl),\n      description: translateMessageId(\n        \"page-index-get-started-eth-description\",\n        intl\n      ),\n      alt: translateMessageId(\"page-index-get-started-eth-image-alt\", intl),\n      to: \"/get-eth/\",\n    },\n    {\n      image: getImage(data.dogefixed),\n      title: translateMessageId(\"page-index-get-started-dapps-title\", intl),\n      description: translateMessageId(\n        \"page-index-get-started-dapps-description\",\n        intl\n      ),\n      alt: translateMessageId(\"page-index-get-started-dapps-image-alt\", intl),\n      to: \"/dapps/\",\n    },\n    {\n      image: getImage(data.devfixed),\n      title: translateMessageId(\"page-index-get-started-devs-title\", intl),\n      description: translateMessageId(\n        \"page-index-get-started-devs-description\",\n        intl\n      ),\n      alt: translateMessageId(\"page-index-get-started-devs-image-alt\", intl),\n      to: \"/developers/\",\n    },\n  ]\n\n  const touts = [\n    {\n      image: getImage(data.merge),\n      alt: translateMessageId(\"page-index-tout-upgrades-image-alt\", intl),\n      title: translateMessageId(\"page-index-tout-upgrades-title\", intl),\n      description: translateMessageId(\n        \"page-index-tout-upgrades-description\",\n        intl\n      ),\n      to: \"/upgrades/\",\n    },\n    {\n      image: getImage(data.infrastructurefixed),\n      alt: translateMessageId(\"page-index-tout-enterprise-image-alt\", intl),\n      title: translateMessageId(\"page-index-tout-enterprise-title\", intl),\n      description: translateMessageId(\n        \"page-index-tout-enterprise-description\",\n        intl\n      ),\n      to: \"/enterprise/\",\n    },\n    {\n      image: getImage(data.enterprise),\n      alt: translateMessageId(\"page-index-tout-community-image-alt\", intl),\n      title: translateMessageId(\"page-index-tout-community-title\", intl),\n      description: translateMessageId(\n        \"page-index-tout-community-description\",\n        intl\n      ),\n      to: \"/community/\",\n    },\n  ]\n\n  interface CodeExample extends ITitleCardItem {\n    codeLanguage: string\n    code: string\n  }\n\n  const codeExamples: Array<CodeExample> = [\n    {\n      title: translateMessageId(\n        \"page-index-developers-code-example-title-0\",\n        intl\n      ),\n      description: translateMessageId(\n        \"page-index-developers-code-example-description-0\",\n        intl\n      ),\n      codeLanguage: \"language-solidity\",\n      code: SimpleWalletContent,\n    },\n    {\n      title: translateMessageId(\n        \"page-index-developers-code-example-title-1\",\n        intl\n      ),\n      description: translateMessageId(\n        \"page-index-developers-code-example-description-1\",\n        intl\n      ),\n      codeLanguage: \"language-solidity\",\n      code: SimpleTokenContent,\n    },\n    {\n      title: translateMessageId(\n        \"page-index-developers-code-example-title-2\",\n        intl\n      ),\n      description: translateMessageId(\n        \"page-index-developers-code-example-description-2\",\n        intl\n      ),\n      codeLanguage: \"language-javascript\",\n      code: CreateWalletContent,\n    },\n    {\n      title: translateMessageId(\n        \"page-index-developers-code-example-title-3\",\n        intl\n      ),\n      description: translateMessageId(\n        \"page-index-developers-code-example-description-3\",\n        intl\n      ),\n      codeLanguage: \"language-solidity\",\n      code: SimpleDomainRegistryContent,\n    },\n  ]\n\n  return (\n    <Page dir={dir}>\n      <PageMetadata\n        title={translateMessageId(\"page-index-meta-title\", intl)}\n        description={translateMessageId(\"page-index-meta-description\", intl)}\n      />\n      <Hero\n        image={getImage(data.hero)!}\n        alt={translateMessageId(\"page-index-hero-image-alt\", intl)}\n        loading=\"eager\"\n      />\n      <Morpher />\n      <Header>\n        <H1>\n          <Translation id=\"page-index-title\" />\n        </H1>\n        <Description>\n          <Translation id=\"page-index-description\" />\n        </Description>\n        <ButtonLink variant=\"outline\" to=\"/learn/\">\n          <Translation id=\"page-index-title-button\" />\n        </ButtonLink>\n      </Header>\n      <StyledGrayContainer>\n        <StyledContent>\n          <IntroRow>\n            <IntroLeftColumn>\n              <H2>\n                <Translation id=\"page-index-get-started\" />\n              </H2>\n              <Subtitle>\n                <Translation id=\"page-index-get-started-description\" />\n              </Subtitle>\n            </IntroLeftColumn>\n            <ImageContainer>\n              <IntroImage\n                image={getImage(data.hackathon)!}\n                alt={translateMessageId(\n                  \"page-index-get-started-image-alt\",\n                  intl\n                )}\n              />\n            </ImageContainer>\n          </IntroRow>\n          <StyledCardContainer>\n            {cards.map((card, idx) => (\n              <StyledCard\n                key={idx}\n                title={card.title}\n                description={card.description}\n                to={card.to}\n                image={card.image!}\n                alt={card.alt}\n              />\n            ))}\n          </StyledCardContainer>\n        </StyledContent>\n      </StyledGrayContainer>\n      <EthereumIntroContainer>\n        <RowReverse>\n          <FeatureContent>\n            <StyledH2>\n              <Translation id=\"page-index-what-is-ethereum\" />\n            </StyledH2>\n            <Subtitle>\n              <Translation id=\"page-index-what-is-ethereum-description\" />\n            </Subtitle>\n            <ButtonRow>\n              <ButtonLink to=\"/what-is-ethereum/\">\n                <Translation id=\"page-index-what-is-ethereum-button\" />\n              </ButtonLink>\n              <StyledButtonLink variant=\"outline\" to=\"/eth/\">\n                <Translation id=\"page-index-what-is-ethereum-secondary-button\" />\n              </StyledButtonLink>\n            </ButtonRow>\n          </FeatureContent>\n          <ImageContainer>\n            <FeatureImage\n              image={getImage(data.ethereum)!}\n              alt={translateMessageId(\n                \"page-index-what-is-ethereum-image-alt\",\n                intl\n              )}\n            />\n          </ImageContainer>\n        </RowReverse>\n      </EthereumIntroContainer>\n      <FinanceContainer>\n        <Row>\n          <FeatureContent>\n            <LeftColumnContent>\n              <StyledH2>\n                <Translation id=\"page-index-defi\" />\n              </StyledH2>\n              <Subtitle>\n                <Translation id=\"page-index-defi-description\" />\n              </Subtitle>\n              <div>\n                <ButtonLink to=\"/defi/\">\n                  <Translation id=\"page-index-defi-button\" />\n                </ButtonLink>\n              </div>\n            </LeftColumnContent>\n          </FeatureContent>\n          <ImageContainer>\n            <FeatureImage\n              image={getImage(data.impact)!}\n              alt={translateMessageId(\"page-index-defi-image-alt\", intl)}\n            />\n          </ImageContainer>\n        </Row>\n      </FinanceContainer>\n      <NftContainer>\n        <Row>\n          <ImageContainer>\n            <FeatureImage\n              image={getImage(data.infrastructure)!}\n              alt={translateMessageId(\"page-index-nft-alt\", intl)}\n            />\n          </ImageContainer>\n          <FeatureContent>\n            <LeftColumnContent>\n              <StyledH2>\n                <Translation id=\"page-index-nft\" />\n              </StyledH2>\n              <Subtitle>\n                <Translation id=\"page-index-nft-description\" />\n              </Subtitle>\n              <div>\n                <ButtonLink to=\"/nft/\">\n                  <Translation id=\"page-index-nft-button\" />\n                </ButtonLink>\n              </div>\n            </LeftColumnContent>\n          </FeatureContent>\n        </Row>\n      </NftContainer>\n      <InternetContainer>\n        <Row>\n          <FeatureContent>\n            <LeftColumnContent>\n              <StyledH2>\n                <Translation id=\"page-index-internet\" />\n              </StyledH2>\n              <Subtitle>\n                <Translation id=\"page-index-internet-description\" />\n              </Subtitle>\n              <ButtonRow>\n                <ButtonLink to=\"/dapps/?category=technology\">\n                  <Translation id=\"page-index-internet-button\" />\n                </ButtonLink>\n                <StyledButtonLink variant=\"outline\" to=\"/wallets/\">\n                  <Translation id=\"page-index-internet-secondary-button\" />\n                </StyledButtonLink>\n              </ButtonRow>\n            </LeftColumnContent>\n          </FeatureContent>\n          <ImageContainer>\n            <FeatureImage\n              image={getImage(data.future)!}\n              alt={translateMessageId(\"page-index-internet-image-alt\", intl)}\n            />\n          </ImageContainer>\n        </Row>\n      </InternetContainer>\n      <DeveloperContainer>\n        <CodeExampleContent>\n          <StyledCardList\n            content={codeExamples}\n            clickHandler={toggleCodeExample}\n            headerKey=\"page-index-developers-code-examples\"\n            icon=\"code\"\n            isCode\n          />\n        </CodeExampleContent>\n        <FeatureContent>\n          <LeftColumnContent>\n            <StyledH2>\n              <Translation id=\"page-index-developers\" />\n            </StyledH2>\n            <Subtitle>\n              <Translation id=\"page-index-developers-description\" />\n            </Subtitle>\n            <ButtonRow>\n              <ButtonLink to=\"/developers/\">\n                <Translation id=\"page-index-developers-button\" />\n              </ButtonLink>\n            </ButtonRow>\n          </LeftColumnContent>\n        </FeatureContent>\n        <CodeboxModal\n          isOpen={isModalOpen}\n          setIsOpen={setModalOpen}\n          title={codeExamples[activeCode].title}\n        >\n          <Codeblock\n            codeLanguage={codeExamples[activeCode].codeLanguage}\n            allowCollapse={false}\n            fromHomepage\n          >\n            {codeExamples[activeCode].code}\n          </Codeblock>\n        </CodeboxModal>\n      </DeveloperContainer>\n      <StyledGrayContainer>\n        <StyledContent>\n          <h2>\n            <Translation id=\"page-index-network-stats-title\" />\n          </h2>\n          <Subtitle>\n            <Translation id=\"page-index-network-stats-subtitle\" />\n          </Subtitle>\n        </StyledContent>\n        <StatsBoxGrid />\n      </StyledGrayContainer>\n      <StyledContent>\n        <h2>\n          <Translation id=\"page-index-touts-header\" />\n        </h2>\n      </StyledContent>\n      <StyledContent>\n        <StyledCardContainer>\n          {touts.map((tout, idx) => {\n            return (\n              <Tout\n                key={idx}\n                title={tout.title}\n                description={tout.description}\n                alt={tout.alt}\n                to={tout.to}\n                image={tout.image!}\n              />\n            )\n          })}\n        </StyledCardContainer>\n        <StyledCalloutBanner\n          titleKey={\"page-index-contribution-banner-title\"}\n          descriptionKey={\"page-index-contribution-banner-description\"}\n          image={getImage(data.finance)!}\n          maxImageWidth={600}\n          alt={translateMessageId(\n            \"page-index-contribution-banner-image-alt\",\n            intl\n          )}\n        >\n          <ButtonRow>\n            <ButtonLink to=\"/contributing/\">\n              <Translation id=\"page-index-contribution-banner-button\" />\n            </ButtonLink>\n            <StyledButtonLink\n              variant=\"outline\"\n              to=\"https://github.com/ethereum/ethereum-org-website\"\n            >\n              <StyledIcon name=\"github\" /> GitHub\n            </StyledButtonLink>\n          </ButtonRow>\n        </StyledCalloutBanner>\n      </StyledContent>\n    </Page>\n  )\n}\n\nexport default HomePage\n\nexport const query = graphql`\n  query IndexPage {\n    hero: file(relativePath: { eq: \"home/hero.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, quality: 100)\n      }\n    }\n    ethereum: file(relativePath: { eq: \"what-is-ethereum.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, quality: 100)\n      }\n    }\n    enterprise: file(relativePath: { eq: \"enterprise-eth.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 320\n          layout: FIXED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    dogefixed: file(relativePath: { eq: \"doge-computer.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 320\n          layout: FIXED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    robotfixed: file(relativePath: { eq: \"wallet-cropped.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 320\n          layout: FIXED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    ethfixed: file(relativePath: { eq: \"eth.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 320\n          layout: FIXED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    devfixed: file(relativePath: { eq: \"developers-eth-blocks.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 320\n          layout: FIXED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    future: file(relativePath: { eq: \"future_transparent.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, quality: 100)\n      }\n    }\n    impact: file(relativePath: { eq: \"impact_transparent.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, quality: 100)\n      }\n    }\n    finance: file(relativePath: { eq: \"finance_transparent.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 600\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    hackathon: file(relativePath: { eq: \"hackathon_transparent.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, quality: 100)\n      }\n    }\n    infrastructure: file(\n      relativePath: { eq: \"infrastructure_transparent.png\" }\n    ) {\n      childImageSharp {\n        gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, quality: 100)\n      }\n    }\n    infrastructurefixed: file(\n      relativePath: { eq: \"infrastructure_transparent.png\" }\n    ) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 320\n          layout: FIXED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    merge: file(relativePath: { eq: \"upgrades/merge.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 320\n          layout: FIXED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n  }\n`\n"],"names":["Hero","GatsbyImage","StyledContent","Content","props","theme","breakpoints","l","H1","s","Page","Header","ButtonRow","m","StyledButtonLink","ButtonLink","CodeExampleContent","_ref","CodeboxModal","CodeModal","IntroRow","RowReverse","Row","ImageContainer","Description","colors","text200","StyledGrayContainer","GrayContainer","tableItemBoxShadow","StyledCard","ActionCard","text","background","cardBoxShadow","Tout","StyledCardContainer","CardContainer","IntroImage","FeatureImage","Subtitle","EthereumIntroContainer","homeBoxTurquoise","FinanceContainer","homeBoxOrange","NftContainer","homeBoxMint","InternetContainer","homeBoxPink","DeveloperContainer","homeBoxPurple","FeatureContent","LeftColumn","LeftColumnContent","IntroLeftColumn","StyledIcon","Icon","primary","H2","StyledH2","StyledCardList","TitleCardList","StyledCalloutBanner","CalloutBanner","_ref2","data","pageContext","language","intl","useIntl","isModalOpen","setModalOpen","useState","activeCode","setActiveCode","dir","isLangRightToLeft","useConsoleEasterEgg","cards","image","getImage","robotfixed","title","translateMessageId","description","alt","to","ethfixed","dogefixed","devfixed","touts","merge","infrastructurefixed","enterprise","codeExamples","codeLanguage","code","SimpleWalletContent","SimpleTokenContent","CreateWalletContent","SimpleDomainRegistryContent","___EmotionJSX","PageMetadata","hero","loading","Morpher","Translation","id","variant","hackathon","map","card","idx","key","ethereum","impact","infrastructure","future","content","clickHandler","headerKey","icon","isCode","isOpen","setIsOpen","Codeblock","allowCollapse","fromHomepage","StatsBoxGrid","tout","titleKey","descriptionKey","finance","maxImageWidth","name"],"sourceRoot":""}