{"version":3,"file":"component---src-pages-developers-tutorials-tsx-0fec6d51e76fa36e57f9.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/Button/index.tsx","webpack://ethereum-org-website/./src/components/FeedbackCard.tsx","webpack://ethereum-org-website/./node_modules/@chakra-ui/tag/dist/index.esm.js","webpack://ethereum-org-website/./src/components/Tag.tsx","webpack://ethereum-org-website/./src/components/TutorialMetadata.tsx","webpack://ethereum-org-website/./src/components/TutorialTags.tsx","webpack://ethereum-org-website/./src/utils/tutorials.ts"],"sourcesContent":["import React from \"react\"\nimport { Button as ChakraButton, ButtonProps } from \"@chakra-ui/react\"\n\nimport { scrollIntoView } from \"../../utils/scrollIntoView\"\n\nexport interface IProps extends ButtonProps {\n  toId?: string\n}\n\nconst Button: React.FC<IProps> = ({ toId, children, ...props }) => {\n  const handleOnClick = () => {\n    if (!toId) {\n      return\n    }\n\n    scrollIntoView(toId)\n  }\n\n  return (\n    <ChakraButton onClick={handleOnClick} {...props}>\n      {children}\n    </ChakraButton>\n  )\n}\n\nexport default Button\n","// Library imports\nimport React, { ReactNode, useState } from \"react\"\nimport { Flex, FlexProps, Heading } from \"@chakra-ui/react\"\n// Component imports\nimport Button from \"./Button\"\nimport Translation from \"./Translation\"\n// SVG imports\nimport { FeedbackThumbsUpIcon } from \"./icons\"\n// Utility imports\nimport { trackCustomEvent } from \"../utils/matomo\"\n// Hook imports\nimport { useSurvey } from \"../hooks/useSurvey\"\n\nexport interface IProps extends FlexProps {\n  prompt?: string\n  isArticle?: boolean\n}\n\nconst FeedbackCard: React.FC<IProps> = ({\n  prompt,\n  isArticle = false,\n  ...props\n}) => {\n  const [feedbackSubmitted, setFeedbackSubmitted] = useState(false)\n  const surveyUrl = useSurvey(feedbackSubmitted)\n\n  const location = typeof window !== \"undefined\" ? window.location.href : \"\"\n  const isTutorial = location.includes(\"tutorials\")\n\n  const getTitle = (feedbackSubmitted: boolean): ReactNode => {\n    if (!feedbackSubmitted) {\n      if (prompt) return prompt\n      if (isTutorial) return <Translation id=\"feedback-card-prompt-tutorial\" />\n      if (isArticle) return <Translation id=\"feedback-card-prompt-article\" />\n      return <Translation id=\"feedback-card-prompt-page\" />\n    }\n    return <Translation id=\"feedback-widget-thank-you-title\" />\n  }\n\n  const handleSubmit = (choice: boolean): void => {\n    trackCustomEvent({\n      eventCategory: `Page is helpful feedback`,\n      eventAction: `Clicked`,\n      eventName: String(choice),\n    })\n    setFeedbackSubmitted(true)\n  }\n  const handleSurveyOpen = (): void => {\n    trackCustomEvent({\n      eventCategory: `Feedback survey opened`,\n      eventAction: `Clicked`,\n      eventName: \"Feedback survey opened\",\n    })\n    window && surveyUrl && window.open(surveyUrl, \"_blank\")\n  }\n  return (\n    <Flex\n      border=\"1px\"\n      borderColor=\"border\"\n      bg=\"feedbackGradient\"\n      borderRadius=\"base\"\n      p={6}\n      direction=\"column\"\n      mb={4}\n      mt={8}\n      w=\"full\"\n      {...props}\n    >\n      <Flex direction=\"column\" gap={4}>\n        <Heading as=\"h3\" m={0} mb={2} fontSize=\"1.375rem\" fontWeight=\"bold\">\n          {getTitle(feedbackSubmitted)}\n        </Heading>\n        {feedbackSubmitted && (\n          <p>\n            <Translation id=\"feedback-widget-thank-you-subtitle\" />{\" \"}\n            <Translation id=\"feedback-widget-thank-you-subtitle-ext\" />\n          </p>\n        )}\n        <Flex gap={4}>\n          {!feedbackSubmitted ? (\n            <>\n              <Button\n                variant=\"outline-color\"\n                leftIcon={<FeedbackThumbsUpIcon />}\n                onClick={() => handleSubmit(true)}\n              >\n                <Translation id=\"yes\" />\n              </Button>\n              <Button\n                variant=\"outline-color\"\n                leftIcon={<FeedbackThumbsUpIcon transform=\"scaleY(-1)\" />}\n                onClick={() => handleSubmit(false)}\n              >\n                <Translation id=\"no\" />\n              </Button>\n            </>\n          ) : (\n            <Button variant=\"outline-color\" onClick={handleSurveyOpen}>\n              <Translation id=\"feedback-widget-thank-you-cta\" />\n            </Button>\n          )}\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default FeedbackCard\n","// ../../react-shim.js\nimport React from \"react\";\n\n// src/tag.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nvar [TagStylesProvider, useTagStyles] = createContext({\n  name: `TagStylesContext`,\n  errorMessage: `useTagStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tag />\" `\n});\nvar Tag = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props);\n  const ownProps = omitThemingProps(props);\n  const containerStyles = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container\n  };\n  return /* @__PURE__ */ React.createElement(TagStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(chakra.span, {\n    ref,\n    ...ownProps,\n    __css: containerStyles\n  }));\n});\nTag.displayName = \"Tag\";\nvar TagLabel = forwardRef((props, ref) => {\n  const styles = useTagStyles();\n  return /* @__PURE__ */ React.createElement(chakra.span, {\n    ref,\n    noOfLines: 1,\n    ...props,\n    __css: styles.label\n  });\n});\nTagLabel.displayName = \"TagLabel\";\nvar TagLeftIcon = forwardRef((props, ref) => /* @__PURE__ */ React.createElement(Icon, {\n  ref,\n  verticalAlign: \"top\",\n  marginEnd: \"0.5rem\",\n  ...props\n}));\nTagLeftIcon.displayName = \"TagLeftIcon\";\nvar TagRightIcon = forwardRef((props, ref) => /* @__PURE__ */ React.createElement(Icon, {\n  ref,\n  verticalAlign: \"top\",\n  marginStart: \"0.5rem\",\n  ...props\n}));\nTagRightIcon.displayName = \"TagRightIcon\";\nvar TagCloseIcon = (props) => /* @__PURE__ */ React.createElement(Icon, {\n  verticalAlign: \"inherit\",\n  viewBox: \"0 0 512 512\",\n  ...props\n}, /* @__PURE__ */ React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n}));\nTagCloseIcon.displayName = \"TagCloseIcon\";\nvar TagCloseButton = (props) => {\n  const { isDisabled, children, ...rest } = props;\n  const styles = useTagStyles();\n  const btnStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: \"0\",\n    ...styles.closeButton\n  };\n  return /* @__PURE__ */ React.createElement(chakra.button, {\n    \"aria-label\": \"close\",\n    ...rest,\n    type: \"button\",\n    disabled: isDisabled,\n    __css: btnStyles\n  }, children || /* @__PURE__ */ React.createElement(TagCloseIcon, null));\n};\nTagCloseButton.displayName = \"TagCloseButton\";\nexport {\n  Tag,\n  TagCloseButton,\n  TagLabel,\n  TagLeftIcon,\n  TagRightIcon,\n  useTagStyles\n};\n","import React from \"react\"\nimport { Tag as ChakraTag, TagRightIcon, TagLabel } from \"@chakra-ui/react\"\nimport { MdAdd, MdClose } from \"react-icons/md\"\n\nexport interface IProps {\n  name: string\n  onClick: (tagName: string) => void\n  value: string\n  isActive: boolean\n  shouldShowIcon: boolean\n}\n\nconst Tag: React.FC<IProps> = ({\n  name,\n  onClick,\n  value,\n  isActive = true,\n  shouldShowIcon = true,\n}) => {\n  return (\n    <ChakraTag\n      onClick={() => onClick(value)}\n      variant={isActive ? \"active\" : \"custom\"}\n    >\n      <TagLabel>{name}</TagLabel>\n      {shouldShowIcon && (\n        <TagRightIcon boxSize=\"18px\" as={isActive ? MdClose : MdAdd} ml=\"4\" />\n      )}\n    </ChakraTag>\n  )\n}\n\nexport default Tag\n","import React from \"react\"\nimport { useIntl } from \"react-intl\"\nimport { Badge, Box, Flex, HStack, Text } from \"@chakra-ui/react\"\nimport CopyToClipboard from \"./CopyToClipboard\"\nimport Link from \"./Link\"\nimport TutorialTags from \"./TutorialTags\"\nimport { getLocaleTimestamp } from \"../utils/time\"\nimport Emoji from \"./Emoji\"\nimport Translation from \"./Translation\"\nimport { Lang } from \"../utils/languages\"\nimport { TranslationKey } from \"../utils/translations\"\n\nexport interface IProps {\n  tutorial: any\n}\n\nexport enum Skill {\n  BEGINNER = \"beginner\",\n  INTERMEDIATE = \"intermediate\",\n  ADVANCED = \"advanced\",\n}\n\nexport const getSkillTranslationId = (skill: Skill): TranslationKey =>\n  `page-tutorial-${Skill[skill.toUpperCase() as keyof typeof Skill]}`\n\nconst TutorialMetadata: React.FC<IProps> = ({ tutorial }) => {\n  const intl = useIntl()\n\n  const frontmatter = tutorial.frontmatter\n  const hasSource = frontmatter.source && frontmatter.sourceUrl\n  const published = frontmatter.published\n  const author = frontmatter.author\n  const address = frontmatter.address\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n      borderBottomWidth={{ base: 0, lg: \"1px\" }}\n      borderBottomColor=\"border\"\n    >\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" w=\"full\" mb={8}>\n        <Flex flexWrap=\"wrap\" w=\"full\">\n          <TutorialTags tags={frontmatter.tags} />\n        </Flex>\n        <Flex\n          as={Badge}\n          variant=\"secondary\"\n          alignSelf=\"flex-start\"\n          mb={2}\n          whiteSpace=\"nowrap\"\n        >\n          <Translation id={getSkillTranslationId(frontmatter.skill)} />\n        </Flex>\n      </Flex>\n      <HStack\n        mb={6}\n        flexWrap=\"wrap\"\n        mt={-4}\n        fontSize=\"sm\"\n        color=\"text300\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-start\"\n        spacing={4}\n      >\n        {author && (\n          <Box>\n            <Emoji fontSize=\"sm\" mr={2} text=\":writing_hand:\" />\n            {author}\n          </Box>\n        )}\n        {hasSource && (\n          <Box>\n            <Emoji fontSize=\"sm\" mr={2} text=\":books:\" />\n            <Link to={frontmatter.sourceUrl}>{frontmatter.source}</Link>\n          </Box>\n        )}\n        {published && (\n          <Box>\n            <Emoji fontSize=\"sm\" mr={2} text=\":calendar:\" />\n            {getLocaleTimestamp(intl.locale as Lang, published)}\n          </Box>\n        )}\n        <Box>\n          <Emoji fontSize=\"sm\" mr={2} text=\":stopwatch:\" />\n          {Math.round(tutorial.fields.readingTime.minutes)}{\" \"}\n          <Translation id=\"comp-tutorial-metadata-minute-read\" />\n        </Box>\n      </HStack>\n      <HStack\n        mb={6}\n        flexWrap=\"wrap\"\n        mt={-4}\n        fontSize=\"sm\"\n        color=\"text300\"\n        justifyContent=\"flex-start\"\n      >\n        {address && (\n          <Flex flexWrap=\"wrap\" w=\"full\" mr={4}>\n            <CopyToClipboard text={frontmatter.address}>\n              {(isCopied) => (\n                <Text color=\"primary\" cursor=\"pointer\">\n                  {!isCopied ? (\n                    <Box\n                      overflow=\"hidden\"\n                      textOverflow=\"ellipsis\"\n                      fontFamily=\"monospace\"\n                      bg=\"ednBackground\"\n                      px={1}\n                      fontSize=\"sm\"\n                      _hover={{\n                        bg: \"primary100\",\n                      }}\n                    >\n                      <Text\n                        as={Translation}\n                        textTransform=\"uppercase\"\n                        id=\"comp-tutorial-metadata-tip-author\"\n                      />{\" \"}\n                      {frontmatter.address}\n                    </Box>\n                  ) : (\n                    <Box\n                      overflow=\"hidden\"\n                      textOverflow=\"ellipsis\"\n                      fontFamily=\"monospace\"\n                      bg=\"ednBackground\"\n                      px={1}\n                      fontSize=\"sm\"\n                      _hover={{\n                        bg: \"primary100\",\n                      }}\n                    >\n                      <Text\n                        as={Translation}\n                        textTransform=\"uppercase\"\n                        id=\"comp-tutorial-metadata-tip-author\"\n                      />{\" \"}\n                      {frontmatter.address} <Translation id=\"copied\" />\n                      <Emoji\n                        fontSize=\"sm\"\n                        ml={2}\n                        mr={2}\n                        text=\":white_check_mark:\"\n                      />\n                    </Box>\n                  )}\n                </Text>\n              )}\n            </CopyToClipboard>\n          </Flex>\n        )}\n      </HStack>\n    </Flex>\n  )\n}\n\nexport default TutorialMetadata\n","import { Badge } from \"@chakra-ui/react\"\nimport React from \"react\"\n\n// Represent string as 32-bit integer\nconst hashCode = (string) => {\n  let hash = 0\n  for (const char of string) {\n    const code = char.charCodeAt(0)\n    hash = (hash << 5) - hash + code\n    hash |= 0\n  }\n  return Math.abs(hash)\n}\n\n// Theme variables from Theme.js\nconst colors = [\n  \"tagBlue\",\n  \"tagOrange\",\n  \"tagGreen\",\n  \"tagRed\",\n  \"tagTurquoise\",\n  \"tagGray\",\n  \"tagYellow\",\n  \"tagMint\",\n  \"tagPink\",\n] as const\n\nexport interface IProps {\n  tags: Array<string>\n}\n\nconst TutorialTags: React.FC<IProps> = ({ tags }) => {\n  return (\n    <>\n      {tags.map((tag, idx) => {\n        const tagColorIdx = hashCode(tag) % colors.length\n        const tagColor = colors[tagColorIdx]\n        return (\n          <Badge key={idx} me={2} mb={2} background={tagColor}>\n            {tag}\n          </Badge>\n        )\n      })}\n    </>\n  )\n}\n\nexport default TutorialTags\n","import { IExternalTutorial, ITutorial } from \"../pages/developers/tutorials\"\nimport { Skill } from \"../components/TutorialMetadata\"\nimport { Lang } from \"./languages\"\n\n// Take all tutorials, and return a list of tutorials for a specific locale\nexport const filterTutorialsByLang = (\n  internalTutorials: any,\n  externalTutorials: Array<IExternalTutorial>,\n  locale: Lang\n): Array<ITutorial> => {\n  const internalTutorialsMap = internalTutorials.map((tutorial) => ({\n    to:\n      tutorial?.fields?.slug?.substr(0, 3) === \"/en\"\n        ? tutorial.fields.slug.substr(3)\n        : tutorial.fields?.slug || \"/\",\n    title: tutorial?.frontmatter?.title || \"\",\n    description: tutorial?.frontmatter?.description || \"\",\n    author: tutorial?.frontmatter?.author || \"\",\n    tags: tutorial?.frontmatter?.tags?.map((tag) =>\n      (tag || \"\").toLowerCase().trim()\n    ),\n    skill: tutorial?.frontmatter?.skill as Skill,\n    timeToRead: tutorial?.fields?.readingTime?.minutes\n      ? Math.round(tutorial?.fields?.readingTime?.minutes)\n      : null,\n    published: tutorial?.frontmatter?.published,\n    lang: tutorial?.frontmatter?.lang || \"en\",\n    isExternal: false,\n  }))\n\n  const externalTutorialsMap = externalTutorials.map<ITutorial>(\n    (tutorial: IExternalTutorial) => ({\n      to: tutorial.url,\n      title: tutorial.title,\n      description: tutorial.description,\n      author: tutorial.author,\n      tags: tutorial.tags.map((tag) => tag.toLowerCase().trim()),\n      skill: tutorial.skillLevel as Skill,\n      timeToRead: Number(tutorial.timeToRead),\n      published: new Date(tutorial.publishDate).toISOString(),\n      lang: tutorial.lang || \"en\",\n      isExternal: true,\n    })\n  )\n\n  const allTutorials: Array<ITutorial> = [\n    ...externalTutorialsMap,\n    ...internalTutorialsMap,\n  ]\n\n  const filteredTutorials = allTutorials\n    .filter((tutorial) => tutorial.lang === locale)\n    .sort((a, b) => {\n      if (a.published && b.published) {\n        return new Date(b.published).getTime() - new Date(a.published).getTime()\n      }\n      // Dont order if no published is present\n      return 0\n    })\n\n  return filteredTutorials\n}\n\nexport const getSortedTutorialTagsForLang = (\n  filteredTutorialsByLang: Array<ITutorial> = []\n) => {\n  const allTags = filteredTutorialsByLang.reduce<Array<string>>(\n    (tags, tutorial) => {\n      return [...tags, ...(tutorial.tags || [])]\n    },\n    []\n  )\n\n  const reducedTags = allTags.reduce((acc, tag) => {\n    if (acc[tag]) {\n      acc[tag] = acc[tag] + 1\n    } else {\n      acc[tag] = 1\n    }\n    return acc\n  }, {})\n\n  const sortedTags = Object.keys(reducedTags)\n    .sort()\n    .reduce((obj, key) => {\n      obj[key] = reducedTags[key]\n      return obj\n    }, {})\n\n  return sortedTags\n}\n"],"names":["_ref","toId","children","props","___EmotionJSX","ChakraButton","onClick","scrollIntoView","prompt","isArticle","feedbackSubmitted","setFeedbackSubmitted","useState","surveyUrl","useSurvey","isTutorial","window","location","href","includes","handleSubmit","choice","trackCustomEvent","eventCategory","eventAction","eventName","String","Flex","border","borderColor","bg","borderRadius","p","direction","mb","mt","w","gap","Heading","as","m","fontSize","fontWeight","Translation","id","getTitle","Button","variant","open","leftIcon","FeedbackThumbsUpIcon","transform","TagStylesProvider","useTagStyles","name","errorMessage","Tag","ref","styles","ownProps","containerStyles","display","verticalAlign","alignItems","maxWidth","container","value","__css","displayName","TagLabel","noOfLines","label","marginEnd","TagRightIcon","marginStart","TagCloseIcon","viewBox","fill","d","isActive","shouldShowIcon","ChakraTag","boxSize","MdClose","MdAdd","ml","Skill","getSkillTranslationId","skill","toUpperCase","tutorial","intl","useIntl","frontmatter","hasSource","source","sourceUrl","published","author","address","flexDirection","justifyContent","borderBottomWidth","base","lg","borderBottomColor","flexWrap","TutorialTags","tags","Badge","alignSelf","whiteSpace","HStack","color","spacing","Box","Emoji","mr","text","Link","to","getLocaleTimestamp","locale","Math","round","fields","readingTime","minutes","CopyToClipboard","isCopied","Text","cursor","overflow","textOverflow","fontFamily","px","_hover","textTransform","colors","map","tag","idx","tagColorIdx","string","hash","char","charCodeAt","abs","hashCode","length","tagColor","key","me","background","filterTutorialsByLang","internalTutorials","externalTutorials","internalTutorialsMap","_tutorial$fields","slug","_tutorial$fields$slug","substr","_tutorial$fields2","title","_tutorial$frontmatter","description","_tutorial$frontmatter2","_tutorial$frontmatter3","_tutorial$frontmatter4","_tutorial$frontmatter5","toLowerCase","trim","_tutorial$frontmatter6","timeToRead","_tutorial$fields3","_tutorial$fields3$rea","_tutorial$fields4","_tutorial$fields4$rea","_tutorial$frontmatter7","lang","_tutorial$frontmatter8","isExternal","externalTutorialsMap","url","skillLevel","Number","Date","publishDate","toISOString","filter","sort","a","b","getTime","getSortedTutorialTagsForLang","filteredTutorialsByLang","reducedTags","reduce","acc","Object","keys","obj"],"sourceRoot":""}