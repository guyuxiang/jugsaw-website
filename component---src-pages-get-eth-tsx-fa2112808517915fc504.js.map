{"version":3,"file":"component---src-pages-get-eth-tsx-fa2112808517915fc504.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/CardList.tsx","webpack://ethereum-org-website/./src/components/EthPriceCard.tsx","webpack://ethereum-org-website/./src/components/InfoBanner.tsx","webpack://ethereum-org-website/./src/components/Tooltip.tsx","webpack://ethereum-org-website/./src/utils/image.ts"],"sourcesContent":["import React, { ReactNode } from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport {\n  Box,\n  Flex,\n  HStack,\n  LinkBox,\n  LinkOverlay,\n  StackProps,\n  useColorModeValue,\n} from \"@chakra-ui/react\"\n\nimport { ImageProp } from \"../types\"\nimport * as url from \"../utils/url\"\nimport Link from \"./Link\"\n\nexport type CardListItem = {\n  title?: ReactNode\n  description?: ReactNode\n  caption?: ReactNode\n  link?: string\n  id?: string\n} & ImageProp\n\nexport interface IProps {\n  content: Array<CardListItem>\n  clickHandler?: (idx: string | number) => void\n}\n\nconst CardContainer = (props: StackProps) => {\n  return (\n    <HStack\n      spacing={4}\n      p={4}\n      color=\"text\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      _hover={{\n        borderRadius: \"base\",\n        boxShadow: \"0 0 1px var(--eth-colors-primary)\",\n        background: \"tableBackgroundHover\",\n      }}\n      {...props}\n    />\n  )\n}\n\nconst Card = (props: CardListItem & Omit<StackProps, \"title\" | \"id\">) => {\n  const { title, description, caption, link, image, alt, ...rest } = props\n\n  const isLink = !!link\n  const isExternal = url.isExternal(link || \"\")\n\n  const descriptionColor = useColorModeValue(\"gray.500\", \"gray.400\")\n\n  return (\n    <CardContainer {...rest}>\n      {image && <Box as={GatsbyImage} image={image} alt={alt} minW=\"20px\" />}\n      <Flex flex=\"1 1 75%\" direction=\"column\">\n        {isLink ? (\n          <LinkOverlay\n            as={Link}\n            href={link}\n            hideArrow\n            color=\"text\"\n            textDecoration=\"none\"\n            _hover={{ textDecoration: \"none\" }}\n          >\n            {title}\n          </LinkOverlay>\n        ) : (\n          <Box>{title}</Box>\n        )}\n\n        <Box fontSize=\"sm\" mb={0} color={descriptionColor}>\n          {description}\n        </Box>\n      </Flex>\n      {caption && (\n        <Flex flex=\"1 0 25%\" align=\"center\" wrap=\"wrap\" mr={4}>\n          <Box fontSize=\"sm\" mb={0} opacity={0.6}>\n            {caption}\n          </Box>\n        </Flex>\n      )}\n      {isExternal && <Box>â†—</Box>}\n    </CardContainer>\n  )\n}\n\nconst CardList: React.FC<IProps> = ({ content, clickHandler = () => null }) => (\n  <Box bg=\"background\" width=\"full\">\n    {content.map((listItem, idx) => {\n      const { link, id } = listItem\n      const isLink = !!link\n\n      return isLink ? (\n        <LinkBox key={id || idx}>\n          <Card {...listItem} />\n        </LinkBox>\n      ) : (\n        <Card\n          key={idx}\n          onClick={() => clickHandler(idx)}\n          mb={4}\n          {...listItem}\n        />\n      )\n    })}\n  </Box>\n)\n\nexport default CardList\n","import React, { useState, useEffect } from \"react\"\nimport { Box, Flex, Heading, Icon } from \"@chakra-ui/react\"\nimport { MdInfoOutline } from \"react-icons/md\"\nimport axios from \"axios\"\n\nimport Translation from \"./Translation\"\nimport Link from \"./Link\"\nimport Tooltip from \"./Tooltip\"\n\nexport interface IProps {\n  className?: string\n  isLeftAlign?: boolean\n}\n\n// TODO add prop to left vs. center align\nconst EthPriceCard: React.FC<IProps> = ({ className, isLeftAlign = false }) => {\n  const [state, setState] = useState({\n    currentPriceUSD: \"\",\n    percentChangeUSD: 0,\n    hasError: false,\n  })\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd&include_24hr_change=true\"\n      )\n      .then((response) => {\n        if (response.data && response.data.ethereum) {\n          const currentPriceUSD = response.data.ethereum.usd\n          const percentChangeUSD =\n            +response.data.ethereum.usd_24h_change.toFixed(2)\n          setState({\n            currentPriceUSD,\n            percentChangeUSD,\n            hasError: false,\n          })\n        }\n      })\n      .catch((error) => {\n        console.error(error)\n        setState({\n          ...state,\n          hasError: true,\n        })\n      })\n  }, [])\n\n  const isLoading = !state.currentPriceUSD\n\n  let price = isLoading ? (\n    <Translation id=\"loading\" />\n  ) : (\n    `$${state.currentPriceUSD}`\n  )\n\n  if (state.hasError) {\n    price = <Translation id=\"loading-error-refresh\" />\n  }\n\n  const isNegativeChange = state?.percentChangeUSD < 0\n\n  const change = state.percentChangeUSD\n    ? isNegativeChange\n      ? `${state.percentChangeUSD}% â†˜`\n      : `${state.percentChangeUSD}% â†—`\n    : ``\n\n  const tooltipContent = (\n    <Box>\n      <Translation id=\"data-provided-by\" />{\" \"}\n      <Link to=\"https://www.coingecko.com/en/api\">coingecko.com</Link>\n    </Box>\n  )\n\n  return (\n    <Flex\n      className={className}\n      direction=\"column\"\n      align={isLeftAlign ? \"flex-start\" : \"center\"}\n      justify=\"space-between\"\n      background={\n        isNegativeChange\n          ? \"priceCardBackgroundNegative\"\n          : \"priceCardBackgroundPositive\"\n      }\n      border=\"1px solid\"\n      borderColor={\n        isNegativeChange ? \"priceCardBorderNegative\" : \"priceCardBorder\"\n      }\n      p={6}\n      w=\"full\"\n      maxW=\"420px\"\n      maxH=\"192px\"\n      borderRadius=\"base\"\n    >\n      <Heading\n        as=\"h4\"\n        color=\"text200\"\n        m={0}\n        fontSize=\"sm\"\n        fontWeight=\"medium\"\n        lineHeight=\"140%\"\n        letterSpacing=\"0.04em\"\n        textTransform=\"uppercase\"\n      >\n        <Translation id=\"eth-current-price\" />\n        <Tooltip content={tooltipContent}>\n          <Icon as={MdInfoOutline} boxSize=\"14px\" ml={2} />\n        </Tooltip>\n      </Heading>\n\n      <Box\n        m={state.hasError ? \"1rem 0\" : 0}\n        lineHeight=\"1.4\"\n        fontSize={state.hasError ? \"md\" : \"5xl\"}\n        color={state.hasError ? \"fail\" : \"text\"}\n      >\n        {price}\n      </Box>\n      <Flex\n        w=\"full\"\n        align=\"center\"\n        justify={isLeftAlign ? \"flex-start\" : \"center\"}\n        minH=\"33px\" /* prevents jump when price loads*/\n      >\n        <Box\n          fontSize=\"2xl\"\n          lineHeight=\"140%\"\n          mr={4}\n          color={isNegativeChange ? \"fail300\" : \"success\"}\n        >\n          {change}\n        </Box>\n        <Box\n          fontSize=\"sm\"\n          lineHeight=\"140%\"\n          letterSpacing=\"0.04em\"\n          textTransform=\"uppercase\"\n          color=\"text300\"\n        >\n          (<Translation id=\"last-24-hrs\" />)\n        </Box>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default EthPriceCard\n","import React from \"react\"\nimport { Flex } from \"@chakra-ui/react\"\nimport Emoji from \"./Emoji\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  className?: string\n  emoji?: string\n  isWarning?: boolean\n  shouldCenter?: boolean\n  shouldSpaceBetween?: boolean\n}\n\nconst InfoBanner: React.FC<IProps> = ({\n  children,\n  className,\n  emoji,\n  isWarning = false,\n  shouldCenter = false,\n  shouldSpaceBetween = false,\n  ...props\n}) => {\n  const banner = (\n    <Flex\n      align=\"center\"\n      p={6}\n      borderRadius={\"sm\"}\n      maxW={shouldCenter ? \"55rem\" : \"100%\"}\n      color=\"black300\"\n      bg={isWarning ? \"warning\" : \"infoBanner\"}\n      direction={{ base: \"column\", sm: \"row\" }}\n      {...props}\n    >\n      {emoji && (\n        <Emoji\n          flexGrow=\"0\"\n          flexShrink=\"0\"\n          mr={{ base: 0, sm: 6 }}\n          mb={{ base: 2, sm: 0 }}\n          alignSelf={{ base: \"flex-start\", sm: \"auto\" }}\n          text={emoji}\n          fontSize=\"4xl\"\n        />\n      )}\n      <Flex\n        display={{ base: \"block\", sm: shouldSpaceBetween ? \"flex\" : \"block\" }}\n        align={shouldSpaceBetween ? \"center\" : \"auto\"}\n        w={shouldSpaceBetween ? \"100%\" : \"auto\"}\n        justify={shouldSpaceBetween ? \"space-between\" : \"auto\"}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  )\n  return shouldCenter ? <Flex justify=\"center\">{banner}</Flex> : banner\n}\n\nexport default InfoBanner\n","import React, { ReactNode, useState } from \"react\"\nimport { Box, useColorModeValue } from \"@chakra-ui/react\"\nimport * as utils from \"../utils/isMobile\"\n\nexport interface IProps {\n  content: ReactNode\n  children?: React.ReactNode\n}\n\n// TODO add `position` prop\nconst Tooltip: React.FC<IProps> = ({ content, children }) => {\n  const [isVisible, setIsVisible] = useState<boolean>(false)\n  const isMobile = utils.isMobile()\n  const shadow = useColorModeValue(\"tableBox.light\", \"tableBox.dark\")\n\n  return (\n    <>\n      {isVisible && isMobile && (\n        // Invisible full screen div \"below\" the clickable link\n        // Added so clicking away anywhere will hide Tooltip\n        <Box\n          position=\"fixed\"\n          top={0}\n          left={0}\n          w=\"full\"\n          h=\"full\"\n          zIndex={1}\n          onClick={() => setIsVisible(false)}\n        />\n      )}\n      <Box\n        position=\"relative\"\n        display=\"inline-flex\"\n        userSelect=\"none\"\n        cursor=\"pointer\"\n        title=\"More info\"\n        onMouseEnter={!isMobile ? () => setIsVisible(true) : undefined}\n        onMouseLeave={!isMobile ? () => setIsVisible(false) : undefined}\n        onClick={isMobile ? () => setIsVisible(!isVisible) : undefined}\n      >\n        {children}\n        {isVisible && (\n          <Box\n            textAlign=\"center\"\n            whiteSpace=\"normal\"\n            w={{ base: \"140px\", md: \"200px\" }}\n            color=\"text\"\n            bg=\"background\"\n            boxShadow={shadow}\n            position=\"absolute\"\n            zIndex=\"docked\"\n            py={4}\n            px={2}\n            textTransform=\"none\"\n            fontSize=\"sm\"\n            fontWeight=\"medium\"\n            cursor=\"default\"\n            borderRadius=\"base\"\n            bottom=\"125%\"\n            left=\"25%\"\n            transform=\"translateX(-50%)\"\n          >\n            <Box\n              as=\"span\"\n              position=\"absolute\"\n              bottom={-2}\n              left=\"calc(50% - 6px)\"\n              borderRightWidth={10}\n              borderRightStyle=\"solid\"\n              borderRightColor=\"transparent\"\n              borderTopWidth={10}\n              borderTopStyle=\"solid\"\n              borderTopColor=\"background\"\n              borderLeftWidth={10}\n              borderLeftStyle=\"solid\"\n              borderLeftColor=\"transparent\"\n            />\n            {content}\n          </Box>\n        )}\n      </Box>\n    </>\n  )\n}\n\nexport default Tooltip\n","import { Node } from \"gatsby\"\nimport {\n  getSrc as getGatsbySrc,\n  getImage as getGatsbyImage,\n  IGatsbyImageData,\n} from \"gatsby-plugin-image\"\nimport {\n  IGatsbyImageDataParent,\n  ImageDataLike as GatsbyImageDataLike,\n} from \"gatsby-plugin-image/dist/src/components/hooks\"\n\ntype FileNodeNull = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>> | null\n}\n\nexport type ImageDataLike = GatsbyImageDataLike | FileNodeNull\n\nconst isFileNodeNull = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: FileNodeNull | any\n): node is FileNodeNull => node?.childImageSharp === null\n\n/**\n * Custom temporary `getImage` function to accept `null` values in the passed\n * node image.\n *\n * This was partially fixed in https://github.com/gatsbyjs/gatsby/issues/35748#issuecomment-1188884754\n * but it still does not accept null values which are generated by GraphQL Typegen\n */\nexport function getImage(\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined {\n  if (!node) {\n    return\n  }\n\n  if (isFileNodeNull(node)) {\n    return\n  }\n\n  return getGatsbyImage(node)\n}\n\n/**\n * Custom temporary `getSrc` function to accept `null` values in the passed\n * node image.\n */\nexport function getSrc(node: ImageDataLike | null): string | undefined {\n  if (!node) {\n    return\n  }\n\n  if (isFileNodeNull(node)) {\n    return\n  }\n\n  return getGatsbySrc(node)\n}\n"],"names":["CardContainer","props","___EmotionJSX","HStack","spacing","p","color","border","borderColor","_hover","borderRadius","boxShadow","background","Card","title","description","caption","link","image","alt","rest","isLink","isExternal","url","descriptionColor","useColorModeValue","Box","as","GatsbyImage","minW","Flex","flex","direction","LinkOverlay","Link","href","hideArrow","textDecoration","fontSize","mb","align","wrap","mr","opacity","_ref","content","clickHandler","bg","width","map","listItem","idx","id","LinkBox","key","onClick","className","isLeftAlign","state","setState","useState","currentPriceUSD","percentChangeUSD","hasError","useEffect","axios","then","response","data","ethereum","usd","usd_24h_change","toFixed","catch","error","console","price","Translation","isNegativeChange","change","tooltipContent","to","justify","w","maxW","maxH","Heading","m","fontWeight","lineHeight","letterSpacing","textTransform","Tooltip","Icon","MdInfoOutline","boxSize","ml","minH","children","emoji","isWarning","shouldCenter","shouldSpaceBetween","banner","base","sm","Emoji","flexGrow","flexShrink","alignSelf","text","display","isVisible","setIsVisible","isMobile","utils","shadow","position","top","left","h","zIndex","userSelect","cursor","onMouseEnter","undefined","onMouseLeave","textAlign","whiteSpace","md","py","px","bottom","transform","borderRightWidth","borderRightStyle","borderRightColor","borderTopWidth","borderTopStyle","borderTopColor","borderLeftWidth","borderLeftStyle","borderLeftColor","isFileNodeNull","node","childImageSharp","getImage","getGatsbyImage","getSrc","getGatsbySrc"],"sourceRoot":""}