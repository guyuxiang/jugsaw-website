{"version":3,"file":"component---src-pages-layer-2-tsx-538ed38d8dcc22cc87fe.js","mappings":"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","sources":["webpack://ethereum-org-website/./node_modules/@chakra-ui/image/dist/index.esm.js","webpack://ethereum-org-website/./src/components/InfoBanner.tsx","webpack://ethereum-org-website/./src/components/Layer2ProductCard.tsx","webpack://ethereum-org-website/./src/components/OrderedList.tsx","webpack://ethereum-org-website/./src/components/PageHero.tsx","webpack://ethereum-org-website/./src/components/ProductList.tsx","webpack://ethereum-org-website/./src/components/Tooltip.tsx","webpack://ethereum-org-website/./src/utils/cache.ts"],"sourcesContent":["// ../../react-shim.js\nimport React from \"react\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/dist/index.esm.js\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(\"img\", {\n    width: htmlWidth,\n    height: htmlHeight,\n    ref,\n    alt,\n    ...rest\n  });\n});\nNativeImage.displayName = \"NativeImage\";\n\n// src/image.tsx\nvar Image2 = forwardRef2(function Image3(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ React.createElement(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n  return /* @__PURE__ */ React.createElement(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage2.displayName = \"Image\";\n\n// src/img.tsx\nimport { chakra as chakra2, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar Img = forwardRef3((props, ref) => /* @__PURE__ */ React.createElement(chakra2.img, {\n  ref,\n  as: NativeImage,\n  className: \"chakra-image\",\n  ...props\n}));\nexport {\n  Image2 as Image,\n  Img,\n  shouldShowFallbackImage,\n  useImage\n};\n","import React from \"react\"\nimport { Flex } from \"@chakra-ui/react\"\nimport Emoji from \"./Emoji\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  className?: string\n  emoji?: string\n  isWarning?: boolean\n  shouldCenter?: boolean\n  shouldSpaceBetween?: boolean\n}\n\nconst InfoBanner: React.FC<IProps> = ({\n  children,\n  className,\n  emoji,\n  isWarning = false,\n  shouldCenter = false,\n  shouldSpaceBetween = false,\n  ...props\n}) => {\n  const banner = (\n    <Flex\n      align=\"center\"\n      p={6}\n      borderRadius={\"sm\"}\n      maxW={shouldCenter ? \"55rem\" : \"100%\"}\n      color=\"black300\"\n      bg={isWarning ? \"warning\" : \"infoBanner\"}\n      direction={{ base: \"column\", sm: \"row\" }}\n      {...props}\n    >\n      {emoji && (\n        <Emoji\n          flexGrow=\"0\"\n          flexShrink=\"0\"\n          mr={{ base: 0, sm: 6 }}\n          mb={{ base: 2, sm: 0 }}\n          alignSelf={{ base: \"flex-start\", sm: \"auto\" }}\n          text={emoji}\n          fontSize=\"4xl\"\n        />\n      )}\n      <Flex\n        display={{ base: \"block\", sm: shouldSpaceBetween ? \"flex\" : \"block\" }}\n        align={shouldSpaceBetween ? \"center\" : \"auto\"}\n        w={shouldSpaceBetween ? \"100%\" : \"auto\"}\n        justify={shouldSpaceBetween ? \"space-between\" : \"auto\"}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  )\n  return shouldCenter ? <Flex justify=\"center\">{banner}</Flex> : banner\n}\n\nexport default InfoBanner\n","// Libraries\nimport React from \"react\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport { useIntl } from \"react-intl\"\nimport { Box, Center, Flex, Heading, Image, Text } from \"@chakra-ui/react\"\n\n// Components\nimport ButtonLink from \"./ButtonLink\"\nimport Link from \"./Link\"\n\n// Utils\nimport { translateMessageId } from \"../utils/translations\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  url?: string\n  background: string\n  image: IGatsbyImageData\n  name: string\n  description: string\n  note?: string\n  alt?: string\n  bridge?: string\n  tokenLists?: string\n  ecosystemPortal?: string\n}\n\nconst Layer2ProductCard: React.FC<IProps> = ({\n  url,\n  background,\n  image,\n  name,\n  description,\n  note = \"\",\n  alt = \"\",\n  children,\n  bridge,\n  tokenLists,\n  ecosystemPortal,\n}) => {\n  const intl = useIntl()\n\n  return (\n    <Flex\n      color=\"text\"\n      boxShadow={\"0px 14px 66px rgba(0, 0, 0, 0.07)\"}\n      direction=\"column\"\n      justify=\"space-between\"\n      bg=\"searchBackground\"\n      borderRadius=\"base\"\n      border={\"1px solid lightBorder\"}\n      textDecoration=\"none\"\n      padding={2}\n      _hover={{ transition: \"transform 0.1s\", transform: \"scale(1.02)\" }}\n    >\n      <Center\n        bg={background}\n        boxShadow=\"inset 0px -1px 0px rgba(0, 0, 0, 0.1)\"\n        minH=\"200px\"\n      >\n        <Image\n          as={GatsbyImage}\n          image={image}\n          alt={alt}\n          objectFit=\"contain\"\n          alignSelf=\"center\"\n          maxW={{ base: \"311px\", sm: \"372px\" }}\n          maxH={\"257px\"}\n        />\n      </Center>\n      <Flex p={6} h=\"100%\" direction=\"column\">\n        <Box>\n          <Heading as=\"h3\" fontSize={{ base: \"xl\", m: \"2xl\" }} mt={0} mb={3}>\n            {name}\n          </Heading>\n          {children && (\n            <Box mt={4} mb={4}>\n              {children}\n            </Box>\n          )}\n          <Text opacity=\"0.8\" fontSize=\"sm\" mb={2} lineHeight=\"140%\">\n            {description}\n          </Text>\n          {note.length > 0 && (\n            <Text opacity=\"0.8\" fontSize=\"sm\" mb={2} lineHeight=\"140%\">\n              {translateMessageId(\"layer-2-note\", intl)} {note}\n            </Text>\n          )}\n        </Box>\n        {bridge && (\n          <Link to={bridge}>\n            {name} {translateMessageId(\"layer-2-bridge\", intl)}\n          </Link>\n        )}\n        {ecosystemPortal && (\n          <Link to={ecosystemPortal}>\n            {name} {translateMessageId(\"layer-2-ecosystem-portal\", intl)}\n          </Link>\n        )}\n        {tokenLists && (\n          <Link to={tokenLists}>\n            {name} {translateMessageId(\"layer-2-token-lists\", intl)}\n          </Link>\n        )}\n      </Flex>\n      <Box>\n        <ButtonLink m={2} to={url} display=\"flex\">\n          {translateMessageId(\"layer-2-explore\", intl)} {name}\n        </ButtonLink>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default Layer2ProductCard\n","// Libraries\nimport React from \"react\"\nimport {\n  Box,\n  ListItem,\n  OrderedList as ChakraOrderedList,\n  SystemStyleObject,\n} from \"@chakra-ui/react\"\n\nexport interface IProps {\n  listData: Array<React.ReactNode>\n  className?: string\n}\n\n/**\n * The custom ordered list numbers in a solid circular background\n */\nconst liCustomType: SystemStyleObject = {\n  content: `counter(li-counter)`,\n  position: \"absolute\",\n  top: \"-2px\", // adjusts circle + number up and down\n  left: \"-3rem\",\n  width: \"35px\",\n  aspectRatio: \"1\",\n  height: \"2rem\",\n  pt: \"7px\", // adjusts number up and down,\n  lineHeight: \"100%\",\n  borderRadius: \"50%\",\n  background: \"grayBackground\",\n  textAlign: \"center\",\n}\n\n// `listData` should be a list of strings, or HTML components\n// ex: [<p>string<p>] or ['string']\nconst OrderedList: React.FC<IProps> = ({ listData, className }) => {\n  return (\n    <Box mb=\"1.45rem\" className={className}>\n      <ChakraOrderedList\n        styleType=\"none\"\n        pl={8}\n        mb=\"0\"\n        ms=\"1.45rem\"\n        sx={{\n          counterReset: \"li-counter\",\n        }}\n      >\n        {listData.map((data, idx) => {\n          return (\n            <ListItem\n              key={idx}\n              m=\"0 0 1rem 0\"\n              position=\"relative\" // For the custom list types\n              sx={{\n                counterIncrement: \"li-counter\",\n              }}\n              _before={liCustomType}\n            >\n              {data}\n            </ListItem>\n          )\n        })}\n      </ChakraOrderedList>\n    </Box>\n  )\n}\n\nexport default OrderedList\n","import React, { ReactNode } from \"react\"\nimport { Box, Flex, Heading, Wrap, WrapItem } from \"@chakra-ui/react\"\n\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\n\nimport ButtonLink, { IProps as IButtonLinkProps } from \"./ButtonLink\"\nimport Button, { IProps as IButtonProps } from \"./Button\"\n\nexport interface IButtonLink extends IButtonLinkProps {\n  content: ReactNode\n}\n\nexport interface IButton extends IButtonProps {\n  content: ReactNode\n}\n\nexport interface IContent {\n  buttons?: Array<IButtonLink | IButton>\n  title: ReactNode\n  header: ReactNode\n  subtitle: ReactNode\n  image: IGatsbyImageData\n  alt: string\n}\n\nexport interface IProps {\n  content: IContent\n  isReverse?: boolean\n  children?: ReactNode\n  className?: string\n}\n\nfunction isButtonLink(button: IButton | IButtonLink): button is IButtonLink {\n  return (button as IButtonLink).to !== undefined\n}\n\nconst PageHero: React.FC<IProps> = ({\n  content,\n  isReverse = false,\n  children,\n  className,\n}) => {\n  const { buttons, title, header, subtitle, image, alt } = content\n  return (\n    <Box py={4} px={8} width=\"full\">\n      <Flex\n        justifyContent=\"space-between\"\n        mt={8}\n        px={{ base: 0, lg: 16 }}\n        direction={{ base: isReverse ? \"column\" : \"column-reverse\", lg: \"row\" }}\n        className={className}\n      >\n        <Box\n          maxW={{ base: \"full\", lg: \"container.sm\" }}\n          py={{ base: 16, lg: 32 }}\n          pl={{ base: 0, lg: 8 }}\n          mr={4}\n        >\n          <Heading\n            as=\"h1\"\n            textTransform=\"uppercase\"\n            fontSize=\"md\"\n            fontWeight=\"normal\"\n            mb={4}\n            color=\"text300\"\n            lineHeight={1.4}\n          >\n            {title}\n          </Heading>\n          <Heading\n            as=\"h2\"\n            fontWeight=\"bold\"\n            fontSize={{ base: \"2.5rem\", lg: \"5xl\" }}\n            maxW=\"full\"\n            mb={0}\n            color=\"text00\"\n            lineHeight={1.4}\n          >\n            {header}\n          </Heading>\n          <Box\n            fontSize={{ base: \"xl\", lg: \"2xl\" }}\n            lineHeight={1.4}\n            color=\"text200\"\n            mt={4}\n            mb={8}\n          >\n            {subtitle}\n          </Box>\n          {buttons && (\n            <Wrap spacing={2}>\n              {buttons.map((button, idx) => {\n                if (isButtonLink(button)) {\n                  return (\n                    <WrapItem>\n                      <ButtonLink\n                        key={idx}\n                        variant={button.variant}\n                        to={button.to}\n                      >\n                        {button.content}\n                      </ButtonLink>\n                    </WrapItem>\n                  )\n                }\n\n                if (button.toId) {\n                  return (\n                    <WrapItem>\n                      <Button\n                        key={idx}\n                        variant={button.variant}\n                        toId={button.toId}\n                      >\n                        {button.content}\n                      </Button>\n                    </WrapItem>\n                  )\n                }\n              })}\n            </Wrap>\n          )}\n          {children}\n        </Box>\n        <Box\n          as={GatsbyImage}\n          flex=\"1 1 50%\"\n          alignSelf=\"center\"\n          mt={{ base: 0, lg: 12 }}\n          ml={{ base: 0, lg: 12 }}\n          w=\"full\"\n          maxWidth={{ base: \"560px\", lg: \"624px\" }}\n          image={image}\n          imgStyle={{\n            objectFit: \"contain\",\n          }}\n          alt={alt}\n          loading=\"eager\"\n        />\n      </Flex>\n    </Box>\n  )\n}\n\nexport default PageHero\n","import React from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { Box, Flex, Heading, Image, useColorModeValue } from \"@chakra-ui/react\"\n\nimport ButtonLink from \"./ButtonLink\"\nimport Translation from \"./Translation\"\n\nexport interface Content {\n  title: string\n  description: string\n  link?: string\n  image?: any\n  alt: string\n  id?: string\n}\n\nexport interface IProps {\n  content: Array<Content>\n  category: string\n}\n\nconst ProductList: React.FC<IProps> = ({ content, category }) => {\n  const shadow = useColorModeValue(\"tableBox.light\", \"tableBox.dark\")\n\n  return (\n    <Box width=\"full\">\n      <Heading\n        as=\"h3\"\n        fontSize=\"2xl\"\n        borderBottom=\"2px solid\"\n        borderColor=\"border\"\n        paddingBottom={4}\n        marginBottom={0}\n      >\n        {category}\n      </Heading>\n      {content.map(({ title, description, link, image, alt, id }, idx) => (\n        <Flex\n          key={id || idx}\n          color=\"text\"\n          marginBottom=\"px\"\n          marginTop={8}\n          alignItems={{ sm: \"flex-start\" }}\n        >\n          <Box width=\"5rem\">\n            {image && (\n              <Image\n                as={GatsbyImage}\n                image={image}\n                alt={alt}\n                boxShadow={shadow}\n                borderRadius=\"sm\"\n              />\n            )}\n          </Box>\n          <Flex\n            paddingBottom={4}\n            width=\"full\"\n            alignItems={{ base: \"flex-start\", sm: \"center\" }}\n            marginLeft={{ base: 4, sm: 6 }}\n            justifyContent=\"space-between\"\n            borderBottom=\"1px solid\"\n            borderColor=\"border\"\n            flexDir={{ base: \"column\", sm: \"row\" }}\n          >\n            <Box flexDir=\"column\">\n              <Box>{title}</Box>\n              <Box fontSize=\"sm\" marginBottom={0} opacity=\"0.6\">\n                {description}\n              </Box>\n            </Box>\n            {link && (\n              <ButtonLink\n                variant=\"outline\"\n                to={link}\n                marginLeft={{ base: 0, sm: 8 }}\n                paddingY={1}\n                paddingX={6}\n                borderRadius=\"sm\"\n                marginTop={{ base: 4, sm: 0 }}\n              >\n                <Translation id=\"page-dapps-ready-button\" />\n              </ButtonLink>\n            )}\n          </Flex>\n        </Flex>\n      ))}\n    </Box>\n  )\n}\n\nexport default ProductList\n","import React, { ReactNode, useState } from \"react\"\nimport { Box, useColorModeValue } from \"@chakra-ui/react\"\nimport * as utils from \"../utils/isMobile\"\n\nexport interface IProps {\n  content: ReactNode\n  children?: React.ReactNode\n}\n\n// TODO add `position` prop\nconst Tooltip: React.FC<IProps> = ({ content, children }) => {\n  const [isVisible, setIsVisible] = useState<boolean>(false)\n  const isMobile = utils.isMobile()\n  const shadow = useColorModeValue(\"tableBox.light\", \"tableBox.dark\")\n\n  return (\n    <>\n      {isVisible && isMobile && (\n        // Invisible full screen div \"below\" the clickable link\n        // Added so clicking away anywhere will hide Tooltip\n        <Box\n          position=\"fixed\"\n          top={0}\n          left={0}\n          w=\"full\"\n          h=\"full\"\n          zIndex={1}\n          onClick={() => setIsVisible(false)}\n        />\n      )}\n      <Box\n        position=\"relative\"\n        display=\"inline-flex\"\n        userSelect=\"none\"\n        cursor=\"pointer\"\n        title=\"More info\"\n        onMouseEnter={!isMobile ? () => setIsVisible(true) : undefined}\n        onMouseLeave={!isMobile ? () => setIsVisible(false) : undefined}\n        onClick={isMobile ? () => setIsVisible(!isVisible) : undefined}\n      >\n        {children}\n        {isVisible && (\n          <Box\n            textAlign=\"center\"\n            whiteSpace=\"normal\"\n            w={{ base: \"140px\", md: \"200px\" }}\n            color=\"text\"\n            bg=\"background\"\n            boxShadow={shadow}\n            position=\"absolute\"\n            zIndex=\"docked\"\n            py={4}\n            px={2}\n            textTransform=\"none\"\n            fontSize=\"sm\"\n            fontWeight=\"medium\"\n            cursor=\"default\"\n            borderRadius=\"base\"\n            bottom=\"125%\"\n            left=\"25%\"\n            transform=\"translateX(-50%)\"\n          >\n            <Box\n              as=\"span\"\n              position=\"absolute\"\n              bottom={-2}\n              left=\"calc(50% - 6px)\"\n              borderRightWidth={10}\n              borderRightStyle=\"solid\"\n              borderRightColor=\"transparent\"\n              borderTopWidth={10}\n              borderTopStyle=\"solid\"\n              borderTopColor=\"background\"\n              borderLeftWidth={10}\n              borderLeftStyle=\"solid\"\n              borderLeftColor=\"transparent\"\n            />\n            {content}\n          </Box>\n        )}\n      </Box>\n    </>\n  )\n}\n\nexport default Tooltip\n","import axios from \"axios\"\n\nconst ONE_HOUR = 1000 * 60 * 60\n\nexport interface CacheStorage<T> {\n  value: T\n  timestamp: number\n}\n\nconst emptyCacheItemStorage: CacheStorage<string> = {\n  value: \"\",\n  timestamp: 0,\n}\n\nconst stringifyEmptyCacheItemStorage = JSON.stringify(emptyCacheItemStorage)\n\n/**\n * Write inside the local storage the value returned by the API call for a given key\n * @param {string} key stored in the local storage\n * @param {T} value for a given key to write in the local storage\n */\nexport const writeToCache = <T>(key: string, value: T): void => {\n  const cacheStorageItem: CacheStorage<T> = {\n    value,\n    timestamp: new Date().getTime(),\n  }\n  localStorage.setItem(key, JSON.stringify(cacheStorageItem))\n}\n\n/**\n * Retrieve the value stored in the local storage for a given key\n * If the value is not defined or the key does not exist, return a default CacheStorage\n * with an empty value and timestamp set to 0\n * @see CacheStorage\n * @param {string} key stored in the local storage\n * @returns {CacheStorage<T>} element stored in browser local storage\n */\nconst readFromCache = <T>(key: string): CacheStorage<T> => {\n  return JSON.parse(\n    localStorage.getItem(key) || stringifyEmptyCacheItemStorage\n  ) as CacheStorage<T>\n}\n\n/**\n * API call to get the response data and store in the local storage if needed\n * @param {string} url API url\n * @param {boolean} cacheResponse should we store the value to the local storage\n * @returns {T} data response from the API\n */\nexport const getFreshData = async <T>(\n  url: string,\n  cacheResponse: boolean = false\n): Promise<T> => {\n  const { data } = await axios.get(url)\n  cacheResponse && writeToCache(url, data)\n  return data\n}\n\nconst getCachedData = <T>(url: string): CacheStorage<T> => readFromCache(url)\n\n/**\n * Get the data response from the local storage or the API\n * @param {string} url of the API\n * @returns {T} data from the API or the local storage\n */\nexport const getData = async <T>(url: string): Promise<T> => {\n  const cachedData: CacheStorage<T> = getCachedData(url)\n  const now = new Date().getTime()\n  if (\n    cachedData &&\n    cachedData.timestamp > 0 &&\n    now - cachedData.timestamp < ONE_HOUR\n  ) {\n    return cachedData.value\n  } else {\n    return getFreshData(url, true)\n  }\n}\n"],"names":["omit","object","keysToOmit","clone","Object","assign","key","useImage","props","loading","src","srcSet","onLoad","onError","crossOrigin","sizes","ignoreFallback","status","setStatus","useState","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","NativeImage","ref","htmlWidth","htmlHeight","alt","rest","width","height","displayName","Image2","fallbackSrc","fallback","align","fit","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","as","className","Img","_ref","children","emoji","isWarning","shouldCenter","shouldSpaceBetween","banner","___EmotionJSX","Flex","p","borderRadius","maxW","color","bg","direction","base","sm","Emoji","flexGrow","flexShrink","mr","mb","alignSelf","text","fontSize","display","w","justify","url","background","image","name","description","note","bridge","tokenLists","ecosystemPortal","intl","useIntl","boxShadow","border","textDecoration","padding","_hover","transition","transform","Center","minH","GatsbyImage","maxH","h","Box","Heading","m","mt","Text","opacity","lineHeight","length","translateMessageId","Link","to","ButtonLink","liCustomType","content","position","top","left","aspectRatio","pt","textAlign","listData","ChakraOrderedList","styleType","pl","ms","sx","counterReset","map","data","idx","ListItem","counterIncrement","_before","isReverse","buttons","title","header","subtitle","py","px","justifyContent","lg","textTransform","fontWeight","Wrap","spacing","button","undefined","isButtonLink","WrapItem","variant","toId","Button","flex","ml","maxWidth","imgStyle","category","shadow","useColorModeValue","borderBottom","borderColor","paddingBottom","marginBottom","link","id","marginTop","alignItems","marginLeft","flexDir","paddingY","paddingX","Translation","isVisible","setIsVisible","isMobile","utils","zIndex","onClick","userSelect","cursor","onMouseEnter","onMouseLeave","whiteSpace","md","bottom","borderRightWidth","borderRightStyle","borderRightColor","borderTopWidth","borderTopStyle","borderTopColor","borderLeftWidth","borderLeftStyle","borderLeftColor","stringifyEmptyCacheItemStorage","JSON","stringify","value","timestamp","getFreshData","async","cacheResponse","axios","cacheStorageItem","Date","getTime","localStorage","setItem","writeToCache","getCachedData","readFromCache","parse","getItem","getData","cachedData","now"],"sourceRoot":""}