{"version":3,"file":"ad426f14-c03bb225242b3c2f3926.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/pages/layer-2.tsx"],"sourcesContent":["// Libraries\nimport React, { useEffect, useState } from \"react\"\nimport { graphql, PageProps } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport styled from \"@emotion/styled\"\nimport { useIntl } from \"react-intl\"\nimport { Badge } from \"@chakra-ui/react\"\n\n// Data\nimport layer2Data from \"../data/layer-2/layer-2.json\"\n\n// Components\nimport ButtonLink from \"../components/ButtonLink\"\nimport Card from \"../components/Card\"\nimport ExpandableCard from \"../components/ExpandableCard\"\nimport FeedbackCard from \"../components/FeedbackCard\"\nimport Icon from \"../components/Icon\"\nimport InfoBanner from \"../components/InfoBanner\"\nimport Layer2Onboard from \"../components/Layer2/Layer2Onboard\"\nimport Layer2ProductCard from \"../components/Layer2ProductCard\"\nimport Link from \"../components/Link\"\nimport OrderedList from \"../components/OrderedList\"\nimport PageHero from \"../components/PageHero\"\nimport PageMetadata from \"../components/PageMetadata\"\nimport ProductList from \"../components/ProductList\"\nimport QuizWidget from \"../components/Quiz/QuizWidget\"\nimport Tooltip from \"../components/Tooltip\"\nimport Translation from \"../components/Translation\"\nimport { CardGrid, Content, Page } from \"../components/SharedStyledComponents\"\n\n// Utils\nimport { getData } from \"../utils/cache\"\nimport {\n  translateMessageId,\n  getLocaleForNumberFormat,\n  TranslationKey,\n} from \"../utils/translations\"\nimport { Lang } from \"../utils/languages\"\nimport { getImage } from \"../utils/image\"\n\n// Constants\nimport { GATSBY_FUNCTIONS_PATH } from \"../constants\"\n\n// Styles\n\nconst HeroBackground = styled.div`\n  width: 100%;\n  background: ${(props) => props.theme.colors.layer2Gradient};\n`\n\nconst HeroContainer = styled.div`\n  width: 100%;\n`\n\nconst Hero = styled(PageHero)`\n  padding-bottom: 2rem;\n`\n\nconst PaddedContent = styled(Content)`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n`\n\nconst LightGrayContent = styled(PaddedContent)`\n  background: ${(props) => props.theme.colors.layer2ContentSecondary};\n`\n\nconst FlexContainer = styled.div<{ flexPercent: string | number }>`\n  flex: ${(props) => props.flexPercent}%;\n  @media (max-width: ${({ theme }) => theme.breakpoints.m}) {\n    flex: 100%;\n  }\n`\n\nconst Flex50 = styled.div`\n  flex: 50%;\n  @media (max-width: ${({ theme }) => theme.breakpoints.m}) {\n    flex: 100%;\n  }\n`\n\nconst StyledIcon = styled(Icon)`\n  fill: ${(props) => props.theme.colors.text};\n  margin-right: 0.5rem;\n  opacity: 0.8;\n  @media (max-width: ${({ theme }) => theme.breakpoints.l}) {\n  }\n  &:hover,\n  &:active,\n  &:focus {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst TwoColumnContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 4rem;\n  @media (max-width: ${({ theme }) => theme.breakpoints.l}) {\n    flex-direction: column;\n    align-items: flex-start;\n    margin-left: 0rem;\n    margin-right: 0rem;\n  }\n`\n\nconst InfoGrid = styled(CardGrid)`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(min(100%, 340px), 1fr));\n  gap: 1rem 2rem;\n  & > div {\n    height: fit-content;\n    &:hover {\n      transition: 0.1s;\n      transform: scale(1.01);\n      img {\n        transition: 0.1s;\n        transform: scale(1.1);\n      }\n    }\n  }\n`\n\nconst RollupCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background: ${(props) => props.theme.colors.ednBackground};\n  border-radius: 2px;\n  border: 1px solid ${(props) => props.theme.colors.lightBorder};\n  padding: 1.5rem;\n  flex: 50%;\n  @media (max-width: ${({ theme }) => theme.breakpoints.m}) {\n    flex: 100%;\n  }\n`\n\nconst StatsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  margin-bottom: 4rem;\n  @media (max-width: ${({ theme }) => theme.breakpoints.m}) {\n    flex-direction: column;\n  }\n`\n\nconst StatBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 33%;\n  padding: 0 20px;\n  text-align: center;\n  align-content: center;\n  justify-content: center;\n  @media (max-width: ${({ theme }) => theme.breakpoints.m}) {\n    flex: 100%;\n  }\n`\n\nconst StatPrimary = styled.p`\n  font-weight: bold;\n  font-size: ${(props) => props.theme.fontSizes.xl};\n  color: ${(props) => props.theme.colors.primary};\n  font-family: monospace;\n`\n\nconst StatSpan = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 0.5rem;\n`\n\nconst StatDescription = styled.p`\n  opacity: 0.8;\n  margin: 0;\n`\n\nconst StatDivider = styled.div`\n  border-left: 1px solid ${({ theme }) => theme.colors.homeDivider};\n  max-height: 100px;\n  @media (max-width: ${({ theme }) => theme.breakpoints.m}) {\n    border-left: none;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.homeDivider};\n    width: 100%;\n    height: 0%;\n    margin: 2rem 0;\n  }\n`\ninterface L2DataResponseItem {\n  daily: {\n    data: Array<[string, number, number]>\n  }\n}\ninterface L2DataResponse {\n  layers2s: L2DataResponseItem\n  combined: L2DataResponseItem\n  bridges: L2DataResponseItem\n}\n\ninterface FeeDataResponse {\n  data: Array<{ id: string; results: { feeTransferEth: number } }>\n}\n\nconst Layer2Page = ({ data }: PageProps<Queries.Layer2PageQuery>) => {\n  const intl = useIntl()\n  const [tvl, setTVL] = useState(\"loading...\")\n  const [percentChangeL2, setL2PercentChange] = useState(\"loading...\")\n  const [averageFee, setAverageFee] = useState(\"loading...\")\n\n  useEffect(() => {\n    const localeForStatsBoxNumbers = getLocaleForNumberFormat(\n      intl.locale as Lang\n    )\n\n    const fetchL2Beat = async (): Promise<void> => {\n      try {\n        const l2BeatData = await getData<L2DataResponse>(\n          `${GATSBY_FUNCTIONS_PATH}/l2beat`\n        )\n\n        const dailyData = l2BeatData.layers2s.daily.data\n\n        // formatted TVL from L2beat API formatted\n        const TVL = new Intl.NumberFormat(localeForStatsBoxNumbers, {\n          style: \"currency\",\n          currency: \"USD\",\n          notation: \"compact\",\n          minimumSignificantDigits: 2,\n          maximumSignificantDigits: 3,\n        }).format(dailyData[dailyData.length - 1][1])\n\n        setTVL(`${TVL}`)\n        // Calculate percent change ((new value - old value) / old value) *100)\n        const percentage =\n          ((dailyData[dailyData.length - 1][1] -\n            dailyData[dailyData.length - 31][1]) /\n            dailyData[dailyData.length - 31][1]) *\n          100\n        setL2PercentChange(\n          percentage > 0\n            ? `+${percentage.toFixed(2)}%`\n            : `${percentage.toFixed(2)}%`\n        )\n      } catch (error) {\n        console.error(error)\n        setTVL(\"Error, please refresh.\")\n        setL2PercentChange(\"Error, please refresh.\")\n      }\n    }\n    fetchL2Beat()\n\n    const fetchCryptoStats = async (): Promise<void> => {\n      try {\n        // Average eth transfer fee from L2's supported by cryptostats API\n        const feeDataResponse = await getData<FeeDataResponse>(\n          \"https://api.cryptostats.community/api/v1/l2-fees/feeTransferEth?metadata=false\"\n        )\n\n        // filtering out L2's we arent listing\n        const feeData = feeDataResponse.data.filter((l2) => l2.id !== \"hermez\")\n\n        const feeAverage =\n          feeData.reduce(\n            (acc, curr) => (acc += curr.results.feeTransferEth),\n            0\n          ) / feeData.length\n\n        const intlFeeAverage = new Intl.NumberFormat(localeForStatsBoxNumbers, {\n          style: \"currency\",\n          currency: \"USD\",\n          notation: \"compact\",\n          minimumSignificantDigits: 2,\n          maximumSignificantDigits: 3,\n        }).format(feeAverage)\n        setAverageFee(`${intlFeeAverage}`)\n      } catch (error) {\n        setAverageFee(\"Error, please refresh.\")\n        console.error(error)\n      }\n    }\n    fetchCryptoStats()\n  }, [intl.locale])\n\n  const heroContent = {\n    title: translateMessageId(\"layer-2-hero-title\", intl),\n    header: translateMessageId(\"layer-2-hero-header\", intl),\n    subtitle: translateMessageId(\"layer-2-hero-subtitle\", intl),\n    image: getImage(data.heroImage)!,\n    alt: translateMessageId(\"layer-2-hero-alt-text\", intl),\n    buttons: [\n      {\n        content: translateMessageId(\"layer-2-hero-button-1\", intl),\n        toId: \"what-is-layer-2\",\n      },\n      {\n        content: translateMessageId(\"layer-2-hero-button-2\", intl),\n        toId: \"use-layer-2\",\n        variant: \"outline\",\n      },\n      {\n        content: translateMessageId(\"layer-2-hero-button-3\", intl),\n        toId: \"how-to-get-onto-layer-2\",\n        variant: \"outline\",\n      },\n    ],\n  }\n\n  const layer2Cards = [\n    {\n      emoji: \":money_with_wings:\",\n      title: translateMessageId(\"layer-2-lower-fees-title\", intl),\n      description: translateMessageId(\"layer-2-lower-fees-description\", intl),\n    },\n    {\n      emoji: \":closed_lock_with_key:\",\n      title: translateMessageId(\"layer-2-maintain-security-title\", intl),\n      description: translateMessageId(\n        \"layer-2-maintain-security-description\",\n        intl\n      ),\n    },\n    {\n      emoji: \":hammer_and_wrench:\",\n      title: translateMessageId(\"layer-2-expand-use-cases-title\", intl),\n      description: translateMessageId(\n        \"layer-2-expand-use-cases-description\",\n        intl\n      ),\n    },\n  ]\n\n  const rollupCards = [\n    {\n      image: getImage(data.optimisticRollup),\n      title: translateMessageId(\"layer-2-optimistic-rollups-title\", intl),\n      description: translateMessageId(\n        \"layer-2-optimistic-rollups-description\",\n        intl\n      ),\n      childSentence: translateMessageId(\n        \"layer-2-optimistic-rollups-childSentance\",\n        intl\n      ),\n      childLink: \"/developers/docs/scaling/optimistic-rollups/\",\n    },\n    {\n      image: getImage(data.zkRollup),\n      title: translateMessageId(\"layer-2-zk-rollups-title\", intl),\n      description: translateMessageId(\"layer-2-zk-rollups-description\", intl),\n      childSentence: translateMessageId(\n        \"layer-2-zk-rollups-childSentance\",\n        intl\n      ),\n      childLink: \"/developers/docs/scaling/zk-rollups/\",\n    },\n  ]\n\n  const toolsData = {\n    information: [\n      {\n        title: \"L2BEAT\",\n        description: translateMessageId(\n          \"layer-2-tools-l2beat-description\",\n          intl\n        ),\n        link: \"https://l2beat.com\",\n        image: getImage(data.l2beat),\n        alt: \"L2BEAT\",\n      },\n      {\n        title: \"L2 Fees\",\n        description: translateMessageId(\n          \"layer-2-tools-l2fees-description\",\n          intl\n        ),\n        link: \"https://l2fees.info\",\n        image: getImage(data.doge),\n        alt: \"L2 Fees\",\n      },\n      {\n        title: \"Chainlist\",\n        description: translateMessageId(\n          \"layer-2-tools-chainlist-description\",\n          intl\n        ),\n        link: \"https://chainlist.org\",\n        image: getImage(data.doge),\n        alt: \"Chainlist\",\n      },\n    ],\n    walletManagers: [\n      {\n        title: \"Zapper\",\n        description: translateMessageId(\n          \"layer-2-tools-zapper-description\",\n          intl\n        ),\n        link: \"https://zapper.fi/\",\n        image: getImage(data.zapper),\n        alt: \"Zapper\",\n      },\n      {\n        title: \"Zerion\",\n        description: translateMessageId(\n          \"layer-2-tools-zerion-description\",\n          intl\n        ),\n        link: \"https://zerion.io\",\n        image: getImage(data.zerion),\n        alt: \"Zerion\",\n      },\n      {\n        title: \"DeBank\",\n        description: translateMessageId(\n          \"layer-2-tools-debank-description\",\n          intl\n        ),\n        link: \"https://debank.com\",\n        image: getImage(data.debank),\n        alt: \"DeBank\",\n      },\n    ],\n  }\n\n  const layer2DataCombined = [...layer2Data.optimistic, ...layer2Data.zk]\n\n  const tooltipContent = (metric: {\n    apiUrl: string\n    apiProvider: string\n  }): JSX.Element => (\n    <div>\n      <Translation id=\"data-provided-by\" />{\" \"}\n      <Link to={metric.apiUrl}>{metric.apiProvider}</Link>\n    </div>\n  )\n\n  return (\n    <Page>\n      <PageMetadata\n        title={\"Layer 2\"}\n        description={\"Introduction page to layer 2\"}\n      />\n\n      <HeroBackground>\n        <HeroContainer>\n          <Hero content={heroContent} isReverse />\n        </HeroContainer>\n\n        <PaddedContent>\n          <StatsContainer>\n            <StatBox>\n              <StatPrimary>{tvl}</StatPrimary>\n              <StatSpan>\n                <StatDescription>\n                  <Translation id=\"layer-2-statsbox-1\" />\n                </StatDescription>\n                <Tooltip\n                  content={tooltipContent({\n                    apiUrl: \"https://l2beat.com/\",\n                    apiProvider: \"L2BEAT\",\n                  })}\n                >\n                  <StyledIcon name=\"info\" />\n                </Tooltip>\n              </StatSpan>\n            </StatBox>\n            <StatDivider />\n            <StatBox>\n              <StatPrimary>{averageFee}</StatPrimary>\n              <StatSpan>\n                <StatDescription>\n                  <Translation id=\"layer-2-statsbox-2\" />\n                </StatDescription>\n                <Tooltip\n                  content={tooltipContent({\n                    apiUrl: \"https://cryptostats.community/\",\n                    apiProvider: \"CryptoStats\",\n                  })}\n                >\n                  <StyledIcon name=\"info\" />\n                </Tooltip>\n              </StatSpan>\n            </StatBox>\n            <StatDivider />\n            <StatBox>\n              <StatPrimary>{percentChangeL2}</StatPrimary>\n              <StatSpan>\n                <StatDescription>\n                  <Translation id=\"layer-2-statsbox-3\" />\n                </StatDescription>\n                <Tooltip\n                  content={tooltipContent({\n                    apiUrl: \"https://l2beat.com/\",\n                    apiProvider: \"L2BEAT\",\n                  })}\n                >\n                  <StyledIcon name=\"info\" />\n                </Tooltip>\n              </StatSpan>\n            </StatBox>\n          </StatsContainer>\n        </PaddedContent>\n      </HeroBackground>\n\n      <PaddedContent id=\"what-is-layer-2\">\n        <TwoColumnContent>\n          <Flex50>\n            <h2>\n              <Translation id=\"layer-2-what-is-layer-2-title\" />\n            </h2>\n            <p>\n              <Translation id=\"layer-2-what-is-layer-2-1\" />\n            </p>\n            <p>\n              <Translation id=\"layer-2-what-is-layer-2-2\" />\n            </p>\n          </Flex50>\n          <Flex50>\n            <GatsbyImage\n              image={getImage(data.whatIsEthereum)!}\n              alt=\"\"\n              style={{ maxHeight: \"400px\" }}\n              objectFit=\"contain\"\n            />\n          </Flex50>\n        </TwoColumnContent>\n      </PaddedContent>\n      <LightGrayContent>\n        <h2>\n          <Translation id=\"layer-2-what-is-layer-1-title\" />\n        </h2>\n        <TwoColumnContent>\n          <Flex50>\n            <p>\n              <Translation id=\"layer-2-what-is-layer-1-1\" />\n            </p>\n            <p>\n              <Translation id=\"layer-2-what-is-layer-1-2\" />\n            </p>\n          </Flex50>\n          <Flex50>\n            <p>\n              <Translation id=\"layer-2-what-is-layer-1-list-title\" />\n            </p>\n            <OrderedList\n              listData={[\n                <p>\n                  <Translation id=\"layer-2-what-is-layer-1-list-1\" />\n                </p>,\n                <p>\n                  <Translation id=\"layer-2-what-is-layer-1-list-2\" />\n                </p>,\n                <p>\n                  <Translation id=\"layer-2-what-is-layer-1-list-3\" />\n                </p>,\n                <p>\n                  <Translation id=\"layer-2-what-is-layer-1-list-4\" />\n                </p>,\n              ]}\n            />\n            <p>\n              <Translation id=\"layer-2-what-is-layer-1-list-link-1\" />{\" \"}\n              <Link to=\"/what-is-ethereum/\">\n                <Translation id=\"layer-2-what-is-layer-1-list-link-2\" />\n              </Link>\n            </p>\n          </Flex50>\n        </TwoColumnContent>\n      </LightGrayContent>\n\n      <PaddedContent>\n        <TwoColumnContent>\n          <FlexContainer\n            flexPercent=\"50\"\n            style={{\n              display: \"flex\",\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <GatsbyImage\n              image={getImage(data.dao)!}\n              alt=\"\"\n              style={{ width: \"100%\" }}\n              objectFit=\"contain\"\n            />\n          </FlexContainer>\n          <FlexContainer flexPercent=\"50\">\n            <h2>\n              <Translation id=\"layer-2-why-do-we-need-layer-2-title\" />\n            </h2>\n            <p>\n              <Translation id=\"layer-2-why-do-we-need-layer-2-1\" />\n            </p>\n            <p>\n              <Translation id=\"layer-2-why-do-we-need-layer-2-2\" />\n            </p>\n\n            <h3>\n              <Translation id=\"layer-2-why-do-we-need-layer-2-scalability\" />\n            </h3>\n            <p>\n              <Translation id=\"layer-2-why-do-we-need-layer-2-scalability-1\" />\n            </p>\n            <p>\n              <Translation id=\"layer-2-why-do-we-need-layer-2-scalability-2\" />\n            </p>\n            <Link to=\"/upgrades/vision/\">\n              <Translation id=\"layer-2-why-do-we-need-layer-2-scalability-3\" />\n            </Link>\n          </FlexContainer>\n        </TwoColumnContent>\n        <h3>\n          <Translation id=\"layer-2-benefits-of-layer-2-title\" />\n        </h3>\n        <InfoGrid>\n          {layer2Cards.map(({ emoji, title, description }, idx) => (\n            <Card\n              description={description}\n              title={title}\n              emoji={emoji}\n              key={idx}\n            />\n          ))}\n        </InfoGrid>\n      </PaddedContent>\n\n      <PaddedContent>\n        <TwoColumnContent>\n          <FlexContainer flexPercent=\"50\">\n            <h2>\n              <Translation id=\"layer-2-how-does-layer-2-work-title\" />\n            </h2>\n            <p>\n              <Translation id=\"layer-2-how-does-layer-2-work-1\" />\n            </p>\n            <p>\n              <Translation id=\"layer-2-how-does-layer-2-work-2\" />\n            </p>\n            <h3>\n              <Translation id=\"layer-2-rollups-title\" />\n            </h3>\n            <p>\n              <Translation id=\"layer-2-rollups-1\" />\n            </p>\n            <p>\n              <Translation id=\"layer-2-rollups-2\" />\n            </p>\n          </FlexContainer>\n          <FlexContainer\n            flexPercent=\"50\"\n            style={{\n              display: \"flex\",\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <GatsbyImage\n              image={getImage(data.rollup)!}\n              alt=\"\"\n              style={{ width: \"100%\" }}\n              objectFit=\"contain\"\n            />\n          </FlexContainer>\n        </TwoColumnContent>\n        <TwoColumnContent>\n          {rollupCards.map(\n            ({ image, title, description, childSentence, childLink }) => (\n              <RollupCard key={title}>\n                <GatsbyImage\n                  image={image!}\n                  alt=\"\"\n                  objectPosition=\"0\"\n                  objectFit=\"contain\"\n                />\n                <h3>{title}</h3>\n                <p>{description}</p>\n                <p>\n                  <Link to={childLink}>{childSentence}</Link>\n                </p>\n              </RollupCard>\n            )\n          )}\n        </TwoColumnContent>\n      </PaddedContent>\n\n      <PaddedContent>\n        <InfoBanner isWarning={true}>\n          <h2>\n            <Translation id=\"layer-2-dyor-title\" />\n          </h2>\n          <p>\n            <Translation id=\"layer-2-dyor-1\" />\n          </p>\n          <p>\n            <Translation id=\"layer-2-dyor-2\" />\n          </p>\n          <p>\n            <ButtonLink to=\"https://l2beat.com/?view=risk\">\n              <Translation id=\"layer-2-dyor-3\" />\n            </ButtonLink>\n          </p>\n        </InfoBanner>\n      </PaddedContent>\n\n      <PaddedContent id=\"use-layer-2\">\n        <h2>\n          <Translation id=\"layer-2-use-layer-2-title\" />\n        </h2>\n        <p>\n          <Translation id=\"layer-2-use-layer-2-1\" />\n        </p>\n        <p>\n          <Translation id=\"layer-2-contract-accounts\" />\n        </p>\n        <h3>\n          <Translation id=\"layer-2-use-layer-2-generalized-title\" />\n        </h3>\n        <p>\n          <Translation id=\"layer-2-use-layer-2-generalized-1\" />\n        </p>\n        <CardGrid>\n          {layer2DataCombined\n            .filter((l2) => !l2.purpose.indexOf(\"universal\"))\n            .map((l2, idx) => {\n              return (\n                <Layer2ProductCard\n                  key={idx}\n                  background={l2.background}\n                  image={getImage(data[l2.imageKey])!}\n                  description={translateMessageId(\n                    l2.descriptionKey as TranslationKey,\n                    intl\n                  )}\n                  url={l2.website}\n                  note={translateMessageId(l2.noteKey as TranslationKey, intl)}\n                  name={l2.name}\n                  bridge={l2.bridge}\n                  ecosystemPortal={l2.ecosystemPortal}\n                  tokenLists={l2.tokenLists}\n                />\n              )\n            })}\n        </CardGrid>\n      </PaddedContent>\n\n      <PaddedContent>\n        <h3>\n          <Translation id=\"layer-2-use-layer-2-application-specific-title\" />\n        </h3>\n        <p>\n          <Translation id=\"layer-2-use-layer-2-application-specific-1\" />\n        </p>\n        <CardGrid>\n          {layer2DataCombined\n            .filter((l2) => l2.purpose.indexOf(\"universal\"))\n            .map((l2, idx) => {\n              return (\n                <Layer2ProductCard\n                  key={idx}\n                  background={l2.background}\n                  image={getImage(data[l2.imageKey])!}\n                  description={translateMessageId(\n                    l2.descriptionKey as TranslationKey,\n                    intl\n                  )}\n                  url={l2.website}\n                  note={translateMessageId(l2.noteKey as TranslationKey, intl)}\n                  name={l2.name}\n                  bridge={l2.bridge}\n                  ecosystemPortal={l2.ecosystemPortal}\n                  tokenLists={l2.tokenLists}\n                >\n                  {l2.purpose.map((purpose, index) => (\n                    <Badge key={index} me={2}>\n                      {purpose}\n                    </Badge>\n                  ))}\n                </Layer2ProductCard>\n              )\n            })}\n        </CardGrid>\n      </PaddedContent>\n\n      <PaddedContent>\n        <h2>\n          <Translation id=\"layer-2-sidechains-title\" />\n        </h2>\n        <TwoColumnContent>\n          <Flex50>\n            <p>\n              <Translation id=\"layer-2-sidechains-1\" />\n            </p>\n            <p>\n              <Translation id=\"layer-2-sidechains-2\" />\n            </p>\n            <p>\n              <Link to=\"/developers/docs/scaling/sidechains/\">\n                <Translation id=\"layer-2-more-on-sidechains\" />\n              </Link>\n            </p>\n            <p>\n              <Link to=\"/developers/docs/scaling/validium/\">\n                <Translation id=\"layer-2-more-on-validiums\" />\n              </Link>\n            </p>\n          </Flex50>\n          <Flex50>\n            <p>\n              <Translation id=\"layer-2-sidechains-4\" />\n            </p>\n            <p>\n              <Translation id=\"layer-2-sidechains-5\" />\n            </p>\n          </Flex50>\n        </TwoColumnContent>\n      </PaddedContent>\n\n      <PaddedContent id=\"how-to-get-onto-layer-2\">\n        <Layer2Onboard\n          layer2DataCombined={layer2DataCombined}\n          ethIcon={getImage(data.ethHome)!}\n          ethIconAlt={translateMessageId(\"ethereum-logo\", intl)}\n        />\n      </PaddedContent>\n\n      <PaddedContent>\n        <h2>\n          <Translation id=\"layer-2-tools-title\" />\n        </h2>\n        <TwoColumnContent>\n          <Flex50>\n            <ProductList\n              category=\"Information\"\n              content={toolsData.information}\n            />\n          </Flex50>\n          <Flex50>\n            <ProductList\n              category=\"Wallet managers\"\n              content={toolsData.walletManagers}\n            />\n          </Flex50>\n        </TwoColumnContent>\n      </PaddedContent>\n\n      <PaddedContent>\n        <h2>\n          <Translation id=\"layer-2-faq-title\" />\n        </h2>\n        <ExpandableCard\n          title={`${translateMessageId(\"layer-2-faq-question-1-title\", intl)}`}\n        >\n          <p>\n            <Translation id=\"layer-2-faq-question-1-description-1\" />\n          </p>\n        </ExpandableCard>\n        <ExpandableCard\n          title={`${translateMessageId(\"layer-2-faq-question-2-title\", intl)}`}\n        >\n          <p>\n            <Translation id=\"layer-2-faq-question-2-description-1\" />\n          </p>\n          <p>\n            <Translation id=\"layer-2-faq-question-2-description-2\" />\n          </p>\n          <p>\n            <Translation id=\"layer-2-faq-question-2-description-3\" />\n          </p>\n          <p>\n            <Link to=\"/developers/docs/scaling/optimistic-rollups/\">\n              <Translation id=\"layer-2-more-info-on-optimistic-rollups\" />\n            </Link>\n          </p>\n          <p>\n            <Link to=\"/developers/docs/scaling/zk-rollups/\">\n              <Translation id=\"layer-2-more-info-on-zk-rollups\" />\n            </Link>\n          </p>\n        </ExpandableCard>\n        <ExpandableCard\n          title={`${translateMessageId(\"layer-2-faq-question-3-title\", intl)}`}\n        >\n          <p>\n            <Translation id=\"layer-2-faq-question-3-description-1\" />{\" \"}\n          </p>\n          <p>\n            <Link to=\"/upgrades/sharding/\">\n              <Translation id=\"layer-2-more-on-sharding\" />\n            </Link>\n          </p>\n        </ExpandableCard>\n        <ExpandableCard\n          title={`${translateMessageId(\"layer-2-faq-question-4-title\", intl)}`}\n        >\n          <p>\n            <Translation id=\"layer-2-faq-question-4-description-1\" />\n          </p>\n          <p>\n            <Translation id=\"layer-2-faq-question-4-description-2\" />\n          </p>\n          <p>\n            <Translation id=\"layer-2-faq-question-4-description-3\" />{\" \"}\n          </p>\n          <p>\n            <Link to=\"/bridges/\">\n              <Translation id=\"layer-2-more-on-bridges\" />\n            </Link>\n          </p>\n        </ExpandableCard>\n        <ExpandableCard\n          title={`${translateMessageId(\"layer-2-faq-question-5-title\", intl)}`}\n        >\n          <p>\n            <Translation id=\"layer-2-faq-question-5-description-1\" />{\" \"}\n            <Link to=\"/contributing/adding-layer-2s/\">\n              <Translation id=\"layer-2-faq-question-5-view-listing-policy\" />\n            </Link>\n          </p>\n          <p>\n            <Translation id=\"layer-2-faq-question-5-description-2\" />\n          </p>\n        </ExpandableCard>\n      </PaddedContent>\n\n      <PaddedContent>\n        <h2>\n          <Translation id=\"layer-2-further-reading-title\" />\n        </h2>\n        <ul>\n          <li>\n            <Link to=\"https://ethereum-magicians.org/t/a-rollup-centric-ethereum-roadmap/4698\">\n              <Translation id=\"a-rollup-centric-ethereum-roadmap\" />\n            </Link>{\" \"}\n            <i>- Vitalik Buterin </i>\n          </li>\n          <li>\n            <Link to=\"https://vitalik.ca/general/2021/01/05/rollup.html\">\n              <Translation id=\"an-incomplete-guide-to-rollups\" />\n            </Link>{\" \"}\n            <i>- Vitalik Buterin</i>\n          </li>\n          <li>\n            <Link to=\"https://www.youtube.com/watch?v=DyNbmgkyxJI\">\n              <Translation id=\"polygon-sidechain-vs-ethereum-rollups\" />\n            </Link>{\" \"}\n            <i>- Lex Clips</i>\n          </li>\n          <li>\n            <Link to=\"https://www.youtube.com/watch?v=7pWxCklcNsU\">\n              <Translation id=\"rollups-the-ultimate-ethereum-scaling-strategy\" />\n            </Link>{\" \"}\n            <i>- Finematics</i>\n          </li>\n          <li>\n            <Link to=\"/upgrades/sharding/\">\n              <Translation id=\"scaling-layer-1-with-shard-chains\" />\n            </Link>\n          </li>\n          <li>\n            <Link to=\"https://barnabe.substack.com/p/understanding-rollup-economics-from?s=r\">\n              <Translation id=\"understanding-rollup-economics-from-first-principals\" />\n            </Link>{\" \"}\n            <i>- Barnabé Monnot</i>\n          </li>\n        </ul>\n      </PaddedContent>\n      <PaddedContent>\n        <QuizWidget quizKey=\"layer-2\" />\n      </PaddedContent>\n      <PaddedContent>\n        <FeedbackCard />\n      </PaddedContent>\n    </Page>\n  )\n}\n\nexport default Layer2Page\n\nexport const query = graphql`\n  query Layer2Page {\n    dao: file(relativePath: { eq: \"use-cases/dao-2.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 500\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    doge: file(relativePath: { eq: \"doge-computer.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 624\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    ethBlocks: file(relativePath: { eq: \"developers-eth-blocks.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 624\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    ethHome: file(relativePath: { eq: \"eth-home-icon.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 50\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    financeTransparent: file(relativePath: { eq: \"finance_transparent.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 300\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    heroImage: file(relativePath: { eq: \"layer-2/hero.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: CONSTRAINED, placeholder: BLURRED, quality: 100)\n      }\n    }\n    impact: file(relativePath: { eq: \"impact_transparent.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 300\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    optimisticRollup: file(\n      relativePath: { eq: \"layer-2/optimistic_rollup.png\" }\n    ) {\n      childImageSharp {\n        gatsbyImageData(\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n          width: 122\n        )\n      }\n    }\n    rollup: file(relativePath: { eq: \"layer-2/rollup-2.png\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: CONSTRAINED, placeholder: BLURRED, quality: 100)\n      }\n    }\n    zkRollup: file(relativePath: { eq: \"layer-2/zk_rollup.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n          width: 122\n        )\n      }\n    }\n    whatIsEthereum: file(relativePath: { eq: \"what-is-ethereum.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 624\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    arbitrum: file(relativePath: { eq: \"layer-2/arbitrum.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 100\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    aztec: file(relativePath: { eq: \"layer-2/aztec.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 200\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    boba: file(relativePath: { eq: \"layer-2/boba.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 100\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    chainlist: file(relativePath: { eq: \"layer-2/chainlist.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 100\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    debank: file(relativePath: { eq: \"layer-2/debank.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 100\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n\n    l2beat: file(relativePath: { eq: \"layer-2/l2beat.jpg\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 100\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    loopring: file(relativePath: { eq: \"layer-2/loopring.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 100\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    metis: file(relativePath: { eq: \"layer-2/metis-dark.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 100\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    optimism: file(relativePath: { eq: \"layer-2/optimism.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 100\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    zapper: file(relativePath: { eq: \"layer-2/zapper.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 100\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    zerion: file(relativePath: { eq: \"layer-2/zerion.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 100\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    zkspace: file(relativePath: { eq: \"layer-2/zkspace.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 100\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n    zksync: file(relativePath: { eq: \"layer-2/zksync.png\" }) {\n      childImageSharp {\n        gatsbyImageData(\n          width: 100\n          layout: CONSTRAINED\n          placeholder: BLURRED\n          quality: 100\n        )\n      }\n    }\n  }\n`\n"],"names":["HeroBackground","props","theme","colors","layer2Gradient","HeroContainer","Hero","PageHero","PaddedContent","Content","LightGrayContent","layer2ContentSecondary","FlexContainer","flexPercent","_ref","breakpoints","m","Flex50","_ref2","StyledIcon","Icon","text","_ref3","l","_ref4","primary","TwoColumnContent","_ref5","InfoGrid","CardGrid","RollupCard","ednBackground","lightBorder","_ref6","StatsContainer","_ref7","StatBox","_ref8","StatPrimary","fontSizes","xl","StatSpan","StatDescription","StatDivider","_ref9","homeDivider","_ref10","_ref11","_ref12","data","intl","useIntl","tvl","setTVL","useState","percentChangeL2","setL2PercentChange","averageFee","setAverageFee","useEffect","localeForStatsBoxNumbers","getLocaleForNumberFormat","locale","async","dailyData","getData","GATSBY_FUNCTIONS_PATH","layers2s","daily","TVL","Intl","NumberFormat","style","currency","notation","minimumSignificantDigits","maximumSignificantDigits","format","length","percentage","toFixed","error","console","fetchL2Beat","feeData","filter","l2","id","feeAverage","reduce","acc","curr","results","feeTransferEth","intlFeeAverage","fetchCryptoStats","heroContent","title","translateMessageId","header","subtitle","image","getImage","heroImage","alt","buttons","content","toId","variant","layer2Cards","emoji","description","rollupCards","optimisticRollup","childSentence","childLink","zkRollup","toolsData","information","link","l2beat","doge","walletManagers","zapper","zerion","debank","layer2DataCombined","layer2Data","tooltipContent","metric","___EmotionJSX","Translation","Link","to","apiUrl","apiProvider","Page","PageMetadata","isReverse","Tooltip","name","GatsbyImage","whatIsEthereum","maxHeight","objectFit","OrderedList","listData","display","alignContent","justifyContent","dao","width","map","idx","Card","key","rollup","_ref14","objectPosition","InfoBanner","isWarning","ButtonLink","purpose","indexOf","Layer2ProductCard","background","imageKey","descriptionKey","url","website","note","noteKey","bridge","ecosystemPortal","tokenLists","index","Badge","me","Layer2Onboard","ethIcon","ethHome","ethIconAlt","ProductList","category","ExpandableCard","QuizWidget","quizKey","FeedbackCard"],"sourceRoot":""}