{"version":3,"file":"component---src-pages-upgrades-index-tsx-f8395dc08d945e6fd765.js","mappings":"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","sources":["webpack://ethereum-org-website/./src/components/CardList.tsx","webpack://ethereum-org-website/./src/components/GhostCard.tsx","webpack://ethereum-org-website/./src/components/InfoBanner.tsx","webpack://ethereum-org-website/./src/components/PageHero.tsx","webpack://ethereum-org-website/./src/data/ethUpgradeArticles.ts","webpack://ethereum-org-website/./src/components/UpgradeArticles.tsx","webpack://ethereum-org-website/./src/utils/image.ts"],"sourcesContent":["import React, { ReactNode } from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport {\n  Box,\n  Flex,\n  HStack,\n  LinkBox,\n  LinkOverlay,\n  StackProps,\n  useColorModeValue,\n} from \"@chakra-ui/react\"\n\nimport { ImageProp } from \"../types\"\nimport * as url from \"../utils/url\"\nimport Link from \"./Link\"\n\nexport type CardListItem = {\n  title?: ReactNode\n  description?: ReactNode\n  caption?: ReactNode\n  link?: string\n  id?: string\n} & ImageProp\n\nexport interface IProps {\n  content: Array<CardListItem>\n  clickHandler?: (idx: string | number) => void\n}\n\nconst CardContainer = (props: StackProps) => {\n  return (\n    <HStack\n      spacing={4}\n      p={4}\n      color=\"text\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      _hover={{\n        borderRadius: \"base\",\n        boxShadow: \"0 0 1px var(--eth-colors-primary)\",\n        background: \"tableBackgroundHover\",\n      }}\n      {...props}\n    />\n  )\n}\n\nconst Card = (props: CardListItem & Omit<StackProps, \"title\" | \"id\">) => {\n  const { title, description, caption, link, image, alt, ...rest } = props\n\n  const isLink = !!link\n  const isExternal = url.isExternal(link || \"\")\n\n  const descriptionColor = useColorModeValue(\"gray.500\", \"gray.400\")\n\n  return (\n    <CardContainer {...rest}>\n      {image && <Box as={GatsbyImage} image={image} alt={alt} minW=\"20px\" />}\n      <Flex flex=\"1 1 75%\" direction=\"column\">\n        {isLink ? (\n          <LinkOverlay\n            as={Link}\n            href={link}\n            hideArrow\n            color=\"text\"\n            textDecoration=\"none\"\n            _hover={{ textDecoration: \"none\" }}\n          >\n            {title}\n          </LinkOverlay>\n        ) : (\n          <Box>{title}</Box>\n        )}\n\n        <Box fontSize=\"sm\" mb={0} color={descriptionColor}>\n          {description}\n        </Box>\n      </Flex>\n      {caption && (\n        <Flex flex=\"1 0 25%\" align=\"center\" wrap=\"wrap\" mr={4}>\n          <Box fontSize=\"sm\" mb={0} opacity={0.6}>\n            {caption}\n          </Box>\n        </Flex>\n      )}\n      {isExternal && <Box>â†—</Box>}\n    </CardContainer>\n  )\n}\n\nconst CardList: React.FC<IProps> = ({ content, clickHandler = () => null }) => (\n  <Box bg=\"background\" width=\"full\">\n    {content.map((listItem, idx) => {\n      const { link, id } = listItem\n      const isLink = !!link\n\n      return isLink ? (\n        <LinkBox key={id || idx}>\n          <Card {...listItem} />\n        </LinkBox>\n      ) : (\n        <Card\n          key={idx}\n          onClick={() => clickHandler(idx)}\n          mb={4}\n          {...listItem}\n        />\n      )\n    })}\n  </Box>\n)\n\nexport default CardList\n","import React from \"react\"\nimport { Box } from \"@chakra-ui/react\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  className?: string\n}\n\nconst GhostCard: React.FC<IProps> = ({ children, className }) => (\n  <Box position=\"relative\" mt=\"2\" alignSelf=\"stretch\" className={className}>\n    <Box\n      zIndex=\"hide\"\n      position=\"absolute\"\n      backgroundColor=\"ghostCardGhost\"\n      bottom=\"2\"\n      left=\"2\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      borderRadius=\"2px\"\n      height=\"full\"\n      width=\"full\"\n    />\n    <Box\n      className=\"ghost-card-base\"\n      height=\"full\"\n      width=\"full\"\n      borderRadius=\"2px\"\n      zIndex={2}\n      padding=\"6\"\n      background=\"ghostCardBackground\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      textAlign=\"left\"\n    >\n      {children}\n    </Box>\n  </Box>\n)\n\nexport default GhostCard\n","import React from \"react\"\nimport { Flex } from \"@chakra-ui/react\"\nimport Emoji from \"./Emoji\"\n\nexport interface IProps {\n  children?: React.ReactNode\n  className?: string\n  emoji?: string\n  isWarning?: boolean\n  shouldCenter?: boolean\n  shouldSpaceBetween?: boolean\n}\n\nconst InfoBanner: React.FC<IProps> = ({\n  children,\n  className,\n  emoji,\n  isWarning = false,\n  shouldCenter = false,\n  shouldSpaceBetween = false,\n  ...props\n}) => {\n  const banner = (\n    <Flex\n      align=\"center\"\n      p={6}\n      borderRadius={\"sm\"}\n      maxW={shouldCenter ? \"55rem\" : \"100%\"}\n      color=\"black300\"\n      bg={isWarning ? \"warning\" : \"infoBanner\"}\n      direction={{ base: \"column\", sm: \"row\" }}\n      {...props}\n    >\n      {emoji && (\n        <Emoji\n          flexGrow=\"0\"\n          flexShrink=\"0\"\n          mr={{ base: 0, sm: 6 }}\n          mb={{ base: 2, sm: 0 }}\n          alignSelf={{ base: \"flex-start\", sm: \"auto\" }}\n          text={emoji}\n          fontSize=\"4xl\"\n        />\n      )}\n      <Flex\n        display={{ base: \"block\", sm: shouldSpaceBetween ? \"flex\" : \"block\" }}\n        align={shouldSpaceBetween ? \"center\" : \"auto\"}\n        w={shouldSpaceBetween ? \"100%\" : \"auto\"}\n        justify={shouldSpaceBetween ? \"space-between\" : \"auto\"}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  )\n  return shouldCenter ? <Flex justify=\"center\">{banner}</Flex> : banner\n}\n\nexport default InfoBanner\n","import React, { ReactNode } from \"react\"\nimport { Box, Flex, Heading, Wrap, WrapItem } from \"@chakra-ui/react\"\n\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\n\nimport ButtonLink, { IProps as IButtonLinkProps } from \"./ButtonLink\"\nimport Button, { IProps as IButtonProps } from \"./Button\"\n\nexport interface IButtonLink extends IButtonLinkProps {\n  content: ReactNode\n}\n\nexport interface IButton extends IButtonProps {\n  content: ReactNode\n}\n\nexport interface IContent {\n  buttons?: Array<IButtonLink | IButton>\n  title: ReactNode\n  header: ReactNode\n  subtitle: ReactNode\n  image: IGatsbyImageData\n  alt: string\n}\n\nexport interface IProps {\n  content: IContent\n  isReverse?: boolean\n  children?: ReactNode\n  className?: string\n}\n\nfunction isButtonLink(button: IButton | IButtonLink): button is IButtonLink {\n  return (button as IButtonLink).to !== undefined\n}\n\nconst PageHero: React.FC<IProps> = ({\n  content,\n  isReverse = false,\n  children,\n  className,\n}) => {\n  const { buttons, title, header, subtitle, image, alt } = content\n  return (\n    <Box py={4} px={8} width=\"full\">\n      <Flex\n        justifyContent=\"space-between\"\n        mt={8}\n        px={{ base: 0, lg: 16 }}\n        direction={{ base: isReverse ? \"column\" : \"column-reverse\", lg: \"row\" }}\n        className={className}\n      >\n        <Box\n          maxW={{ base: \"full\", lg: \"container.sm\" }}\n          py={{ base: 16, lg: 32 }}\n          pl={{ base: 0, lg: 8 }}\n          mr={4}\n        >\n          <Heading\n            as=\"h1\"\n            textTransform=\"uppercase\"\n            fontSize=\"md\"\n            fontWeight=\"normal\"\n            mb={4}\n            color=\"text300\"\n            lineHeight={1.4}\n          >\n            {title}\n          </Heading>\n          <Heading\n            as=\"h2\"\n            fontWeight=\"bold\"\n            fontSize={{ base: \"2.5rem\", lg: \"5xl\" }}\n            maxW=\"full\"\n            mb={0}\n            color=\"text00\"\n            lineHeight={1.4}\n          >\n            {header}\n          </Heading>\n          <Box\n            fontSize={{ base: \"xl\", lg: \"2xl\" }}\n            lineHeight={1.4}\n            color=\"text200\"\n            mt={4}\n            mb={8}\n          >\n            {subtitle}\n          </Box>\n          {buttons && (\n            <Wrap spacing={2}>\n              {buttons.map((button, idx) => {\n                if (isButtonLink(button)) {\n                  return (\n                    <WrapItem>\n                      <ButtonLink\n                        key={idx}\n                        variant={button.variant}\n                        to={button.to}\n                      >\n                        {button.content}\n                      </ButtonLink>\n                    </WrapItem>\n                  )\n                }\n\n                if (button.toId) {\n                  return (\n                    <WrapItem>\n                      <Button\n                        key={idx}\n                        variant={button.variant}\n                        toId={button.toId}\n                      >\n                        {button.content}\n                      </Button>\n                    </WrapItem>\n                  )\n                }\n              })}\n            </Wrap>\n          )}\n          {children}\n        </Box>\n        <Box\n          as={GatsbyImage}\n          flex=\"1 1 50%\"\n          alignSelf=\"center\"\n          mt={{ base: 0, lg: 12 }}\n          ml={{ base: 0, lg: 12 }}\n          w=\"full\"\n          maxWidth={{ base: \"560px\", lg: \"624px\" }}\n          image={image}\n          imgStyle={{\n            objectFit: \"contain\",\n          }}\n          alt={alt}\n          loading=\"eager\"\n        />\n      </Flex>\n    </Box>\n  )\n}\n\nexport default PageHero\n","interface Article {\n  title: string\n  description: string\n  link: string\n}\n\n/** Articles by Danny Ryan (Ethereum Foundation) */\nexport const dannyArticles: Array<Article> = [\n  {\n    title: \"Finalized no. 37\",\n    description: \"26 August 2022\",\n    link: \"https://blog.ethereum.org/2022/08/26/finalized-no-37/\",\n  },\n  {\n    title: \"Finalized no. 36\",\n    description: \"12 August 2022\",\n    link: \"https://blog.ethereum.org/2022/08/12/finalized-no-36/\",\n  },\n  {\n    title: \"Finalized no. 35\",\n    description: \"19 May 2022\",\n    link: \"https://blog.ethereum.org/2022/05/19/finalized-no-35/\",\n  },\n  {\n    title: \"Finalized no. 34\",\n    description: \"23 March 2022\",\n    link: \"https://blog.ethereum.org/2022/03/23/finalized-no-34/\",\n  },\n  {\n    title: \"Finalized no. 33\",\n    description: \"31 January 2022\",\n    link: \"https://blog.ethereum.org/2022/01/31/finalized-no-33/\",\n  },\n]\n\n/** Articles by Ben Edgington (PegaSys, ConsenSys) */\nexport const benArticles: Array<Article> = [\n  {\n    title: \"Whatâ€™s New in Eth2 â€“ #100\",\n    description: \"26 August 2022\",\n    link: \"https://hackmd.io/@benjaminion/eth2_news/https%3A%2F%2Fhackmd.io%2F%40benjaminion%2Fwnie2_220826\",\n  },\n  {\n    title: \"Whatâ€™s New in Eth2 â€“ #99\",\n    description: \"12 August 2022\",\n    link: \"https://hackmd.io/@benjaminion/eth2_news/https%3A%2F%2Fhackmd.io%2F%40benjaminion%2Fwnie2_220812\",\n  },\n  {\n    title: \"Whatâ€™s New in Eth2 â€“ #98\",\n    description: \"29 July 2022\",\n    link: \"https://hackmd.io/@benjaminion/eth2_news/https%3A%2F%2Fhackmd.io%2F%40benjaminion%2Fwnie2_220729\",\n  },\n  {\n    title: \"Whatâ€™s New in Eth2 â€“ #97\",\n    description: \"15 July 2022\",\n    link: \"https://hackmd.io/@benjaminion/eth2_news/https%3A%2F%2Fhackmd.io%2F%40benjaminion%2Fwnie2_220715\",\n  },\n  {\n    title: \"Whatâ€™s New in Eth2 â€“ #96\",\n    description: \"1 July 2022\",\n    link: \"https://hackmd.io/@benjaminion/eth2_news/https%3A%2F%2Fhackmd.io%2F%40benjaminion%2Fwnie2_220701\",\n  },\n]\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { dannyArticles, benArticles } from \"../data/ethUpgradeArticles\"\n\nimport CardList from \"./CardList\"\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    flex-direction: column;\n  }\n`\n\nconst LeftColumn = styled.div`\n  flex: 1 1 45%;\n  min-width: 300px;\n  margin-right: 1rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-right: 0rem;\n  }\n`\n\nconst RightColumn = styled.div`\n  flex: 1 1 45%;\n  min-width: 300px;\n  margin-left: 1rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    margin-left: 0rem;\n  }\n`\n\nconst UpgradeArticles: React.FC = () => (\n  <Container>\n    <LeftColumn>\n      <h4>Danny Ryan (Ethereum Foundation)</h4>\n      <CardList content={dannyArticles} />\n    </LeftColumn>\n    <RightColumn>\n      <h4>Ben Edgington (PegaSys, ConsenSys)</h4>\n      <CardList content={benArticles} />\n    </RightColumn>\n  </Container>\n)\n\nexport default UpgradeArticles\n","import { Node } from \"gatsby\"\nimport {\n  getSrc as getGatsbySrc,\n  getImage as getGatsbyImage,\n  IGatsbyImageData,\n} from \"gatsby-plugin-image\"\nimport {\n  IGatsbyImageDataParent,\n  ImageDataLike as GatsbyImageDataLike,\n} from \"gatsby-plugin-image/dist/src/components/hooks\"\n\ntype FileNodeNull = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>> | null\n}\n\nexport type ImageDataLike = GatsbyImageDataLike | FileNodeNull\n\nconst isFileNodeNull = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: FileNodeNull | any\n): node is FileNodeNull => node?.childImageSharp === null\n\n/**\n * Custom temporary `getImage` function to accept `null` values in the passed\n * node image.\n *\n * This was partially fixed in https://github.com/gatsbyjs/gatsby/issues/35748#issuecomment-1188884754\n * but it still does not accept null values which are generated by GraphQL Typegen\n */\nexport function getImage(\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined {\n  if (!node) {\n    return\n  }\n\n  if (isFileNodeNull(node)) {\n    return\n  }\n\n  return getGatsbyImage(node)\n}\n\n/**\n * Custom temporary `getSrc` function to accept `null` values in the passed\n * node image.\n */\nexport function getSrc(node: ImageDataLike | null): string | undefined {\n  if (!node) {\n    return\n  }\n\n  if (isFileNodeNull(node)) {\n    return\n  }\n\n  return getGatsbySrc(node)\n}\n"],"names":["CardContainer","props","___EmotionJSX","HStack","spacing","p","color","border","borderColor","_hover","borderRadius","boxShadow","background","Card","title","description","caption","link","image","alt","rest","isLink","isExternal","url","descriptionColor","useColorModeValue","Box","as","GatsbyImage","minW","Flex","flex","direction","LinkOverlay","Link","href","hideArrow","textDecoration","fontSize","mb","align","wrap","mr","opacity","_ref","content","clickHandler","bg","width","map","listItem","idx","id","LinkBox","key","onClick","children","className","position","mt","alignSelf","zIndex","backgroundColor","bottom","left","height","padding","textAlign","emoji","isWarning","shouldCenter","shouldSpaceBetween","banner","maxW","base","sm","Emoji","flexGrow","flexShrink","text","display","w","justify","isReverse","buttons","header","subtitle","py","px","justifyContent","lg","pl","Heading","textTransform","fontWeight","lineHeight","Wrap","button","undefined","to","isButtonLink","WrapItem","ButtonLink","variant","toId","Button","ml","maxWidth","imgStyle","objectFit","loading","dannyArticles","benArticles","Container","theme","breakpoints","l","LeftColumn","RightColumn","CardList","isFileNodeNull","node","childImageSharp","getImage","getGatsbyImage","getSrc","getGatsbySrc"],"sourceRoot":""}